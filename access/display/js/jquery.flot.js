/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['access/display/js/jquery.flot.js']) {
  _$jscoverage['access/display/js/jquery.flot.js'] = [];
  _$jscoverage['access/display/js/jquery.flot.js'][31] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][34] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][35] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][41] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][160] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][161] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][162] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][163] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][164] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][165] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][166] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][167] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][168] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][169] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][170] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][171] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][172] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][174] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][175] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][176] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][177] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][178] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][179] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][181] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][183] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][184] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][185] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][186] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][187] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][188] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][189] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][190] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][191] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][192] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][197] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][198] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][199] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][200] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][201] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][205] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][208] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][209] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][210] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][211] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][212] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][213] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][214] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][217] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][218] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][219] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][220] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][223] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][224] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][225] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][226] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][227] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][228] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][232] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][233] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][235] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][237] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][238] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][239] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][240] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][242] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][243] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][244] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][245] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][247] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][248] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][249] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][250] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][254] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][255] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][256] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][257] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][260] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][261] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][262] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][263] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][264] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][265] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][266] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][268] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][269] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][270] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][272] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][273] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][274] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][275] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][276] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][277] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][278] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][279] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][280] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][281] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][282] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][283] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][286] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][287] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][288] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][289] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][292] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][293] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][294] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][296] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][299] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][300] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][301] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][302] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][305] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][306] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][307] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][308] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][310] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][311] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][312] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][314] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][316] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][319] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][320] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][323] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][326] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][327] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][328] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][329] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][330] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][331] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][332] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][335] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][337] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][340] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][342] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][343] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][344] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][345] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][346] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][349] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][350] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][351] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][352] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][355] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][356] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][357] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][358] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][360] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][363] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][365] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][367] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][368] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][369] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][370] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][371] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][372] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][374] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][375] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][376] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][381] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][382] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][383] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][384] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][385] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][386] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][388] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][389] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][390] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][395] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][398] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][399] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][400] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][406] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][409] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][410] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][413] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][416] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][417] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][418] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][419] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][420] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][421] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][423] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][429] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][430] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][434] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][435] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][436] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][437] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][438] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][439] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][441] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][444] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][445] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][449] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][451] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][452] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][453] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][454] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][459] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][460] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][461] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][464] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][465] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][466] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][468] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][469] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][472] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][473] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][474] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][475] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][476] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][477] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][479] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][480] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][484] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][485] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][489] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][490] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][496] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][497] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][498] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][499] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][500] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][503] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][505] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][506] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][507] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][510] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][511] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][512] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][514] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][518] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][519] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][521] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][523] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][524] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][526] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][527] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][529] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][530] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][531] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][532] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][533] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][537] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][540] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][541] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][543] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][545] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][546] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][548] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][549] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][551] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][552] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][554] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][555] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][556] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][557] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][558] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][560] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][561] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][562] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][563] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][564] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][565] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][566] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][567] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][568] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][571] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][572] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][573] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][575] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][576] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][580] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][584] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][585] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][586] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][587] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][588] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][590] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][591] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][592] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][593] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][595] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][602] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][607] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][608] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][611] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][614] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][621] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][622] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][624] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][628] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][629] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][630] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][633] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][636] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][637] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][638] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][640] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][641] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][642] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][643] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][644] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][646] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][647] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][648] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][649] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][650] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][652] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][653] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][654] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][655] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][656] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][661] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][663] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][664] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][665] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][666] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][669] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][670] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][674] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][675] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][678] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][679] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][680] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][681] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][682] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][686] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][687] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][688] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][689] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][690] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][692] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][693] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][695] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][697] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][698] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][701] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][703] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][706] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][707] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][708] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][710] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][711] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][714] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][717] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][718] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][720] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][721] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][725] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][726] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][729] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][732] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][733] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][737] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][740] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][742] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][744] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][745] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][747] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][749] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][750] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][752] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][757] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][758] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][760] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][763] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][764] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][768] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][770] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][772] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][775] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][778] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][781] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][782] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][786] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][789] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][791] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][792] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][793] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][796] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][797] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][799] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][802] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][803] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][804] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][806] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][807] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][808] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][810] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][813] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][817] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][819] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][824] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][825] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][826] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][829] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][830] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][831] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][835] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][836] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][838] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][840] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][841] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][843] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][846] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][847] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][850] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][851] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][857] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][862] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][863] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][866] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][867] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][868] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][869] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][870] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][871] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][874] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][877] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][878] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][879] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][880] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][884] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][886] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][887] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][888] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][889] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][892] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][893] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][894] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][895] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][896] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][897] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][898] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][902] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][903] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][904] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][905] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][907] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][908] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][911] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][916] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][926] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][927] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][929] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][930] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][933] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][934] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][936] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][937] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][940] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][941] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][942] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][944] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][945] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][948] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][949] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][951] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][952] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][953] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][956] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][957] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][961] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][963] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][964] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][965] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][968] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][969] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][974] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][975] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][976] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][977] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][980] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][982] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][983] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][984] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][987] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][988] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][992] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][993] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][997] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][998] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][999] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1000] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1002] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1004] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1007] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1009] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1010] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1011] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1013] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1014] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1015] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1018] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1023] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1024] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1028] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1029] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1030] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1031] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1032] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1035] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1036] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1037] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1041] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1042] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1045] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1046] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1049] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1050] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1051] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1054] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1057] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1060] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1061] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1066] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1068] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1070] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1071] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1074] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1075] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1079] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1080] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1081] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1082] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1085] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1086] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1088] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1089] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1090] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1091] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1095] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1096] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1099] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1100] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1103] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1104] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1105] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1109] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1111] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1114] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1118] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1130] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1143] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1144] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1145] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1146] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1148] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1151] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1152] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1155] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1156] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1157] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1160] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1161] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1162] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1163] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1164] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1165] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1166] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1167] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1168] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1170] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1172] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1175] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1177] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1178] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1182] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1184] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1185] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1186] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1187] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1188] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1189] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1190] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1191] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1192] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1193] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1196] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1197] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1198] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1199] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1200] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1201] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1202] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1203] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1204] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1205] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1206] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1209] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1210] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1211] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1212] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1213] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1214] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1215] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1219] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1220] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1221] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1222] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1223] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1224] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1225] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1228] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1230] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1231] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1234] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1237] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1240] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1241] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1244] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1245] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1247] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1248] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1249] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1251] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1252] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1253] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1254] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1255] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1257] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1259] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1260] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1261] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1262] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1263] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1265] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1268] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1270] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1275] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1276] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1277] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1278] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1280] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1281] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1283] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1284] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1285] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1286] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1288] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1289] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1290] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1293] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1294] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1296] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1298] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1300] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1301] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1303] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1304] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1306] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1307] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1310] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1312] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1313] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1314] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1315] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1316] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1318] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1321] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1322] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1326] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1327] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1328] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1330] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1331] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1332] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1333] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1334] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1335] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1338] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1340] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1341] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1342] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1343] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1344] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1346] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1351] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1352] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1358] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1359] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1364] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1365] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1366] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1368] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1371] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1372] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1373] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1374] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1375] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1376] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1378] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1380] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1384] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1385] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1386] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1387] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1388] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1389] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1390] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1391] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1392] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1395] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1396] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1397] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1398] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1399] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1403] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1404] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1406] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1407] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1408] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1409] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1413] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1414] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1416] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1419] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1420] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1422] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1423] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1425] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1426] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1427] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1430] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1432] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1433] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1436] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1437] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1439] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1440] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1441] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1442] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1443] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1444] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1445] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1446] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1447] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1448] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1454] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1455] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1456] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1457] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1461] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1462] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1463] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1464] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1467] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1470] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1471] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1472] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1474] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1475] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1476] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1479] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1480] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1482] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1483] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1486] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1487] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1488] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1489] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1492] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1493] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1494] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1495] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1497] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1500] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1501] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1506] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1507] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1508] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1509] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1510] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1511] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1512] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1513] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1516] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1518] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1520] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1521] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1522] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1523] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1525] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1526] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1529] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1530] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1531] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1532] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1534] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1536] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1537] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1538] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1539] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1540] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1541] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1545] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1546] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1554] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1556] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1557] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1559] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1560] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1562] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1563] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1566] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1567] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1568] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1569] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1571] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1574] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1575] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1576] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1578] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1582] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1583] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1584] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1585] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1586] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1588] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1590] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1591] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1592] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1595] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1596] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1597] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1601] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1602] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1603] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1605] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1607] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1611] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1613] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1614] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1615] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1617] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1618] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1621] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1622] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1624] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1625] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1628] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1629] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1630] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1632] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1635] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1636] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1639] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1644] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1645] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1646] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1647] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1650] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1653] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1654] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1656] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1658] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1659] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1660] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1661] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1662] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1664] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1665] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1666] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1667] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1668] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1670] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1672] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1673] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1674] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1675] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1676] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1678] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1681] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1682] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1683] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1684] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1687] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1688] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1692] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1694] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1695] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1696] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1698] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1700] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1703] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1705] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1708] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1709] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1710] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1711] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1712] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1713] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1714] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1717] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1718] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1719] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1723] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1724] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1725] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1728] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1729] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1732] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1733] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1734] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1736] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1737] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1739] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1740] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1741] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1742] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1743] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1747] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1748] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1749] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1750] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1751] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1753] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1754] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1755] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1756] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1757] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1761] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1762] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1763] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1764] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1765] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1767] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1768] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1769] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1770] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1771] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1775] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1776] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1777] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1778] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1779] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1781] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1782] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1783] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1784] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1785] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1788] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1789] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1791] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1792] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1793] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1795] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1798] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1799] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1808] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1809] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1810] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1812] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1814] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1818] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1819] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1821] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1822] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1823] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1824] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1827] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1829] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1830] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1831] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1832] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1833] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1834] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1838] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1839] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1844] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1845] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1846] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1847] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1848] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1850] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1851] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1852] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1853] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1854] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1858] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1859] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1860] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1861] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1862] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1864] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1865] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1866] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1867] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1868] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1871] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1873] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1874] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1875] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1879] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1880] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1881] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1882] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1884] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1885] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1886] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1887] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1894] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1900] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1901] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1902] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1904] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1905] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1906] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1910] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1911] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1912] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1914] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1915] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1916] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1921] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1922] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1929] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1930] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1933] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1934] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1935] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1940] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1941] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1942] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1944] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1947] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1949] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1950] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1952] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1953] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1954] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1955] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1958] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1959] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1960] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1961] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1962] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1963] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1966] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1967] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1968] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1971] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1972] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1973] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1975] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1976] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1977] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1978] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1980] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1981] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1982] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1983] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1984] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1986] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1987] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1989] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1990] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1991] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1993] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1997] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][1998] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2000] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2004] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2006] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2007] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2008] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2009] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2012] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2013] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2017] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2018] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2019] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2022] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2025] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2026] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2033] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2034] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2035] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2036] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2037] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2038] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2039] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2042] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2043] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2044] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2045] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2046] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2047] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2051] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2052] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2053] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2054] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2055] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2056] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2059] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2060] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2061] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2062] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2063] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2064] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2069] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2071] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2073] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2074] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2075] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2078] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2079] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2080] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2083] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2084] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2085] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2088] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2089] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2090] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2093] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2094] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2095] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2096] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2099] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2100] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2101] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2102] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2103] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2104] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2105] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2106] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2110] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2111] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2114] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2115] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2116] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2118] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2119] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2120] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2122] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2123] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2124] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2126] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2127] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2128] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2130] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2131] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2135] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2136] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2137] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2139] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2140] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2141] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2142] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2146] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2147] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2150] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2151] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2152] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2153] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2154] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2155] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2158] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2159] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2160] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2161] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2163] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2164] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2166] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2167] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2168] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2169] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2172] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2173] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2175] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2176] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2178] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2180] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2181] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2182] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2183] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2184] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2186] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2187] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2188] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2189] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2190] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2193] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2194] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2196] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2200] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2201] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2203] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2204] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2206] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2207] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2208] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2210] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2213] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2214] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2215] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2216] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2217] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2218] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2219] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2220] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2221] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2222] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2223] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2224] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2228] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2229] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2230] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2231] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2232] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2234] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2235] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2236] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2238] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2239] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2247] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2251] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2252] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2256] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2257] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2258] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2260] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2272] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2273] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2274] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2275] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2277] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2278] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2279] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2280] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2281] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2285] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2287] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2291] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2297] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2298] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2299] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2304] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2305] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2308] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2309] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2310] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2311] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2314] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2319] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2324] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2325] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2326] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2327] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2329] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2335] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2338] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2339] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2340] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2341] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2344] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2345] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2346] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2347] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2350] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2351] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2352] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2357] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2358] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2363] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2364] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2366] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2368] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2370] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2371] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2374] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2376] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2377] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2378] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2382] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2385] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2386] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2389] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2392] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2393] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2394] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2397] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2398] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2401] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2402] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2403] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2405] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2406] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2407] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2409] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2410] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2412] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2414] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2416] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2419] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2420] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2421] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2423] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2424] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2425] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2428] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2429] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2430] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2432] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2434] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2435] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2438] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2439] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2440] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2441] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2444] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2445] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2447] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2448] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2450] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2451] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2452] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2454] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2458] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2459] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2460] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2461] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2463] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2465] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2468] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2469] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2472] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2473] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2475] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2476] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2477] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2478] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2482] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2483] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2484] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2486] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2487] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2488] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2491] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2492] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2493] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2494] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2495] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2496] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2497] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2500] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2501] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2502] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2507] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2509] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2510] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2511] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2512] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2513] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2514] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2515] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2516] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2517] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2519] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2522] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2527] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2529] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2531] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2534] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2536] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2539] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2540] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2541] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2542] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2545] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2546] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2547] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2548] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2549] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2550] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2552] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2553] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2554] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2555] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2556] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2559] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2560] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2562] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2563] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2564] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2565] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2566] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2567] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2568] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2569] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2570] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2571] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2572] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2573] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2574] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2576] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2577] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2578] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2580] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2581] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2582] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2585] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2586] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2588] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2591] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2595] = 0;
  _$jscoverage['access/display/js/jquery.flot.js'][2596] = 0;
}
_$jscoverage['access/display/js/jquery.flot.js'][31]++;
(function (B) {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  B.color = {};
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  B.color.make = (function (F, E, C, D) {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  var G = {};
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.r = F || 0;
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.g = E || 0;
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.b = C || 0;
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.a = D != null? D: 1;
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.add = (function (J, I) {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  for (var H = 0; H < J.length; ++H) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    G[J.charAt(H)] += I;
}
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  return G.normalize();
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.scale = (function (J, I) {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  for (var H = 0; H < J.length; ++H) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    G[J.charAt(H)] *= I;
}
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  return G.normalize();
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.toString = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (G.a >= 1) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return "rgb(" + [G.r, G.g, G.b].join(",") + ")";
  }
  else {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return "rgba(" + [G.r, G.g, G.b, G.a].join(",") + ")";
  }
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.normalize = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  function H(J, K, I) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return K < J? J: (K > I? I: K);
}
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.r = H(0, parseInt(G.r), 255);
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.g = H(0, parseInt(G.g), 255);
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.b = H(0, parseInt(G.b), 255);
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.a = H(0, G.a, 1);
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  return G;
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  G.clone = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  return B.color.make(G.r, G.b, G.g, G.a);
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  return G.normalize();
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  B.color.extract = (function (D, C) {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  var E;
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  do {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    E = D.css(C).toLowerCase();
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    if (E != "" && E != "transparent") {
      _$jscoverage['access/display/js/jquery.flot.js'][31]++;
      break;
    }
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    D = D.parent();
}
  while (! B.nodeName(D.get(0), "body"));
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E == "rgba(0, 0, 0, 0)") {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    E = "transparent";
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  return B.color.parse(E);
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  B.color.parse = (function (F) {
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  var E, C = B.color.make;
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(F)) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(parseInt(E[1], 10), parseInt(E[2], 10), parseInt(E[3], 10));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(parseInt(E[1], 10), parseInt(E[2], 10), parseInt(E[3], 10), parseFloat(E[4]));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(F)) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(parseFloat(E[1]) * 2.55, parseFloat(E[2]) * 2.55, parseFloat(E[3]) * 2.55);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(F)) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(parseFloat(E[1]) * 2.55, parseFloat(E[2]) * 2.55, parseFloat(E[3]) * 2.55, parseFloat(E[4]));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(F)) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(parseInt(E[1], 16), parseInt(E[2], 16), parseInt(E[3], 16));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (E = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(F)) {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(parseInt(E[1] + E[1], 16), parseInt(E[2] + E[2], 16), parseInt(E[3] + E[3], 16));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  var D = B.trim(F).toLowerCase();
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  if (D == "transparent") {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(255, 255, 255, 0);
  }
  else {
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    E = A[D] || [0, 0, 0];
    _$jscoverage['access/display/js/jquery.flot.js'][31]++;
    return C(E[0], E[1], E[2]);
  }
});
  _$jscoverage['access/display/js/jquery.flot.js'][31]++;
  var A = {aqua: [0, 255, 255], azure: [240, 255, 255], beige: [245, 245, 220], black: [0, 0, 0], blue: [0, 0, 255], brown: [165, 42, 42], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgrey: [169, 169, 169], darkgreen: [0, 100, 0], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkviolet: [148, 0, 211], fuchsia: [255, 0, 255], gold: [255, 215, 0], green: [0, 128, 0], indigo: [75, 0, 130], khaki: [240, 230, 140], lightblue: [173, 216, 230], lightcyan: [224, 255, 255], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightyellow: [255, 255, 224], lime: [0, 255, 0], magenta: [255, 0, 255], maroon: [128, 0, 0], navy: [0, 0, 128], olive: [128, 128, 0], orange: [255, 165, 0], pink: [255, 192, 203], purple: [128, 0, 128], violet: [128, 0, 128], red: [255, 0, 0], silver: [192, 192, 192], white: [255, 255, 255], yellow: [255, 255, 0]};
})(jQuery);
_$jscoverage['access/display/js/jquery.flot.js'][34]++;
(function ($) {
  _$jscoverage['access/display/js/jquery.flot.js'][35]++;
  function Plot(placeholder, data_, options_, plugins) {
    _$jscoverage['access/display/js/jquery.flot.js'][41]++;
    var series = [], options = {colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"], legend: {show: true, noColumns: 1, labelFormatter: null, labelBoxBorderColor: "#ccc", container: null, position: "ne", margin: 5, backgroundColor: null, backgroundOpacity: 0.85}, xaxis: {show: null, position: "bottom", mode: null, color: null, tickColor: null, transform: null, inverseTransform: null, min: null, max: null, autoscaleMargin: null, ticks: null, tickFormatter: null, labelWidth: null, labelHeight: null, reserveSpace: null, tickLength: null, alignTicksWithAxis: null, tickDecimals: null, tickSize: null, minTickSize: null, monthNames: null, timeformat: null, twelveHourClock: false}, yaxis: {autoscaleMargin: 0.02, position: "left"}, xaxes: [], yaxes: [], series: {points: {show: false, radius: 3, lineWidth: 2, fill: true, fillColor: "#ffffff", symbol: "circle"}, lines: {lineWidth: 2, fill: false, fillColor: null, steps: false}, bars: {show: false, lineWidth: 2, barWidth: 1, fill: true, fillColor: null, align: "left", horizontal: false}, shadowSize: 3}, grid: {show: true, aboveData: false, color: "#545454", backgroundColor: null, borderColor: null, tickColor: null, labelMargin: 5, axisMargin: 8, borderWidth: 2, minBorderMargin: null, markings: null, markingsColor: "#f4f4f4", markingsLineWidth: 2, clickable: false, hoverable: false, autoHighlight: true, mouseActiveRadius: 10}, hooks: {}}, canvas = null, overlay = null, eventHolder = null, ctx = null, octx = null, xaxes = [], yaxes = [], plotOffset = {left: 0, right: 0, top: 0, bottom: 0}, canvasWidth = 0, canvasHeight = 0, plotWidth = 0, plotHeight = 0, hooks = {processOptions: [], processRawData: [], processDatapoints: [], drawSeries: [], draw: [], bindEvents: [], drawOverlay: [], shutdown: []}, plot = this;
    _$jscoverage['access/display/js/jquery.flot.js'][160]++;
    plot.setData = setData;
    _$jscoverage['access/display/js/jquery.flot.js'][161]++;
    plot.setupGrid = setupGrid;
    _$jscoverage['access/display/js/jquery.flot.js'][162]++;
    plot.draw = draw;
    _$jscoverage['access/display/js/jquery.flot.js'][163]++;
    plot.getPlaceholder = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][163]++;
  return placeholder;
});
    _$jscoverage['access/display/js/jquery.flot.js'][164]++;
    plot.getCanvas = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][164]++;
  return canvas;
});
    _$jscoverage['access/display/js/jquery.flot.js'][165]++;
    plot.getPlotOffset = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][165]++;
  return plotOffset;
});
    _$jscoverage['access/display/js/jquery.flot.js'][166]++;
    plot.width = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][166]++;
  return plotWidth;
});
    _$jscoverage['access/display/js/jquery.flot.js'][167]++;
    plot.height = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][167]++;
  return plotHeight;
});
    _$jscoverage['access/display/js/jquery.flot.js'][168]++;
    plot.offset = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][169]++;
  var o = eventHolder.offset();
  _$jscoverage['access/display/js/jquery.flot.js'][170]++;
  o.left += plotOffset.left;
  _$jscoverage['access/display/js/jquery.flot.js'][171]++;
  o.top += plotOffset.top;
  _$jscoverage['access/display/js/jquery.flot.js'][172]++;
  return o;
});
    _$jscoverage['access/display/js/jquery.flot.js'][174]++;
    plot.getData = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][174]++;
  return series;
});
    _$jscoverage['access/display/js/jquery.flot.js'][175]++;
    plot.getAxes = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][176]++;
  var res = {}, i;
  _$jscoverage['access/display/js/jquery.flot.js'][177]++;
  $.each(xaxes.concat(yaxes), (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][178]++;
  if (axis) {
    _$jscoverage['access/display/js/jquery.flot.js'][179]++;
    res[axis.direction + (axis.n != 1? axis.n: "") + "axis"] = axis;
  }
}));
  _$jscoverage['access/display/js/jquery.flot.js'][181]++;
  return res;
});
    _$jscoverage['access/display/js/jquery.flot.js'][183]++;
    plot.getXAxes = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][183]++;
  return xaxes;
});
    _$jscoverage['access/display/js/jquery.flot.js'][184]++;
    plot.getYAxes = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][184]++;
  return yaxes;
});
    _$jscoverage['access/display/js/jquery.flot.js'][185]++;
    plot.c2p = canvasToAxisCoords;
    _$jscoverage['access/display/js/jquery.flot.js'][186]++;
    plot.p2c = axisToCanvasCoords;
    _$jscoverage['access/display/js/jquery.flot.js'][187]++;
    plot.getOptions = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][187]++;
  return options;
});
    _$jscoverage['access/display/js/jquery.flot.js'][188]++;
    plot.highlight = highlight;
    _$jscoverage['access/display/js/jquery.flot.js'][189]++;
    plot.unhighlight = unhighlight;
    _$jscoverage['access/display/js/jquery.flot.js'][190]++;
    plot.triggerRedrawOverlay = triggerRedrawOverlay;
    _$jscoverage['access/display/js/jquery.flot.js'][191]++;
    plot.pointOffset = (function (point) {
  _$jscoverage['access/display/js/jquery.flot.js'][192]++;
  return ({left: parseInt(xaxes[axisNumber(point, "x") - 1].p2c(+ point.x) + plotOffset.left), top: parseInt(yaxes[axisNumber(point, "y") - 1].p2c(+ point.y) + plotOffset.top)});
});
    _$jscoverage['access/display/js/jquery.flot.js'][197]++;
    plot.shutdown = shutdown;
    _$jscoverage['access/display/js/jquery.flot.js'][198]++;
    plot.resize = (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][199]++;
  getCanvasDimensions();
  _$jscoverage['access/display/js/jquery.flot.js'][200]++;
  resizeCanvas(canvas);
  _$jscoverage['access/display/js/jquery.flot.js'][201]++;
  resizeCanvas(overlay);
});
    _$jscoverage['access/display/js/jquery.flot.js'][205]++;
    plot.hooks = hooks;
    _$jscoverage['access/display/js/jquery.flot.js'][208]++;
    initPlugins(plot);
    _$jscoverage['access/display/js/jquery.flot.js'][209]++;
    parseOptions(options_);
    _$jscoverage['access/display/js/jquery.flot.js'][210]++;
    setupCanvases();
    _$jscoverage['access/display/js/jquery.flot.js'][211]++;
    setData(data_);
    _$jscoverage['access/display/js/jquery.flot.js'][212]++;
    setupGrid();
    _$jscoverage['access/display/js/jquery.flot.js'][213]++;
    draw();
    _$jscoverage['access/display/js/jquery.flot.js'][214]++;
    bindEvents();
    _$jscoverage['access/display/js/jquery.flot.js'][217]++;
    function executeHooks(hook, args) {
      _$jscoverage['access/display/js/jquery.flot.js'][218]++;
      args = [plot].concat(args);
      _$jscoverage['access/display/js/jquery.flot.js'][219]++;
      for (var i = 0; i < hook.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][220]++;
        hook[i].apply(this, args);
}
}
    _$jscoverage['access/display/js/jquery.flot.js'][223]++;
    function initPlugins() {
      _$jscoverage['access/display/js/jquery.flot.js'][224]++;
      for (var i = 0; i < plugins.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][225]++;
        var p = plugins[i];
        _$jscoverage['access/display/js/jquery.flot.js'][226]++;
        p.init(plot);
        _$jscoverage['access/display/js/jquery.flot.js'][227]++;
        if (p.options) {
          _$jscoverage['access/display/js/jquery.flot.js'][228]++;
          $.extend(true, options, p.options);
        }
}
}
    _$jscoverage['access/display/js/jquery.flot.js'][232]++;
    function parseOptions(opts) {
      _$jscoverage['access/display/js/jquery.flot.js'][233]++;
      var i;
      _$jscoverage['access/display/js/jquery.flot.js'][235]++;
      $.extend(true, options, opts);
      _$jscoverage['access/display/js/jquery.flot.js'][237]++;
      if (options.xaxis.color == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][238]++;
        options.xaxis.color = options.grid.color;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][239]++;
      if (options.yaxis.color == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][240]++;
        options.yaxis.color = options.grid.color;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][242]++;
      if (options.xaxis.tickColor == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][243]++;
        options.xaxis.tickColor = options.grid.tickColor;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][244]++;
      if (options.yaxis.tickColor == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][245]++;
        options.yaxis.tickColor = options.grid.tickColor;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][247]++;
      if (options.grid.borderColor == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][248]++;
        options.grid.borderColor = options.grid.color;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][249]++;
      if (options.grid.tickColor == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][250]++;
        options.grid.tickColor = $.color.parse(options.grid.color).scale("a", 0.22).toString();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][254]++;
      for (i = 0; i < Math.max(1, options.xaxes.length); ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][255]++;
        options.xaxes[i] = $.extend(true, {}, options.xaxis, options.xaxes[i]);
}
      _$jscoverage['access/display/js/jquery.flot.js'][256]++;
      for (i = 0; i < Math.max(1, options.yaxes.length); ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][257]++;
        options.yaxes[i] = $.extend(true, {}, options.yaxis, options.yaxes[i]);
}
      _$jscoverage['access/display/js/jquery.flot.js'][260]++;
      if (options.xaxis.noTicks && options.xaxis.ticks == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][261]++;
        options.xaxis.ticks = options.xaxis.noTicks;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][262]++;
      if (options.yaxis.noTicks && options.yaxis.ticks == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][263]++;
        options.yaxis.ticks = options.yaxis.noTicks;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][264]++;
      if (options.x2axis) {
        _$jscoverage['access/display/js/jquery.flot.js'][265]++;
        options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);
        _$jscoverage['access/display/js/jquery.flot.js'][266]++;
        options.xaxes[1].position = "top";
      }
      _$jscoverage['access/display/js/jquery.flot.js'][268]++;
      if (options.y2axis) {
        _$jscoverage['access/display/js/jquery.flot.js'][269]++;
        options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);
        _$jscoverage['access/display/js/jquery.flot.js'][270]++;
        options.yaxes[1].position = "right";
      }
      _$jscoverage['access/display/js/jquery.flot.js'][272]++;
      if (options.grid.coloredAreas) {
        _$jscoverage['access/display/js/jquery.flot.js'][273]++;
        options.grid.markings = options.grid.coloredAreas;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][274]++;
      if (options.grid.coloredAreasColor) {
        _$jscoverage['access/display/js/jquery.flot.js'][275]++;
        options.grid.markingsColor = options.grid.coloredAreasColor;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][276]++;
      if (options.lines) {
        _$jscoverage['access/display/js/jquery.flot.js'][277]++;
        $.extend(true, options.series.lines, options.lines);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][278]++;
      if (options.points) {
        _$jscoverage['access/display/js/jquery.flot.js'][279]++;
        $.extend(true, options.series.points, options.points);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][280]++;
      if (options.bars) {
        _$jscoverage['access/display/js/jquery.flot.js'][281]++;
        $.extend(true, options.series.bars, options.bars);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][282]++;
      if (options.shadowSize != null) {
        _$jscoverage['access/display/js/jquery.flot.js'][283]++;
        options.series.shadowSize = options.shadowSize;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][286]++;
      for (i = 0; i < options.xaxes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][287]++;
        getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];
}
      _$jscoverage['access/display/js/jquery.flot.js'][288]++;
      for (i = 0; i < options.yaxes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][289]++;
        getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];
}
      _$jscoverage['access/display/js/jquery.flot.js'][292]++;
      for (var n in hooks) {
        _$jscoverage['access/display/js/jquery.flot.js'][293]++;
        if (options.hooks[n] && options.hooks[n].length) {
          _$jscoverage['access/display/js/jquery.flot.js'][294]++;
          hooks[n] = hooks[n].concat(options.hooks[n]);
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][296]++;
      executeHooks(hooks.processOptions, [options]);
}
    _$jscoverage['access/display/js/jquery.flot.js'][299]++;
    function setData(d) {
      _$jscoverage['access/display/js/jquery.flot.js'][300]++;
      series = parseData(d);
      _$jscoverage['access/display/js/jquery.flot.js'][301]++;
      fillInSeriesOptions();
      _$jscoverage['access/display/js/jquery.flot.js'][302]++;
      processData();
}
    _$jscoverage['access/display/js/jquery.flot.js'][305]++;
    function parseData(d) {
      _$jscoverage['access/display/js/jquery.flot.js'][306]++;
      var res = [];
      _$jscoverage['access/display/js/jquery.flot.js'][307]++;
      for (var i = 0; i < d.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][308]++;
        var s = $.extend(true, {}, options.series);
        _$jscoverage['access/display/js/jquery.flot.js'][310]++;
        if (d[i].data != null) {
          _$jscoverage['access/display/js/jquery.flot.js'][311]++;
          s.data = d[i].data;
          _$jscoverage['access/display/js/jquery.flot.js'][312]++;
          delete d[i].data;
          _$jscoverage['access/display/js/jquery.flot.js'][314]++;
          $.extend(true, s, d[i]);
          _$jscoverage['access/display/js/jquery.flot.js'][316]++;
          d[i].data = s.data;
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][319]++;
          s.data = d[i];
        }
        _$jscoverage['access/display/js/jquery.flot.js'][320]++;
        res.push(s);
}
      _$jscoverage['access/display/js/jquery.flot.js'][323]++;
      return res;
}
    _$jscoverage['access/display/js/jquery.flot.js'][326]++;
    function axisNumber(obj, coord) {
      _$jscoverage['access/display/js/jquery.flot.js'][327]++;
      var a = obj[coord + "axis"];
      _$jscoverage['access/display/js/jquery.flot.js'][328]++;
      if (typeof a == "object") {
        _$jscoverage['access/display/js/jquery.flot.js'][329]++;
        a = a.n;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][330]++;
      if (typeof a != "number") {
        _$jscoverage['access/display/js/jquery.flot.js'][331]++;
        a = 1;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][332]++;
      return a;
}
    _$jscoverage['access/display/js/jquery.flot.js'][335]++;
    function allAxes() {
      _$jscoverage['access/display/js/jquery.flot.js'][337]++;
      return $.grep(xaxes.concat(yaxes), (function (a) {
  _$jscoverage['access/display/js/jquery.flot.js'][337]++;
  return a;
}));
}
    _$jscoverage['access/display/js/jquery.flot.js'][340]++;
    function canvasToAxisCoords(pos) {
      _$jscoverage['access/display/js/jquery.flot.js'][342]++;
      var res = {}, i, axis;
      _$jscoverage['access/display/js/jquery.flot.js'][343]++;
      for (i = 0; i < xaxes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][344]++;
        axis = xaxes[i];
        _$jscoverage['access/display/js/jquery.flot.js'][345]++;
        if (axis && axis.used) {
          _$jscoverage['access/display/js/jquery.flot.js'][346]++;
          res["x" + axis.n] = axis.c2p(pos.left);
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][349]++;
      for (i = 0; i < yaxes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][350]++;
        axis = yaxes[i];
        _$jscoverage['access/display/js/jquery.flot.js'][351]++;
        if (axis && axis.used) {
          _$jscoverage['access/display/js/jquery.flot.js'][352]++;
          res["y" + axis.n] = axis.c2p(pos.top);
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][355]++;
      if (res.x1 !== undefined) {
        _$jscoverage['access/display/js/jquery.flot.js'][356]++;
        res.x = res.x1;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][357]++;
      if (res.y1 !== undefined) {
        _$jscoverage['access/display/js/jquery.flot.js'][358]++;
        res.y = res.y1;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][360]++;
      return res;
}
    _$jscoverage['access/display/js/jquery.flot.js'][363]++;
    function axisToCanvasCoords(pos) {
      _$jscoverage['access/display/js/jquery.flot.js'][365]++;
      var res = {}, i, axis, key;
      _$jscoverage['access/display/js/jquery.flot.js'][367]++;
      for (i = 0; i < xaxes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][368]++;
        axis = xaxes[i];
        _$jscoverage['access/display/js/jquery.flot.js'][369]++;
        if (axis && axis.used) {
          _$jscoverage['access/display/js/jquery.flot.js'][370]++;
          key = "x" + axis.n;
          _$jscoverage['access/display/js/jquery.flot.js'][371]++;
          if (pos[key] == null && axis.n == 1) {
            _$jscoverage['access/display/js/jquery.flot.js'][372]++;
            key = "x";
          }
          _$jscoverage['access/display/js/jquery.flot.js'][374]++;
          if (pos[key] != null) {
            _$jscoverage['access/display/js/jquery.flot.js'][375]++;
            res.left = axis.p2c(pos[key]);
            _$jscoverage['access/display/js/jquery.flot.js'][376]++;
            break;
          }
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][381]++;
      for (i = 0; i < yaxes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][382]++;
        axis = yaxes[i];
        _$jscoverage['access/display/js/jquery.flot.js'][383]++;
        if (axis && axis.used) {
          _$jscoverage['access/display/js/jquery.flot.js'][384]++;
          key = "y" + axis.n;
          _$jscoverage['access/display/js/jquery.flot.js'][385]++;
          if (pos[key] == null && axis.n == 1) {
            _$jscoverage['access/display/js/jquery.flot.js'][386]++;
            key = "y";
          }
          _$jscoverage['access/display/js/jquery.flot.js'][388]++;
          if (pos[key] != null) {
            _$jscoverage['access/display/js/jquery.flot.js'][389]++;
            res.top = axis.p2c(pos[key]);
            _$jscoverage['access/display/js/jquery.flot.js'][390]++;
            break;
          }
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][395]++;
      return res;
}
    _$jscoverage['access/display/js/jquery.flot.js'][398]++;
    function getOrCreateAxis(axes, number) {
      _$jscoverage['access/display/js/jquery.flot.js'][399]++;
      if (! axes[number - 1]) {
        _$jscoverage['access/display/js/jquery.flot.js'][400]++;
        axes[number - 1] = {n: number, direction: axes == xaxes? "x": "y", options: $.extend(true, {}, axes == xaxes? options.xaxis: options.yaxis)};
      }
      _$jscoverage['access/display/js/jquery.flot.js'][406]++;
      return axes[number - 1];
}
    _$jscoverage['access/display/js/jquery.flot.js'][409]++;
    function fillInSeriesOptions() {
      _$jscoverage['access/display/js/jquery.flot.js'][410]++;
      var i;
      _$jscoverage['access/display/js/jquery.flot.js'][413]++;
      var neededColors = series.length, usedColors = [], assignedColors = [];
      _$jscoverage['access/display/js/jquery.flot.js'][416]++;
      for (i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][417]++;
        var sc = series[i].color;
        _$jscoverage['access/display/js/jquery.flot.js'][418]++;
        if (sc != null) {
          _$jscoverage['access/display/js/jquery.flot.js'][419]++;
          --neededColors;
          _$jscoverage['access/display/js/jquery.flot.js'][420]++;
          if (typeof sc == "number") {
            _$jscoverage['access/display/js/jquery.flot.js'][421]++;
            assignedColors.push(sc);
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][423]++;
            usedColors.push($.color.parse(series[i].color));
          }
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][429]++;
      for (i = 0; i < assignedColors.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][430]++;
        neededColors = Math.max(neededColors, assignedColors[i] + 1);
}
      _$jscoverage['access/display/js/jquery.flot.js'][434]++;
      var colors = [], variation = 0;
      _$jscoverage['access/display/js/jquery.flot.js'][435]++;
      i = 0;
      _$jscoverage['access/display/js/jquery.flot.js'][436]++;
      while (colors.length < neededColors) {
        _$jscoverage['access/display/js/jquery.flot.js'][437]++;
        var c;
        _$jscoverage['access/display/js/jquery.flot.js'][438]++;
        if (options.colors.length == i) {
          _$jscoverage['access/display/js/jquery.flot.js'][439]++;
          c = $.color.make(100, 100, 100);
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][441]++;
          c = $.color.parse(options.colors[i]);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][444]++;
        var sign = variation % 2 == 1? -1: 1;
        _$jscoverage['access/display/js/jquery.flot.js'][445]++;
        c.scale("rgb", 1 + sign * Math.ceil(variation / 2) * 0.2);
        _$jscoverage['access/display/js/jquery.flot.js'][449]++;
        colors.push(c);
        _$jscoverage['access/display/js/jquery.flot.js'][451]++;
        ++i;
        _$jscoverage['access/display/js/jquery.flot.js'][452]++;
        if (i >= options.colors.length) {
          _$jscoverage['access/display/js/jquery.flot.js'][453]++;
          i = 0;
          _$jscoverage['access/display/js/jquery.flot.js'][454]++;
          ++variation;
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][459]++;
      var colori = 0, s;
      _$jscoverage['access/display/js/jquery.flot.js'][460]++;
      for (i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][461]++;
        s = series[i];
        _$jscoverage['access/display/js/jquery.flot.js'][464]++;
        if (s.color == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][465]++;
          s.color = colors[colori].toString();
          _$jscoverage['access/display/js/jquery.flot.js'][466]++;
          ++colori;
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][468]++;
          if (typeof s.color == "number") {
            _$jscoverage['access/display/js/jquery.flot.js'][469]++;
            s.color = colors[s.color].toString();
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][472]++;
        if (s.lines.show == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][473]++;
          var v, show = true;
          _$jscoverage['access/display/js/jquery.flot.js'][474]++;
          for (v in s) {
            _$jscoverage['access/display/js/jquery.flot.js'][475]++;
            if (s[v] && s[v].show) {
              _$jscoverage['access/display/js/jquery.flot.js'][476]++;
              show = false;
              _$jscoverage['access/display/js/jquery.flot.js'][477]++;
              break;
            }
}
          _$jscoverage['access/display/js/jquery.flot.js'][479]++;
          if (show) {
            _$jscoverage['access/display/js/jquery.flot.js'][480]++;
            s.lines.show = true;
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][484]++;
        s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, "x"));
        _$jscoverage['access/display/js/jquery.flot.js'][485]++;
        s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, "y"));
}
}
    _$jscoverage['access/display/js/jquery.flot.js'][489]++;
    function processData() {
      _$jscoverage['access/display/js/jquery.flot.js'][490]++;
      var topSentry = Number.POSITIVE_INFINITY, bottomSentry = Number.NEGATIVE_INFINITY, fakeInfinity = Number.MAX_VALUE, i, j, k, m, length, s, points, ps, x, y, axis, val, f, p;
      _$jscoverage['access/display/js/jquery.flot.js'][496]++;
      function updateAxis(axis, min, max) {
        _$jscoverage['access/display/js/jquery.flot.js'][497]++;
        if (min < axis.datamin && min != - fakeInfinity) {
          _$jscoverage['access/display/js/jquery.flot.js'][498]++;
          axis.datamin = min;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][499]++;
        if (max > axis.datamax && max != fakeInfinity) {
          _$jscoverage['access/display/js/jquery.flot.js'][500]++;
          axis.datamax = max;
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][503]++;
      $.each(allAxes(), (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][505]++;
  axis.datamin = topSentry;
  _$jscoverage['access/display/js/jquery.flot.js'][506]++;
  axis.datamax = bottomSentry;
  _$jscoverage['access/display/js/jquery.flot.js'][507]++;
  axis.used = false;
}));
      _$jscoverage['access/display/js/jquery.flot.js'][510]++;
      for (i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][511]++;
        s = series[i];
        _$jscoverage['access/display/js/jquery.flot.js'][512]++;
        s.datapoints = {points: []};
        _$jscoverage['access/display/js/jquery.flot.js'][514]++;
        executeHooks(hooks.processRawData, [s, s.data, s.datapoints]);
}
      _$jscoverage['access/display/js/jquery.flot.js'][518]++;
      for (i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][519]++;
        s = series[i];
        _$jscoverage['access/display/js/jquery.flot.js'][521]++;
        var data = s.data, format = s.datapoints.format;
        _$jscoverage['access/display/js/jquery.flot.js'][523]++;
        if (! format) {
          _$jscoverage['access/display/js/jquery.flot.js'][524]++;
          format = [];
          _$jscoverage['access/display/js/jquery.flot.js'][526]++;
          format.push({x: true, number: true, required: true});
          _$jscoverage['access/display/js/jquery.flot.js'][527]++;
          format.push({y: true, number: true, required: true});
          _$jscoverage['access/display/js/jquery.flot.js'][529]++;
          if (s.bars.show || (s.lines.show && s.lines.fill)) {
            _$jscoverage['access/display/js/jquery.flot.js'][530]++;
            format.push({y: true, number: true, required: false, defaultValue: 0});
            _$jscoverage['access/display/js/jquery.flot.js'][531]++;
            if (s.bars.horizontal) {
              _$jscoverage['access/display/js/jquery.flot.js'][532]++;
              delete format[format.length - 1].y;
              _$jscoverage['access/display/js/jquery.flot.js'][533]++;
              format[format.length - 1].x = true;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][537]++;
          s.datapoints.format = format;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][540]++;
        if (s.datapoints.pointsize != null) {
          _$jscoverage['access/display/js/jquery.flot.js'][541]++;
          continue;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][543]++;
        s.datapoints.pointsize = format.length;
        _$jscoverage['access/display/js/jquery.flot.js'][545]++;
        ps = s.datapoints.pointsize;
        _$jscoverage['access/display/js/jquery.flot.js'][546]++;
        points = s.datapoints.points;
        _$jscoverage['access/display/js/jquery.flot.js'][548]++;
        insertSteps = s.lines.show && s.lines.steps;
        _$jscoverage['access/display/js/jquery.flot.js'][549]++;
        s.xaxis.used = s.yaxis.used = true;
        _$jscoverage['access/display/js/jquery.flot.js'][551]++;
        for (j = k = 0; j < data.length; ++j, k += ps) {
          _$jscoverage['access/display/js/jquery.flot.js'][552]++;
          p = data[j];
          _$jscoverage['access/display/js/jquery.flot.js'][554]++;
          var nullify = p == null;
          _$jscoverage['access/display/js/jquery.flot.js'][555]++;
          if (! nullify) {
            _$jscoverage['access/display/js/jquery.flot.js'][556]++;
            for (m = 0; m < ps; ++m) {
              _$jscoverage['access/display/js/jquery.flot.js'][557]++;
              val = p[m];
              _$jscoverage['access/display/js/jquery.flot.js'][558]++;
              f = format[m];
              _$jscoverage['access/display/js/jquery.flot.js'][560]++;
              if (f) {
                _$jscoverage['access/display/js/jquery.flot.js'][561]++;
                if (f.number && val != null) {
                  _$jscoverage['access/display/js/jquery.flot.js'][562]++;
                  val = + val;
                  _$jscoverage['access/display/js/jquery.flot.js'][563]++;
                  if (isNaN(val)) {
                    _$jscoverage['access/display/js/jquery.flot.js'][564]++;
                    val = null;
                  }
                  else {
                    _$jscoverage['access/display/js/jquery.flot.js'][565]++;
                    if (val == Infinity) {
                      _$jscoverage['access/display/js/jquery.flot.js'][566]++;
                      val = fakeInfinity;
                    }
                    else {
                      _$jscoverage['access/display/js/jquery.flot.js'][567]++;
                      if (val == - Infinity) {
                        _$jscoverage['access/display/js/jquery.flot.js'][568]++;
                        val = - fakeInfinity;
                      }
                    }
                  }
                }
                _$jscoverage['access/display/js/jquery.flot.js'][571]++;
                if (val == null) {
                  _$jscoverage['access/display/js/jquery.flot.js'][572]++;
                  if (f.required) {
                    _$jscoverage['access/display/js/jquery.flot.js'][573]++;
                    nullify = true;
                  }
                  _$jscoverage['access/display/js/jquery.flot.js'][575]++;
                  if (f.defaultValue != null) {
                    _$jscoverage['access/display/js/jquery.flot.js'][576]++;
                    val = f.defaultValue;
                  }
                }
              }
              _$jscoverage['access/display/js/jquery.flot.js'][580]++;
              points[k + m] = val;
}
          }
          _$jscoverage['access/display/js/jquery.flot.js'][584]++;
          if (nullify) {
            _$jscoverage['access/display/js/jquery.flot.js'][585]++;
            for (m = 0; m < ps; ++m) {
              _$jscoverage['access/display/js/jquery.flot.js'][586]++;
              val = points[k + m];
              _$jscoverage['access/display/js/jquery.flot.js'][587]++;
              if (val != null) {
                _$jscoverage['access/display/js/jquery.flot.js'][588]++;
                f = format[m];
                _$jscoverage['access/display/js/jquery.flot.js'][590]++;
                if (f.x) {
                  _$jscoverage['access/display/js/jquery.flot.js'][591]++;
                  updateAxis(s.xaxis, val, val);
                }
                _$jscoverage['access/display/js/jquery.flot.js'][592]++;
                if (f.y) {
                  _$jscoverage['access/display/js/jquery.flot.js'][593]++;
                  updateAxis(s.yaxis, val, val);
                }
              }
              _$jscoverage['access/display/js/jquery.flot.js'][595]++;
              points[k + m] = null;
}
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][602]++;
            if (insertSteps && k > 0 && points[k - ps] != null && points[k - ps] != points[k] && points[k - ps + 1] != points[k + 1]) {
              _$jscoverage['access/display/js/jquery.flot.js'][607]++;
              for (m = 0; m < ps; ++m) {
                _$jscoverage['access/display/js/jquery.flot.js'][608]++;
                points[k + ps + m] = points[k + m];
}
              _$jscoverage['access/display/js/jquery.flot.js'][611]++;
              points[k + 1] = points[k - ps + 1];
              _$jscoverage['access/display/js/jquery.flot.js'][614]++;
              k += ps;
            }
          }
}
}
      _$jscoverage['access/display/js/jquery.flot.js'][621]++;
      for (i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][622]++;
        s = series[i];
        _$jscoverage['access/display/js/jquery.flot.js'][624]++;
        executeHooks(hooks.processDatapoints, [s, s.datapoints]);
}
      _$jscoverage['access/display/js/jquery.flot.js'][628]++;
      for (i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][629]++;
        s = series[i];
        _$jscoverage['access/display/js/jquery.flot.js'][630]++;
        points = s.datapoints.points, ps = s.datapoints.pointsize;
        _$jscoverage['access/display/js/jquery.flot.js'][633]++;
        var xmin = topSentry, ymin = topSentry, xmax = bottomSentry, ymax = bottomSentry;
        _$jscoverage['access/display/js/jquery.flot.js'][636]++;
        for (j = 0; j < points.length; j += ps) {
          _$jscoverage['access/display/js/jquery.flot.js'][637]++;
          if (points[j] == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][638]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][640]++;
          for (m = 0; m < ps; ++m) {
            _$jscoverage['access/display/js/jquery.flot.js'][641]++;
            val = points[j + m];
            _$jscoverage['access/display/js/jquery.flot.js'][642]++;
            f = format[m];
            _$jscoverage['access/display/js/jquery.flot.js'][643]++;
            if (! f || val == fakeInfinity || val == - fakeInfinity) {
              _$jscoverage['access/display/js/jquery.flot.js'][644]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][646]++;
            if (f.x) {
              _$jscoverage['access/display/js/jquery.flot.js'][647]++;
              if (val < xmin) {
                _$jscoverage['access/display/js/jquery.flot.js'][648]++;
                xmin = val;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][649]++;
              if (val > xmax) {
                _$jscoverage['access/display/js/jquery.flot.js'][650]++;
                xmax = val;
              }
            }
            _$jscoverage['access/display/js/jquery.flot.js'][652]++;
            if (f.y) {
              _$jscoverage['access/display/js/jquery.flot.js'][653]++;
              if (val < ymin) {
                _$jscoverage['access/display/js/jquery.flot.js'][654]++;
                ymin = val;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][655]++;
              if (val > ymax) {
                _$jscoverage['access/display/js/jquery.flot.js'][656]++;
                ymax = val;
              }
            }
}
}
        _$jscoverage['access/display/js/jquery.flot.js'][661]++;
        if (s.bars.show) {
          _$jscoverage['access/display/js/jquery.flot.js'][663]++;
          var delta = s.bars.align == "left"? 0: - s.bars.barWidth / 2;
          _$jscoverage['access/display/js/jquery.flot.js'][664]++;
          if (s.bars.horizontal) {
            _$jscoverage['access/display/js/jquery.flot.js'][665]++;
            ymin += delta;
            _$jscoverage['access/display/js/jquery.flot.js'][666]++;
            ymax += delta + s.bars.barWidth;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][669]++;
            xmin += delta;
            _$jscoverage['access/display/js/jquery.flot.js'][670]++;
            xmax += delta + s.bars.barWidth;
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][674]++;
        updateAxis(s.xaxis, xmin, xmax);
        _$jscoverage['access/display/js/jquery.flot.js'][675]++;
        updateAxis(s.yaxis, ymin, ymax);
}
      _$jscoverage['access/display/js/jquery.flot.js'][678]++;
      $.each(allAxes(), (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][679]++;
  if (axis.datamin == topSentry) {
    _$jscoverage['access/display/js/jquery.flot.js'][680]++;
    axis.datamin = null;
  }
  _$jscoverage['access/display/js/jquery.flot.js'][681]++;
  if (axis.datamax == bottomSentry) {
    _$jscoverage['access/display/js/jquery.flot.js'][682]++;
    axis.datamax = null;
  }
}));
}
    _$jscoverage['access/display/js/jquery.flot.js'][686]++;
    function makeCanvas(skipPositioning, cls) {
      _$jscoverage['access/display/js/jquery.flot.js'][687]++;
      var c = document.createElement("canvas");
      _$jscoverage['access/display/js/jquery.flot.js'][688]++;
      c.className = cls;
      _$jscoverage['access/display/js/jquery.flot.js'][689]++;
      c.width = canvasWidth;
      _$jscoverage['access/display/js/jquery.flot.js'][690]++;
      c.height = canvasHeight;
      _$jscoverage['access/display/js/jquery.flot.js'][692]++;
      if (! skipPositioning) {
        _$jscoverage['access/display/js/jquery.flot.js'][693]++;
        $(c).css({position: "absolute", left: 0, top: 0});
      }
      _$jscoverage['access/display/js/jquery.flot.js'][695]++;
      $(c).appendTo(placeholder);
      _$jscoverage['access/display/js/jquery.flot.js'][697]++;
      if (! c.getContext) {
        _$jscoverage['access/display/js/jquery.flot.js'][698]++;
        c = window.G_vmlCanvasManager.initElement(c);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][701]++;
      c.getContext("2d").save();
      _$jscoverage['access/display/js/jquery.flot.js'][703]++;
      return c;
}
    _$jscoverage['access/display/js/jquery.flot.js'][706]++;
    function getCanvasDimensions() {
      _$jscoverage['access/display/js/jquery.flot.js'][707]++;
      canvasWidth = placeholder.width();
      _$jscoverage['access/display/js/jquery.flot.js'][708]++;
      canvasHeight = placeholder.height();
      _$jscoverage['access/display/js/jquery.flot.js'][710]++;
      if (canvasWidth <= 0 || canvasHeight <= 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][711]++;
        throw "Invalid dimensions for plot, width = " + canvasWidth + ", height = " + canvasHeight;
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][714]++;
    function resizeCanvas(c) {
      _$jscoverage['access/display/js/jquery.flot.js'][717]++;
      if (c.width != canvasWidth) {
        _$jscoverage['access/display/js/jquery.flot.js'][718]++;
        c.width = canvasWidth;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][720]++;
      if (c.height != canvasHeight) {
        _$jscoverage['access/display/js/jquery.flot.js'][721]++;
        c.height = canvasHeight;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][725]++;
      var cctx = c.getContext("2d");
      _$jscoverage['access/display/js/jquery.flot.js'][726]++;
      cctx.restore();
      _$jscoverage['access/display/js/jquery.flot.js'][729]++;
      cctx.save();
}
    _$jscoverage['access/display/js/jquery.flot.js'][732]++;
    function setupCanvases() {
      _$jscoverage['access/display/js/jquery.flot.js'][733]++;
      var reused, existingCanvas = placeholder.children("canvas.base"), existingOverlay = placeholder.children("canvas.overlay");
      _$jscoverage['access/display/js/jquery.flot.js'][737]++;
      if (existingCanvas.length == 0 || existingOverlay == 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][740]++;
        placeholder.html("");
        _$jscoverage['access/display/js/jquery.flot.js'][742]++;
        placeholder.css({padding: 0});
        _$jscoverage['access/display/js/jquery.flot.js'][744]++;
        if (placeholder.css("position") == "static") {
          _$jscoverage['access/display/js/jquery.flot.js'][745]++;
          placeholder.css("position", "relative");
        }
        _$jscoverage['access/display/js/jquery.flot.js'][747]++;
        getCanvasDimensions();
        _$jscoverage['access/display/js/jquery.flot.js'][749]++;
        canvas = makeCanvas(true, "base");
        _$jscoverage['access/display/js/jquery.flot.js'][750]++;
        overlay = makeCanvas(false, "overlay");
        _$jscoverage['access/display/js/jquery.flot.js'][752]++;
        reused = false;
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][757]++;
        canvas = existingCanvas.get(0);
        _$jscoverage['access/display/js/jquery.flot.js'][758]++;
        overlay = existingOverlay.get(0);
        _$jscoverage['access/display/js/jquery.flot.js'][760]++;
        reused = true;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][763]++;
      ctx = canvas.getContext("2d");
      _$jscoverage['access/display/js/jquery.flot.js'][764]++;
      octx = overlay.getContext("2d");
      _$jscoverage['access/display/js/jquery.flot.js'][768]++;
      eventHolder = $([overlay, canvas]);
      _$jscoverage['access/display/js/jquery.flot.js'][770]++;
      if (reused) {
        _$jscoverage['access/display/js/jquery.flot.js'][772]++;
        placeholder.data("plot").shutdown();
        _$jscoverage['access/display/js/jquery.flot.js'][775]++;
        plot.resize();
        _$jscoverage['access/display/js/jquery.flot.js'][778]++;
        octx.clearRect(0, 0, canvasWidth, canvasHeight);
        _$jscoverage['access/display/js/jquery.flot.js'][781]++;
        eventHolder.unbind();
        _$jscoverage['access/display/js/jquery.flot.js'][782]++;
        placeholder.children().not([canvas, overlay]).remove();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][786]++;
      placeholder.data("plot", plot);
}
    _$jscoverage['access/display/js/jquery.flot.js'][789]++;
    function bindEvents() {
      _$jscoverage['access/display/js/jquery.flot.js'][791]++;
      if (options.grid.hoverable) {
        _$jscoverage['access/display/js/jquery.flot.js'][792]++;
        eventHolder.mousemove(onMouseMove);
        _$jscoverage['access/display/js/jquery.flot.js'][793]++;
        eventHolder.mouseleave(onMouseLeave);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][796]++;
      if (options.grid.clickable) {
        _$jscoverage['access/display/js/jquery.flot.js'][797]++;
        eventHolder.click(onClick);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][799]++;
      executeHooks(hooks.bindEvents, [eventHolder]);
}
    _$jscoverage['access/display/js/jquery.flot.js'][802]++;
    function shutdown() {
      _$jscoverage['access/display/js/jquery.flot.js'][803]++;
      if (redrawTimeout) {
        _$jscoverage['access/display/js/jquery.flot.js'][804]++;
        clearTimeout(redrawTimeout);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][806]++;
      eventHolder.unbind("mousemove", onMouseMove);
      _$jscoverage['access/display/js/jquery.flot.js'][807]++;
      eventHolder.unbind("mouseleave", onMouseLeave);
      _$jscoverage['access/display/js/jquery.flot.js'][808]++;
      eventHolder.unbind("click", onClick);
      _$jscoverage['access/display/js/jquery.flot.js'][810]++;
      executeHooks(hooks.shutdown, [eventHolder]);
}
    _$jscoverage['access/display/js/jquery.flot.js'][813]++;
    function setTransformationHelpers(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][817]++;
      function identity(x) {
        _$jscoverage['access/display/js/jquery.flot.js'][817]++;
        return x;
}
      _$jscoverage['access/display/js/jquery.flot.js'][819]++;
      var s, m, t = axis.options.transform || identity, it = axis.options.inverseTransform;
      _$jscoverage['access/display/js/jquery.flot.js'][824]++;
      if (axis.direction == "x") {
        _$jscoverage['access/display/js/jquery.flot.js'][825]++;
        s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));
        _$jscoverage['access/display/js/jquery.flot.js'][826]++;
        m = Math.min(t(axis.max), t(axis.min));
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][829]++;
        s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));
        _$jscoverage['access/display/js/jquery.flot.js'][830]++;
        s = - s;
        _$jscoverage['access/display/js/jquery.flot.js'][831]++;
        m = Math.max(t(axis.max), t(axis.min));
      }
      _$jscoverage['access/display/js/jquery.flot.js'][835]++;
      if (t == identity) {
        _$jscoverage['access/display/js/jquery.flot.js'][836]++;
        axis.p2c = (function (p) {
  _$jscoverage['access/display/js/jquery.flot.js'][836]++;
  return (p - m) * s;
});
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][838]++;
        axis.p2c = (function (p) {
  _$jscoverage['access/display/js/jquery.flot.js'][838]++;
  return (t(p) - m) * s;
});
      }
      _$jscoverage['access/display/js/jquery.flot.js'][840]++;
      if (! it) {
        _$jscoverage['access/display/js/jquery.flot.js'][841]++;
        axis.c2p = (function (c) {
  _$jscoverage['access/display/js/jquery.flot.js'][841]++;
  return m + c / s;
});
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][843]++;
        axis.c2p = (function (c) {
  _$jscoverage['access/display/js/jquery.flot.js'][843]++;
  return it(m + c / s);
});
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][846]++;
    function measureTickLabels(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][847]++;
      var opts = axis.options, i, ticks = axis.ticks || [], labels = [], l, w = opts.labelWidth, h = opts.labelHeight, dummyDiv;
      _$jscoverage['access/display/js/jquery.flot.js'][850]++;
      function makeDummyDiv(labels, width) {
        _$jscoverage['access/display/js/jquery.flot.js'][851]++;
        return $("<div style=\"position:absolute;top:-10000px;" + width + "font-size:smaller\">" + "<div class=\"" + axis.direction + "Axis " + axis.direction + axis.n + "Axis\">" + labels.join("") + "</div></div>").appendTo(placeholder);
}
      _$jscoverage['access/display/js/jquery.flot.js'][857]++;
      if (axis.direction == "x") {
        _$jscoverage['access/display/js/jquery.flot.js'][862]++;
        if (w == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][863]++;
          w = Math.floor(canvasWidth / (ticks.length > 0? ticks.length: 1));
        }
        _$jscoverage['access/display/js/jquery.flot.js'][866]++;
        if (h == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][867]++;
          labels = [];
          _$jscoverage['access/display/js/jquery.flot.js'][868]++;
          for (i = 0; i < ticks.length; ++i) {
            _$jscoverage['access/display/js/jquery.flot.js'][869]++;
            l = ticks[i].label;
            _$jscoverage['access/display/js/jquery.flot.js'][870]++;
            if (l) {
              _$jscoverage['access/display/js/jquery.flot.js'][871]++;
              labels.push("<div class=\"tickLabel\" style=\"float:left;width:" + w + "px\">" + l + "</div>");
            }
}
          _$jscoverage['access/display/js/jquery.flot.js'][874]++;
          if (labels.length > 0) {
            _$jscoverage['access/display/js/jquery.flot.js'][877]++;
            labels.push("<div style=\"clear:left\"></div>");
            _$jscoverage['access/display/js/jquery.flot.js'][878]++;
            dummyDiv = makeDummyDiv(labels, "width:10000px;");
            _$jscoverage['access/display/js/jquery.flot.js'][879]++;
            h = dummyDiv.height();
            _$jscoverage['access/display/js/jquery.flot.js'][880]++;
            dummyDiv.remove();
          }
        }
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][884]++;
        if (w == null || h == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][886]++;
          for (i = 0; i < ticks.length; ++i) {
            _$jscoverage['access/display/js/jquery.flot.js'][887]++;
            l = ticks[i].label;
            _$jscoverage['access/display/js/jquery.flot.js'][888]++;
            if (l) {
              _$jscoverage['access/display/js/jquery.flot.js'][889]++;
              labels.push("<div class=\"tickLabel\">" + l + "</div>");
            }
}
          _$jscoverage['access/display/js/jquery.flot.js'][892]++;
          if (labels.length > 0) {
            _$jscoverage['access/display/js/jquery.flot.js'][893]++;
            dummyDiv = makeDummyDiv(labels, "");
            _$jscoverage['access/display/js/jquery.flot.js'][894]++;
            if (w == null) {
              _$jscoverage['access/display/js/jquery.flot.js'][895]++;
              w = dummyDiv.children().width();
            }
            _$jscoverage['access/display/js/jquery.flot.js'][896]++;
            if (h == null) {
              _$jscoverage['access/display/js/jquery.flot.js'][897]++;
              h = dummyDiv.find("div.tickLabel").height();
            }
            _$jscoverage['access/display/js/jquery.flot.js'][898]++;
            dummyDiv.remove();
          }
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][902]++;
      if (w == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][903]++;
        w = 0;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][904]++;
      if (h == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][905]++;
        h = 0;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][907]++;
      axis.labelWidth = w;
      _$jscoverage['access/display/js/jquery.flot.js'][908]++;
      axis.labelHeight = h;
}
    _$jscoverage['access/display/js/jquery.flot.js'][911]++;
    function allocateAxisBoxFirstPhase(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][916]++;
      var lw = axis.labelWidth, lh = axis.labelHeight, pos = axis.options.position, tickLength = axis.options.tickLength, axismargin = options.grid.axisMargin, padding = options.grid.labelMargin, all = axis.direction == "x"? xaxes: yaxes, index;
      _$jscoverage['access/display/js/jquery.flot.js'][926]++;
      var samePosition = $.grep(all, (function (a) {
  _$jscoverage['access/display/js/jquery.flot.js'][927]++;
  return a && a.options.position == pos && a.reserveSpace;
}));
      _$jscoverage['access/display/js/jquery.flot.js'][929]++;
      if ($.inArray(axis, samePosition) == samePosition.length - 1) {
        _$jscoverage['access/display/js/jquery.flot.js'][930]++;
        axismargin = 0;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][933]++;
      if (tickLength == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][934]++;
        tickLength = "full";
      }
      _$jscoverage['access/display/js/jquery.flot.js'][936]++;
      var sameDirection = $.grep(all, (function (a) {
  _$jscoverage['access/display/js/jquery.flot.js'][937]++;
  return a && a.reserveSpace;
}));
      _$jscoverage['access/display/js/jquery.flot.js'][940]++;
      var innermost = $.inArray(axis, sameDirection) == 0;
      _$jscoverage['access/display/js/jquery.flot.js'][941]++;
      if (! innermost && tickLength == "full") {
        _$jscoverage['access/display/js/jquery.flot.js'][942]++;
        tickLength = 5;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][944]++;
      if (! isNaN(+ tickLength)) {
        _$jscoverage['access/display/js/jquery.flot.js'][945]++;
        padding += + tickLength;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][948]++;
      if (axis.direction == "x") {
        _$jscoverage['access/display/js/jquery.flot.js'][949]++;
        lh += padding;
        _$jscoverage['access/display/js/jquery.flot.js'][951]++;
        if (pos == "bottom") {
          _$jscoverage['access/display/js/jquery.flot.js'][952]++;
          plotOffset.bottom += lh + axismargin;
          _$jscoverage['access/display/js/jquery.flot.js'][953]++;
          axis.box = {top: canvasHeight - plotOffset.bottom, height: lh};
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][956]++;
          axis.box = {top: plotOffset.top + axismargin, height: lh};
          _$jscoverage['access/display/js/jquery.flot.js'][957]++;
          plotOffset.top += lh + axismargin;
        }
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][961]++;
        lw += padding;
        _$jscoverage['access/display/js/jquery.flot.js'][963]++;
        if (pos == "left") {
          _$jscoverage['access/display/js/jquery.flot.js'][964]++;
          axis.box = {left: plotOffset.left + axismargin, width: lw};
          _$jscoverage['access/display/js/jquery.flot.js'][965]++;
          plotOffset.left += lw + axismargin;
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][968]++;
          plotOffset.right += lw + axismargin;
          _$jscoverage['access/display/js/jquery.flot.js'][969]++;
          axis.box = {left: canvasWidth - plotOffset.right, width: lw};
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][974]++;
      axis.position = pos;
      _$jscoverage['access/display/js/jquery.flot.js'][975]++;
      axis.tickLength = tickLength;
      _$jscoverage['access/display/js/jquery.flot.js'][976]++;
      axis.box.padding = padding;
      _$jscoverage['access/display/js/jquery.flot.js'][977]++;
      axis.innermost = innermost;
}
    _$jscoverage['access/display/js/jquery.flot.js'][980]++;
    function allocateAxisBoxSecondPhase(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][982]++;
      if (axis.direction == "x") {
        _$jscoverage['access/display/js/jquery.flot.js'][983]++;
        axis.box.left = plotOffset.left;
        _$jscoverage['access/display/js/jquery.flot.js'][984]++;
        axis.box.width = plotWidth;
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][987]++;
        axis.box.top = plotOffset.top;
        _$jscoverage['access/display/js/jquery.flot.js'][988]++;
        axis.box.height = plotHeight;
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][992]++;
    function setupGrid() {
      _$jscoverage['access/display/js/jquery.flot.js'][993]++;
      var i, axes = allAxes();
      _$jscoverage['access/display/js/jquery.flot.js'][997]++;
      $.each(axes, (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][998]++;
  axis.show = axis.options.show;
  _$jscoverage['access/display/js/jquery.flot.js'][999]++;
  if (axis.show == null) {
    _$jscoverage['access/display/js/jquery.flot.js'][1000]++;
    axis.show = axis.used;
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1002]++;
  axis.reserveSpace = axis.show || axis.options.reserveSpace;
  _$jscoverage['access/display/js/jquery.flot.js'][1004]++;
  setRange(axis);
}));
      _$jscoverage['access/display/js/jquery.flot.js'][1007]++;
      allocatedAxes = $.grep(axes, (function (axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1007]++;
  return axis.reserveSpace;
}));
      _$jscoverage['access/display/js/jquery.flot.js'][1009]++;
      plotOffset.left = plotOffset.right = plotOffset.top = plotOffset.bottom = 0;
      _$jscoverage['access/display/js/jquery.flot.js'][1010]++;
      if (options.grid.show) {
        _$jscoverage['access/display/js/jquery.flot.js'][1011]++;
        $.each(allocatedAxes, (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1013]++;
  setupTickGeneration(axis);
  _$jscoverage['access/display/js/jquery.flot.js'][1014]++;
  setTicks(axis);
  _$jscoverage['access/display/js/jquery.flot.js'][1015]++;
  snapRangeToTicks(axis, axis.ticks);
  _$jscoverage['access/display/js/jquery.flot.js'][1018]++;
  measureTickLabels(axis);
}));
        _$jscoverage['access/display/js/jquery.flot.js'][1023]++;
        for (i = allocatedAxes.length - 1; i >= 0; --i) {
          _$jscoverage['access/display/js/jquery.flot.js'][1024]++;
          allocateAxisBoxFirstPhase(allocatedAxes[i]);
}
        _$jscoverage['access/display/js/jquery.flot.js'][1028]++;
        var minMargin = options.grid.minBorderMargin;
        _$jscoverage['access/display/js/jquery.flot.js'][1029]++;
        if (minMargin == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1030]++;
          minMargin = 0;
          _$jscoverage['access/display/js/jquery.flot.js'][1031]++;
          for (i = 0; i < series.length; ++i) {
            _$jscoverage['access/display/js/jquery.flot.js'][1032]++;
            minMargin = Math.max(minMargin, series[i].points.radius + series[i].points.lineWidth / 2);
}
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1035]++;
        for (var a in plotOffset) {
          _$jscoverage['access/display/js/jquery.flot.js'][1036]++;
          plotOffset[a] += options.grid.borderWidth;
          _$jscoverage['access/display/js/jquery.flot.js'][1037]++;
          plotOffset[a] = Math.max(minMargin, plotOffset[a]);
}
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1041]++;
      plotWidth = canvasWidth - plotOffset.left - plotOffset.right;
      _$jscoverage['access/display/js/jquery.flot.js'][1042]++;
      plotHeight = canvasHeight - plotOffset.bottom - plotOffset.top;
      _$jscoverage['access/display/js/jquery.flot.js'][1045]++;
      $.each(axes, (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1046]++;
  setTransformationHelpers(axis);
}));
      _$jscoverage['access/display/js/jquery.flot.js'][1049]++;
      if (options.grid.show) {
        _$jscoverage['access/display/js/jquery.flot.js'][1050]++;
        $.each(allocatedAxes, (function (_, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1051]++;
  allocateAxisBoxSecondPhase(axis);
}));
        _$jscoverage['access/display/js/jquery.flot.js'][1054]++;
        insertAxisLabels();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1057]++;
      insertLegend();
}
    _$jscoverage['access/display/js/jquery.flot.js'][1060]++;
    function setRange(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][1061]++;
      var opts = axis.options, min = + (opts.min != null? opts.min: axis.datamin), max = + (opts.max != null? opts.max: axis.datamax), delta = max - min;
      _$jscoverage['access/display/js/jquery.flot.js'][1066]++;
      if (delta == 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][1068]++;
        var widen = max == 0? 1: 0.01;
        _$jscoverage['access/display/js/jquery.flot.js'][1070]++;
        if (opts.min == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1071]++;
          min -= widen;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1074]++;
        if (opts.max == null || opts.min != null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1075]++;
          max += widen;
        }
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1079]++;
        var margin = opts.autoscaleMargin;
        _$jscoverage['access/display/js/jquery.flot.js'][1080]++;
        if (margin != null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1081]++;
          if (opts.min == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1082]++;
            min -= delta * margin;
            _$jscoverage['access/display/js/jquery.flot.js'][1085]++;
            if (min < 0 && axis.datamin != null && axis.datamin >= 0) {
              _$jscoverage['access/display/js/jquery.flot.js'][1086]++;
              min = 0;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1088]++;
          if (opts.max == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1089]++;
            max += delta * margin;
            _$jscoverage['access/display/js/jquery.flot.js'][1090]++;
            if (max > 0 && axis.datamax != null && axis.datamax <= 0) {
              _$jscoverage['access/display/js/jquery.flot.js'][1091]++;
              max = 0;
            }
          }
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1095]++;
      axis.min = min;
      _$jscoverage['access/display/js/jquery.flot.js'][1096]++;
      axis.max = max;
}
    _$jscoverage['access/display/js/jquery.flot.js'][1099]++;
    function setupTickGeneration(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][1100]++;
      var opts = axis.options;
      _$jscoverage['access/display/js/jquery.flot.js'][1103]++;
      var noTicks;
      _$jscoverage['access/display/js/jquery.flot.js'][1104]++;
      if (typeof opts.ticks == "number" && opts.ticks > 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][1105]++;
        noTicks = opts.ticks;
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1109]++;
        noTicks = 0.3 * Math.sqrt(axis.direction == "x"? canvasWidth: canvasHeight);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1111]++;
      var delta = (axis.max - axis.min) / noTicks, size, generator, unit, formatter, i, magn, norm;
      _$jscoverage['access/display/js/jquery.flot.js'][1114]++;
      if (opts.mode == "time") {
        _$jscoverage['access/display/js/jquery.flot.js'][1118]++;
        var timeUnitSize = {"second": 1000, "minute": 60000, "hour": 3600000, "day": 86400000, "month": 2592000000, "year": 31556952000};
        _$jscoverage['access/display/js/jquery.flot.js'][1130]++;
        var spec = [[1, "second"], [2, "second"], [5, "second"], [10, "second"], [30, "second"], [1, "minute"], [2, "minute"], [5, "minute"], [10, "minute"], [30, "minute"], [1, "hour"], [2, "hour"], [4, "hour"], [8, "hour"], [12, "hour"], [1, "day"], [2, "day"], [3, "day"], [0.25, "month"], [0.5, "month"], [1, "month"], [2, "month"], [3, "month"], [6, "month"], [1, "year"]];
        _$jscoverage['access/display/js/jquery.flot.js'][1143]++;
        var minSize = 0;
        _$jscoverage['access/display/js/jquery.flot.js'][1144]++;
        if (opts.minTickSize != null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1145]++;
          if (typeof opts.tickSize == "number") {
            _$jscoverage['access/display/js/jquery.flot.js'][1146]++;
            minSize = opts.tickSize;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1148]++;
            minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1151]++;
        for (var i = 0; i < spec.length - 1; ++i) {
          _$jscoverage['access/display/js/jquery.flot.js'][1152]++;
          if (delta < (spec[i][0] * timeUnitSize[spec[i][1]] + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2 && spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {
            _$jscoverage['access/display/js/jquery.flot.js'][1155]++;
            break;
          }
}
        _$jscoverage['access/display/js/jquery.flot.js'][1156]++;
        size = spec[i][0];
        _$jscoverage['access/display/js/jquery.flot.js'][1157]++;
        unit = spec[i][1];
        _$jscoverage['access/display/js/jquery.flot.js'][1160]++;
        if (unit == "year") {
          _$jscoverage['access/display/js/jquery.flot.js'][1161]++;
          magn = Math.pow(10, Math.floor(Math.log(delta / timeUnitSize.year) / Math.LN10));
          _$jscoverage['access/display/js/jquery.flot.js'][1162]++;
          norm = (delta / timeUnitSize.year) / magn;
          _$jscoverage['access/display/js/jquery.flot.js'][1163]++;
          if (norm < 1.5) {
            _$jscoverage['access/display/js/jquery.flot.js'][1164]++;
            size = 1;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1165]++;
            if (norm < 3) {
              _$jscoverage['access/display/js/jquery.flot.js'][1166]++;
              size = 2;
            }
            else {
              _$jscoverage['access/display/js/jquery.flot.js'][1167]++;
              if (norm < 7.5) {
                _$jscoverage['access/display/js/jquery.flot.js'][1168]++;
                size = 5;
              }
              else {
                _$jscoverage['access/display/js/jquery.flot.js'][1170]++;
                size = 10;
              }
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1172]++;
          size *= magn;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1175]++;
        axis.tickSize = opts.tickSize || [size, unit];
        _$jscoverage['access/display/js/jquery.flot.js'][1177]++;
        generator = (function (axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1178]++;
  var ticks = [], tickSize = axis.tickSize[0], unit = axis.tickSize[1], d = new Date(axis.min);
  _$jscoverage['access/display/js/jquery.flot.js'][1182]++;
  var step = tickSize * timeUnitSize[unit];
  _$jscoverage['access/display/js/jquery.flot.js'][1184]++;
  if (unit == "second") {
    _$jscoverage['access/display/js/jquery.flot.js'][1185]++;
    d.setUTCSeconds(floorInBase(d.getUTCSeconds(), tickSize));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1186]++;
  if (unit == "minute") {
    _$jscoverage['access/display/js/jquery.flot.js'][1187]++;
    d.setUTCMinutes(floorInBase(d.getUTCMinutes(), tickSize));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1188]++;
  if (unit == "hour") {
    _$jscoverage['access/display/js/jquery.flot.js'][1189]++;
    d.setUTCHours(floorInBase(d.getUTCHours(), tickSize));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1190]++;
  if (unit == "month") {
    _$jscoverage['access/display/js/jquery.flot.js'][1191]++;
    d.setUTCMonth(floorInBase(d.getUTCMonth(), tickSize));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1192]++;
  if (unit == "year") {
    _$jscoverage['access/display/js/jquery.flot.js'][1193]++;
    d.setUTCFullYear(floorInBase(d.getUTCFullYear(), tickSize));
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1196]++;
  d.setUTCMilliseconds(0);
  _$jscoverage['access/display/js/jquery.flot.js'][1197]++;
  if (step >= timeUnitSize.minute) {
    _$jscoverage['access/display/js/jquery.flot.js'][1198]++;
    d.setUTCSeconds(0);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1199]++;
  if (step >= timeUnitSize.hour) {
    _$jscoverage['access/display/js/jquery.flot.js'][1200]++;
    d.setUTCMinutes(0);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1201]++;
  if (step >= timeUnitSize.day) {
    _$jscoverage['access/display/js/jquery.flot.js'][1202]++;
    d.setUTCHours(0);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1203]++;
  if (step >= timeUnitSize.day * 4) {
    _$jscoverage['access/display/js/jquery.flot.js'][1204]++;
    d.setUTCDate(1);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1205]++;
  if (step >= timeUnitSize.year) {
    _$jscoverage['access/display/js/jquery.flot.js'][1206]++;
    d.setUTCMonth(0);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1209]++;
  var carry = 0, v = Number.NaN, prev;
  _$jscoverage['access/display/js/jquery.flot.js'][1210]++;
  do {
    _$jscoverage['access/display/js/jquery.flot.js'][1211]++;
    prev = v;
    _$jscoverage['access/display/js/jquery.flot.js'][1212]++;
    v = d.getTime();
    _$jscoverage['access/display/js/jquery.flot.js'][1213]++;
    ticks.push(v);
    _$jscoverage['access/display/js/jquery.flot.js'][1214]++;
    if (unit == "month") {
      _$jscoverage['access/display/js/jquery.flot.js'][1215]++;
      if (tickSize < 1) {
        _$jscoverage['access/display/js/jquery.flot.js'][1219]++;
        d.setUTCDate(1);
        _$jscoverage['access/display/js/jquery.flot.js'][1220]++;
        var start = d.getTime();
        _$jscoverage['access/display/js/jquery.flot.js'][1221]++;
        d.setUTCMonth(d.getUTCMonth() + 1);
        _$jscoverage['access/display/js/jquery.flot.js'][1222]++;
        var end = d.getTime();
        _$jscoverage['access/display/js/jquery.flot.js'][1223]++;
        d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);
        _$jscoverage['access/display/js/jquery.flot.js'][1224]++;
        carry = d.getUTCHours();
        _$jscoverage['access/display/js/jquery.flot.js'][1225]++;
        d.setUTCHours(0);
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1228]++;
        d.setUTCMonth(d.getUTCMonth() + tickSize);
      }
    }
    else {
      _$jscoverage['access/display/js/jquery.flot.js'][1230]++;
      if (unit == "year") {
        _$jscoverage['access/display/js/jquery.flot.js'][1231]++;
        d.setUTCFullYear(d.getUTCFullYear() + tickSize);
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1234]++;
        d.setTime(v + step);
      }
    }
}
  while (v < axis.max && v != prev);
  _$jscoverage['access/display/js/jquery.flot.js'][1237]++;
  return ticks;
});
        _$jscoverage['access/display/js/jquery.flot.js'][1240]++;
        formatter = (function (v, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1241]++;
  var d = new Date(v);
  _$jscoverage['access/display/js/jquery.flot.js'][1244]++;
  if (opts.timeformat != null) {
    _$jscoverage['access/display/js/jquery.flot.js'][1245]++;
    return $.plot.formatDate(d, opts.timeformat, opts.monthNames);
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1247]++;
  var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];
  _$jscoverage['access/display/js/jquery.flot.js'][1248]++;
  var span = axis.max - axis.min;
  _$jscoverage['access/display/js/jquery.flot.js'][1249]++;
  var suffix = opts.twelveHourClock? " %p": "";
  _$jscoverage['access/display/js/jquery.flot.js'][1251]++;
  if (t < timeUnitSize.minute) {
    _$jscoverage['access/display/js/jquery.flot.js'][1252]++;
    fmt = "%h:%M:%S" + suffix;
  }
  else {
    _$jscoverage['access/display/js/jquery.flot.js'][1253]++;
    if (t < timeUnitSize.day) {
      _$jscoverage['access/display/js/jquery.flot.js'][1254]++;
      if (span < 2 * timeUnitSize.day) {
        _$jscoverage['access/display/js/jquery.flot.js'][1255]++;
        fmt = "%h:%M" + suffix;
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1257]++;
        fmt = "%b %d %h:%M" + suffix;
      }
    }
    else {
      _$jscoverage['access/display/js/jquery.flot.js'][1259]++;
      if (t < timeUnitSize.month) {
        _$jscoverage['access/display/js/jquery.flot.js'][1260]++;
        fmt = "%b %d";
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1261]++;
        if (t < timeUnitSize.year) {
          _$jscoverage['access/display/js/jquery.flot.js'][1262]++;
          if (span < timeUnitSize.year) {
            _$jscoverage['access/display/js/jquery.flot.js'][1263]++;
            fmt = "%b";
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1265]++;
            fmt = "%b %y";
          }
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][1268]++;
          fmt = "%y";
        }
      }
    }
  }
  _$jscoverage['access/display/js/jquery.flot.js'][1270]++;
  return $.plot.formatDate(d, fmt, opts.monthNames);
});
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1275]++;
        var maxDec = opts.tickDecimals;
        _$jscoverage['access/display/js/jquery.flot.js'][1276]++;
        var dec = - Math.floor(Math.log(delta) / Math.LN10);
        _$jscoverage['access/display/js/jquery.flot.js'][1277]++;
        if (maxDec != null && dec > maxDec) {
          _$jscoverage['access/display/js/jquery.flot.js'][1278]++;
          dec = maxDec;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1280]++;
        magn = Math.pow(10, - dec);
        _$jscoverage['access/display/js/jquery.flot.js'][1281]++;
        norm = delta / magn;
        _$jscoverage['access/display/js/jquery.flot.js'][1283]++;
        if (norm < 1.5) {
          _$jscoverage['access/display/js/jquery.flot.js'][1284]++;
          size = 1;
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][1285]++;
          if (norm < 3) {
            _$jscoverage['access/display/js/jquery.flot.js'][1286]++;
            size = 2;
            _$jscoverage['access/display/js/jquery.flot.js'][1288]++;
            if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {
              _$jscoverage['access/display/js/jquery.flot.js'][1289]++;
              size = 2.5;
              _$jscoverage['access/display/js/jquery.flot.js'][1290]++;
              ++dec;
            }
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1293]++;
            if (norm < 7.5) {
              _$jscoverage['access/display/js/jquery.flot.js'][1294]++;
              size = 5;
            }
            else {
              _$jscoverage['access/display/js/jquery.flot.js'][1296]++;
              size = 10;
            }
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1298]++;
        size *= magn;
        _$jscoverage['access/display/js/jquery.flot.js'][1300]++;
        if (opts.minTickSize != null && size < opts.minTickSize) {
          _$jscoverage['access/display/js/jquery.flot.js'][1301]++;
          size = opts.minTickSize;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1303]++;
        axis.tickDecimals = Math.max(0, maxDec != null? maxDec: dec);
        _$jscoverage['access/display/js/jquery.flot.js'][1304]++;
        axis.tickSize = opts.tickSize || size;
        _$jscoverage['access/display/js/jquery.flot.js'][1306]++;
        generator = (function (axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1307]++;
  var ticks = [];
  _$jscoverage['access/display/js/jquery.flot.js'][1310]++;
  var start = floorInBase(axis.min, axis.tickSize), i = 0, v = Number.NaN, prev;
  _$jscoverage['access/display/js/jquery.flot.js'][1312]++;
  do {
    _$jscoverage['access/display/js/jquery.flot.js'][1313]++;
    prev = v;
    _$jscoverage['access/display/js/jquery.flot.js'][1314]++;
    v = start + i * axis.tickSize;
    _$jscoverage['access/display/js/jquery.flot.js'][1315]++;
    ticks.push(v);
    _$jscoverage['access/display/js/jquery.flot.js'][1316]++;
    ++i;
}
  while (v < axis.max && v != prev);
  _$jscoverage['access/display/js/jquery.flot.js'][1318]++;
  return ticks;
});
        _$jscoverage['access/display/js/jquery.flot.js'][1321]++;
        formatter = (function (v, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1322]++;
  return v.toFixed(axis.tickDecimals);
});
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1326]++;
      if (opts.alignTicksWithAxis != null) {
        _$jscoverage['access/display/js/jquery.flot.js'][1327]++;
        var otherAxis = (axis.direction == "x"? xaxes: yaxes)[opts.alignTicksWithAxis - 1];
        _$jscoverage['access/display/js/jquery.flot.js'][1328]++;
        if (otherAxis && otherAxis.used && otherAxis != axis) {
          _$jscoverage['access/display/js/jquery.flot.js'][1330]++;
          var niceTicks = generator(axis);
          _$jscoverage['access/display/js/jquery.flot.js'][1331]++;
          if (niceTicks.length > 0) {
            _$jscoverage['access/display/js/jquery.flot.js'][1332]++;
            if (opts.min == null) {
              _$jscoverage['access/display/js/jquery.flot.js'][1333]++;
              axis.min = Math.min(axis.min, niceTicks[0]);
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1334]++;
            if (opts.max == null && niceTicks.length > 1) {
              _$jscoverage['access/display/js/jquery.flot.js'][1335]++;
              axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1338]++;
          generator = (function (axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1340]++;
  var ticks = [], v, i;
  _$jscoverage['access/display/js/jquery.flot.js'][1341]++;
  for (i = 0; i < otherAxis.ticks.length; ++i) {
    _$jscoverage['access/display/js/jquery.flot.js'][1342]++;
    v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);
    _$jscoverage['access/display/js/jquery.flot.js'][1343]++;
    v = axis.min + v * (axis.max - axis.min);
    _$jscoverage['access/display/js/jquery.flot.js'][1344]++;
    ticks.push(v);
}
  _$jscoverage['access/display/js/jquery.flot.js'][1346]++;
  return ticks;
});
          _$jscoverage['access/display/js/jquery.flot.js'][1351]++;
          if (axis.mode != "time" && opts.tickDecimals == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1352]++;
            var extraDec = Math.max(0, - Math.floor(Math.log(delta) / Math.LN10) + 1), ts = generator(axis);
            _$jscoverage['access/display/js/jquery.flot.js'][1358]++;
            if (! (ts.length > 1 && /\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec)))) {
              _$jscoverage['access/display/js/jquery.flot.js'][1359]++;
              axis.tickDecimals = extraDec;
            }
          }
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1364]++;
      axis.tickGenerator = generator;
      _$jscoverage['access/display/js/jquery.flot.js'][1365]++;
      if ($.isFunction(opts.tickFormatter)) {
        _$jscoverage['access/display/js/jquery.flot.js'][1366]++;
        axis.tickFormatter = (function (v, axis) {
  _$jscoverage['access/display/js/jquery.flot.js'][1366]++;
  return "" + opts.tickFormatter(v, axis);
});
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1368]++;
        axis.tickFormatter = formatter;
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][1371]++;
    function setTicks(axis) {
      _$jscoverage['access/display/js/jquery.flot.js'][1372]++;
      var oticks = axis.options.ticks, ticks = [];
      _$jscoverage['access/display/js/jquery.flot.js'][1373]++;
      if (oticks == null || (typeof oticks == "number" && oticks > 0)) {
        _$jscoverage['access/display/js/jquery.flot.js'][1374]++;
        ticks = axis.tickGenerator(axis);
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][1375]++;
        if (oticks) {
          _$jscoverage['access/display/js/jquery.flot.js'][1376]++;
          if ($.isFunction(oticks)) {
            _$jscoverage['access/display/js/jquery.flot.js'][1378]++;
            ticks = oticks({min: axis.min, max: axis.max});
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1380]++;
            ticks = oticks;
          }
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1384]++;
      var i, v;
      _$jscoverage['access/display/js/jquery.flot.js'][1385]++;
      axis.ticks = [];
      _$jscoverage['access/display/js/jquery.flot.js'][1386]++;
      for (i = 0; i < ticks.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][1387]++;
        var label = null;
        _$jscoverage['access/display/js/jquery.flot.js'][1388]++;
        var t = ticks[i];
        _$jscoverage['access/display/js/jquery.flot.js'][1389]++;
        if (typeof t == "object") {
          _$jscoverage['access/display/js/jquery.flot.js'][1390]++;
          v = + t[0];
          _$jscoverage['access/display/js/jquery.flot.js'][1391]++;
          if (t.length > 1) {
            _$jscoverage['access/display/js/jquery.flot.js'][1392]++;
            label = t[1];
          }
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][1395]++;
          v = + t;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1396]++;
        if (label == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1397]++;
          label = axis.tickFormatter(v, axis);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1398]++;
        if (! isNaN(v)) {
          _$jscoverage['access/display/js/jquery.flot.js'][1399]++;
          axis.ticks.push({v: v, label: label});
        }
}
}
    _$jscoverage['access/display/js/jquery.flot.js'][1403]++;
    function snapRangeToTicks(axis, ticks) {
      _$jscoverage['access/display/js/jquery.flot.js'][1404]++;
      if (axis.options.autoscaleMargin && ticks.length > 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][1406]++;
        if (axis.options.min == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][1407]++;
          axis.min = Math.min(axis.min, ticks[0].v);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1408]++;
        if (axis.options.max == null && ticks.length > 1) {
          _$jscoverage['access/display/js/jquery.flot.js'][1409]++;
          axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);
        }
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][1413]++;
    function draw() {
      _$jscoverage['access/display/js/jquery.flot.js'][1414]++;
      ctx.clearRect(0, 0, canvasWidth, canvasHeight);
      _$jscoverage['access/display/js/jquery.flot.js'][1416]++;
      var grid = options.grid;
      _$jscoverage['access/display/js/jquery.flot.js'][1419]++;
      if (grid.show && grid.backgroundColor) {
        _$jscoverage['access/display/js/jquery.flot.js'][1420]++;
        drawBackground();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1422]++;
      if (grid.show && ! grid.aboveData) {
        _$jscoverage['access/display/js/jquery.flot.js'][1423]++;
        drawGrid();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1425]++;
      for (var i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][1426]++;
        executeHooks(hooks.drawSeries, [ctx, series[i]]);
        _$jscoverage['access/display/js/jquery.flot.js'][1427]++;
        drawSeries(series[i]);
}
      _$jscoverage['access/display/js/jquery.flot.js'][1430]++;
      executeHooks(hooks.draw, [ctx]);
      _$jscoverage['access/display/js/jquery.flot.js'][1432]++;
      if (grid.show && grid.aboveData) {
        _$jscoverage['access/display/js/jquery.flot.js'][1433]++;
        drawGrid();
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][1436]++;
    function extractRange(ranges, coord) {
      _$jscoverage['access/display/js/jquery.flot.js'][1437]++;
      var axis, from, to, key, axes = allAxes();
      _$jscoverage['access/display/js/jquery.flot.js'][1439]++;
      for (i = 0; i < axes.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][1440]++;
        axis = axes[i];
        _$jscoverage['access/display/js/jquery.flot.js'][1441]++;
        if (axis.direction == coord) {
          _$jscoverage['access/display/js/jquery.flot.js'][1442]++;
          key = coord + axis.n + "axis";
          _$jscoverage['access/display/js/jquery.flot.js'][1443]++;
          if (! ranges[key] && axis.n == 1) {
            _$jscoverage['access/display/js/jquery.flot.js'][1444]++;
            key = coord + "axis";
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1445]++;
          if (ranges[key]) {
            _$jscoverage['access/display/js/jquery.flot.js'][1446]++;
            from = ranges[key].from;
            _$jscoverage['access/display/js/jquery.flot.js'][1447]++;
            to = ranges[key].to;
            _$jscoverage['access/display/js/jquery.flot.js'][1448]++;
            break;
          }
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][1454]++;
      if (! ranges[key]) {
        _$jscoverage['access/display/js/jquery.flot.js'][1455]++;
        axis = coord == "x"? xaxes[0]: yaxes[0];
        _$jscoverage['access/display/js/jquery.flot.js'][1456]++;
        from = ranges[coord + "1"];
        _$jscoverage['access/display/js/jquery.flot.js'][1457]++;
        to = ranges[coord + "2"];
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1461]++;
      if (from != null && to != null && from > to) {
        _$jscoverage['access/display/js/jquery.flot.js'][1462]++;
        var tmp = from;
        _$jscoverage['access/display/js/jquery.flot.js'][1463]++;
        from = to;
        _$jscoverage['access/display/js/jquery.flot.js'][1464]++;
        to = tmp;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1467]++;
      return ({from: from, to: to, axis: axis});
}
    _$jscoverage['access/display/js/jquery.flot.js'][1470]++;
    function drawBackground() {
      _$jscoverage['access/display/js/jquery.flot.js'][1471]++;
      ctx.save();
      _$jscoverage['access/display/js/jquery.flot.js'][1472]++;
      ctx.translate(plotOffset.left, plotOffset.top);
      _$jscoverage['access/display/js/jquery.flot.js'][1474]++;
      ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, "rgba(255, 255, 255, 0)");
      _$jscoverage['access/display/js/jquery.flot.js'][1475]++;
      ctx.fillRect(0, 0, plotWidth, plotHeight);
      _$jscoverage['access/display/js/jquery.flot.js'][1476]++;
      ctx.restore();
}
    _$jscoverage['access/display/js/jquery.flot.js'][1479]++;
    function drawGrid() {
      _$jscoverage['access/display/js/jquery.flot.js'][1480]++;
      var i;
      _$jscoverage['access/display/js/jquery.flot.js'][1482]++;
      ctx.save();
      _$jscoverage['access/display/js/jquery.flot.js'][1483]++;
      ctx.translate(plotOffset.left, plotOffset.top);
      _$jscoverage['access/display/js/jquery.flot.js'][1486]++;
      var markings = options.grid.markings;
      _$jscoverage['access/display/js/jquery.flot.js'][1487]++;
      if (markings) {
        _$jscoverage['access/display/js/jquery.flot.js'][1488]++;
        if ($.isFunction(markings)) {
          _$jscoverage['access/display/js/jquery.flot.js'][1489]++;
          var axes = plot.getAxes();
          _$jscoverage['access/display/js/jquery.flot.js'][1492]++;
          axes.xmin = axes.xaxis.min;
          _$jscoverage['access/display/js/jquery.flot.js'][1493]++;
          axes.xmax = axes.xaxis.max;
          _$jscoverage['access/display/js/jquery.flot.js'][1494]++;
          axes.ymin = axes.yaxis.min;
          _$jscoverage['access/display/js/jquery.flot.js'][1495]++;
          axes.ymax = axes.yaxis.max;
          _$jscoverage['access/display/js/jquery.flot.js'][1497]++;
          markings = markings(axes);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1500]++;
        for (i = 0; i < markings.length; ++i) {
          _$jscoverage['access/display/js/jquery.flot.js'][1501]++;
          var m = markings[i], xrange = extractRange(m, "x"), yrange = extractRange(m, "y");
          _$jscoverage['access/display/js/jquery.flot.js'][1506]++;
          if (xrange.from == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1507]++;
            xrange.from = xrange.axis.min;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1508]++;
          if (xrange.to == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1509]++;
            xrange.to = xrange.axis.max;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1510]++;
          if (yrange.from == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1511]++;
            yrange.from = yrange.axis.min;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1512]++;
          if (yrange.to == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1513]++;
            yrange.to = yrange.axis.max;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1516]++;
          if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max || yrange.to < yrange.axis.min || yrange.from > yrange.axis.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1518]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1520]++;
          xrange.from = Math.max(xrange.from, xrange.axis.min);
          _$jscoverage['access/display/js/jquery.flot.js'][1521]++;
          xrange.to = Math.min(xrange.to, xrange.axis.max);
          _$jscoverage['access/display/js/jquery.flot.js'][1522]++;
          yrange.from = Math.max(yrange.from, yrange.axis.min);
          _$jscoverage['access/display/js/jquery.flot.js'][1523]++;
          yrange.to = Math.min(yrange.to, yrange.axis.max);
          _$jscoverage['access/display/js/jquery.flot.js'][1525]++;
          if (xrange.from == xrange.to && yrange.from == yrange.to) {
            _$jscoverage['access/display/js/jquery.flot.js'][1526]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1529]++;
          xrange.from = xrange.axis.p2c(xrange.from);
          _$jscoverage['access/display/js/jquery.flot.js'][1530]++;
          xrange.to = xrange.axis.p2c(xrange.to);
          _$jscoverage['access/display/js/jquery.flot.js'][1531]++;
          yrange.from = yrange.axis.p2c(yrange.from);
          _$jscoverage['access/display/js/jquery.flot.js'][1532]++;
          yrange.to = yrange.axis.p2c(yrange.to);
          _$jscoverage['access/display/js/jquery.flot.js'][1534]++;
          if (xrange.from == xrange.to || yrange.from == yrange.to) {
            _$jscoverage['access/display/js/jquery.flot.js'][1536]++;
            ctx.beginPath();
            _$jscoverage['access/display/js/jquery.flot.js'][1537]++;
            ctx.strokeStyle = m.color || options.grid.markingsColor;
            _$jscoverage['access/display/js/jquery.flot.js'][1538]++;
            ctx.lineWidth = m.lineWidth || options.grid.markingsLineWidth;
            _$jscoverage['access/display/js/jquery.flot.js'][1539]++;
            ctx.moveTo(xrange.from, yrange.from);
            _$jscoverage['access/display/js/jquery.flot.js'][1540]++;
            ctx.lineTo(xrange.to, yrange.to);
            _$jscoverage['access/display/js/jquery.flot.js'][1541]++;
            ctx.stroke();
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1545]++;
            ctx.fillStyle = m.color || options.grid.markingsColor;
            _$jscoverage['access/display/js/jquery.flot.js'][1546]++;
            ctx.fillRect(xrange.from, yrange.to, xrange.to - xrange.from, yrange.from - yrange.to);
          }
}
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1554]++;
      var axes = allAxes(), bw = options.grid.borderWidth;
      _$jscoverage['access/display/js/jquery.flot.js'][1556]++;
      for (var j = 0; j < axes.length; ++j) {
        _$jscoverage['access/display/js/jquery.flot.js'][1557]++;
        var axis = axes[j], box = axis.box, t = axis.tickLength, x, y, xoff, yoff;
        _$jscoverage['access/display/js/jquery.flot.js'][1559]++;
        if (! axis.show || axis.ticks.length == 0) {
          _$jscoverage['access/display/js/jquery.flot.js'][1560]++;
          continue;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1562]++;
        ctx.strokeStyle = axis.options.tickColor || $.color.parse(axis.options.color).scale("a", 0.22).toString();
        _$jscoverage['access/display/js/jquery.flot.js'][1563]++;
        ctx.lineWidth = 1;
        _$jscoverage['access/display/js/jquery.flot.js'][1566]++;
        if (axis.direction == "x") {
          _$jscoverage['access/display/js/jquery.flot.js'][1567]++;
          x = 0;
          _$jscoverage['access/display/js/jquery.flot.js'][1568]++;
          if (t == "full") {
            _$jscoverage['access/display/js/jquery.flot.js'][1569]++;
            y = (axis.position == "top"? 0: plotHeight);
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1571]++;
            y = box.top - plotOffset.top + (axis.position == "top"? box.height: 0);
          }
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][1574]++;
          y = 0;
          _$jscoverage['access/display/js/jquery.flot.js'][1575]++;
          if (t == "full") {
            _$jscoverage['access/display/js/jquery.flot.js'][1576]++;
            x = (axis.position == "left"? 0: plotWidth);
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1578]++;
            x = box.left - plotOffset.left + (axis.position == "left"? box.width: 0);
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1582]++;
        if (! axis.innermost) {
          _$jscoverage['access/display/js/jquery.flot.js'][1583]++;
          ctx.beginPath();
          _$jscoverage['access/display/js/jquery.flot.js'][1584]++;
          xoff = yoff = 0;
          _$jscoverage['access/display/js/jquery.flot.js'][1585]++;
          if (axis.direction == "x") {
            _$jscoverage['access/display/js/jquery.flot.js'][1586]++;
            xoff = plotWidth;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1588]++;
            yoff = plotHeight;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1590]++;
          if (ctx.lineWidth == 1) {
            _$jscoverage['access/display/js/jquery.flot.js'][1591]++;
            x = Math.floor(x) + 0.5;
            _$jscoverage['access/display/js/jquery.flot.js'][1592]++;
            y = Math.floor(y) + 0.5;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1595]++;
          ctx.moveTo(x, y);
          _$jscoverage['access/display/js/jquery.flot.js'][1596]++;
          ctx.lineTo(x + xoff, y + yoff);
          _$jscoverage['access/display/js/jquery.flot.js'][1597]++;
          ctx.stroke();
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1601]++;
        ctx.beginPath();
        _$jscoverage['access/display/js/jquery.flot.js'][1602]++;
        for (i = 0; i < axis.ticks.length; ++i) {
          _$jscoverage['access/display/js/jquery.flot.js'][1603]++;
          var v = axis.ticks[i].v;
          _$jscoverage['access/display/js/jquery.flot.js'][1605]++;
          xoff = yoff = 0;
          _$jscoverage['access/display/js/jquery.flot.js'][1607]++;
          if (v < axis.min || v > axis.max || (t == "full" && bw > 0 && (v == axis.min || v == axis.max))) {
            _$jscoverage['access/display/js/jquery.flot.js'][1611]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1613]++;
          if (axis.direction == "x") {
            _$jscoverage['access/display/js/jquery.flot.js'][1614]++;
            x = axis.p2c(v);
            _$jscoverage['access/display/js/jquery.flot.js'][1615]++;
            yoff = t == "full"? - plotHeight: t;
            _$jscoverage['access/display/js/jquery.flot.js'][1617]++;
            if (axis.position == "top") {
              _$jscoverage['access/display/js/jquery.flot.js'][1618]++;
              yoff = - yoff;
            }
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1621]++;
            y = axis.p2c(v);
            _$jscoverage['access/display/js/jquery.flot.js'][1622]++;
            xoff = t == "full"? - plotWidth: t;
            _$jscoverage['access/display/js/jquery.flot.js'][1624]++;
            if (axis.position == "left") {
              _$jscoverage['access/display/js/jquery.flot.js'][1625]++;
              xoff = - xoff;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1628]++;
          if (ctx.lineWidth == 1) {
            _$jscoverage['access/display/js/jquery.flot.js'][1629]++;
            if (axis.direction == "x") {
              _$jscoverage['access/display/js/jquery.flot.js'][1630]++;
              x = Math.floor(x) + 0.5;
            }
            else {
              _$jscoverage['access/display/js/jquery.flot.js'][1632]++;
              y = Math.floor(y) + 0.5;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1635]++;
          ctx.moveTo(x, y);
          _$jscoverage['access/display/js/jquery.flot.js'][1636]++;
          ctx.lineTo(x + xoff, y + yoff);
}
        _$jscoverage['access/display/js/jquery.flot.js'][1639]++;
        ctx.stroke();
}
      _$jscoverage['access/display/js/jquery.flot.js'][1644]++;
      if (bw) {
        _$jscoverage['access/display/js/jquery.flot.js'][1645]++;
        ctx.lineWidth = bw;
        _$jscoverage['access/display/js/jquery.flot.js'][1646]++;
        ctx.strokeStyle = options.grid.borderColor;
        _$jscoverage['access/display/js/jquery.flot.js'][1647]++;
        ctx.strokeRect(- bw / 2, - bw / 2, plotWidth + bw, plotHeight + bw);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1650]++;
      ctx.restore();
}
    _$jscoverage['access/display/js/jquery.flot.js'][1653]++;
    function insertAxisLabels() {
      _$jscoverage['access/display/js/jquery.flot.js'][1654]++;
      placeholder.find(".tickLabels").remove();
      _$jscoverage['access/display/js/jquery.flot.js'][1656]++;
      var html = ["<div class=\"tickLabels\" style=\"font-size:smaller\">"];
      _$jscoverage['access/display/js/jquery.flot.js'][1658]++;
      var axes = allAxes();
      _$jscoverage['access/display/js/jquery.flot.js'][1659]++;
      for (var j = 0; j < axes.length; ++j) {
        _$jscoverage['access/display/js/jquery.flot.js'][1660]++;
        var axis = axes[j], box = axis.box;
        _$jscoverage['access/display/js/jquery.flot.js'][1661]++;
        if (! axis.show) {
          _$jscoverage['access/display/js/jquery.flot.js'][1662]++;
          continue;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][1664]++;
        html.push("<div class=\"" + axis.direction + "Axis " + axis.direction + axis.n + "Axis\" style=\"color:" + axis.options.color + "\">");
        _$jscoverage['access/display/js/jquery.flot.js'][1665]++;
        for (var i = 0; i < axis.ticks.length; ++i) {
          _$jscoverage['access/display/js/jquery.flot.js'][1666]++;
          var tick = axis.ticks[i];
          _$jscoverage['access/display/js/jquery.flot.js'][1667]++;
          if (! tick.label || tick.v < axis.min || tick.v > axis.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1668]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1670]++;
          var pos = {}, align;
          _$jscoverage['access/display/js/jquery.flot.js'][1672]++;
          if (axis.direction == "x") {
            _$jscoverage['access/display/js/jquery.flot.js'][1673]++;
            align = "center";
            _$jscoverage['access/display/js/jquery.flot.js'][1674]++;
            pos.left = Math.round(plotOffset.left + axis.p2c(tick.v) - axis.labelWidth / 2);
            _$jscoverage['access/display/js/jquery.flot.js'][1675]++;
            if (axis.position == "bottom") {
              _$jscoverage['access/display/js/jquery.flot.js'][1676]++;
              pos.top = box.top + box.padding;
            }
            else {
              _$jscoverage['access/display/js/jquery.flot.js'][1678]++;
              pos.bottom = canvasHeight - (box.top + box.height - box.padding);
            }
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1681]++;
            pos.top = Math.round(plotOffset.top + axis.p2c(tick.v) - axis.labelHeight / 2);
            _$jscoverage['access/display/js/jquery.flot.js'][1682]++;
            if (axis.position == "left") {
              _$jscoverage['access/display/js/jquery.flot.js'][1683]++;
              pos.right = canvasWidth - (box.left + box.width - box.padding);
              _$jscoverage['access/display/js/jquery.flot.js'][1684]++;
              align = "right";
            }
            else {
              _$jscoverage['access/display/js/jquery.flot.js'][1687]++;
              pos.left = box.left + box.padding;
              _$jscoverage['access/display/js/jquery.flot.js'][1688]++;
              align = "left";
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1692]++;
          pos.width = axis.labelWidth;
          _$jscoverage['access/display/js/jquery.flot.js'][1694]++;
          var style = ["position:absolute", "text-align:" + align];
          _$jscoverage['access/display/js/jquery.flot.js'][1695]++;
          for (var a in pos) {
            _$jscoverage['access/display/js/jquery.flot.js'][1696]++;
            style.push(a + ":" + pos[a] + "px");
}
          _$jscoverage['access/display/js/jquery.flot.js'][1698]++;
          html.push("<div class=\"tickLabel\" style=\"" + style.join(";") + "\">" + tick.label + "</div>");
}
        _$jscoverage['access/display/js/jquery.flot.js'][1700]++;
        html.push("</div>");
}
      _$jscoverage['access/display/js/jquery.flot.js'][1703]++;
      html.push("</div>");
      _$jscoverage['access/display/js/jquery.flot.js'][1705]++;
      placeholder.append(html.join(""));
}
    _$jscoverage['access/display/js/jquery.flot.js'][1708]++;
    function drawSeries(series) {
      _$jscoverage['access/display/js/jquery.flot.js'][1709]++;
      if (series.lines.show) {
        _$jscoverage['access/display/js/jquery.flot.js'][1710]++;
        drawSeriesLines(series);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1711]++;
      if (series.bars.show) {
        _$jscoverage['access/display/js/jquery.flot.js'][1712]++;
        drawSeriesBars(series);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1713]++;
      if (series.points.show) {
        _$jscoverage['access/display/js/jquery.flot.js'][1714]++;
        drawSeriesPoints(series);
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][1717]++;
    function drawSeriesLines(series) {
      _$jscoverage['access/display/js/jquery.flot.js'][1718]++;
      function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {
        _$jscoverage['access/display/js/jquery.flot.js'][1719]++;
        var points = datapoints.points, ps = datapoints.pointsize, prevx = null, prevy = null;
        _$jscoverage['access/display/js/jquery.flot.js'][1723]++;
        ctx.beginPath();
        _$jscoverage['access/display/js/jquery.flot.js'][1724]++;
        for (var i = ps; i < points.length; i += ps) {
          _$jscoverage['access/display/js/jquery.flot.js'][1725]++;
          var x1 = points[i - ps], y1 = points[i - ps + 1], x2 = points[i], y2 = points[i + 1];
          _$jscoverage['access/display/js/jquery.flot.js'][1728]++;
          if (x1 == null || x2 == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1729]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1732]++;
          if (y1 <= y2 && y1 < axisy.min) {
            _$jscoverage['access/display/js/jquery.flot.js'][1733]++;
            if (y2 < axisy.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1734]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1736]++;
            x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
            _$jscoverage['access/display/js/jquery.flot.js'][1737]++;
            y1 = axisy.min;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1739]++;
            if (y2 <= y1 && y2 < axisy.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1740]++;
              if (y1 < axisy.min) {
                _$jscoverage['access/display/js/jquery.flot.js'][1741]++;
                continue;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][1742]++;
              x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
              _$jscoverage['access/display/js/jquery.flot.js'][1743]++;
              y2 = axisy.min;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1747]++;
          if (y1 >= y2 && y1 > axisy.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1748]++;
            if (y2 > axisy.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1749]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1750]++;
            x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
            _$jscoverage['access/display/js/jquery.flot.js'][1751]++;
            y1 = axisy.max;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1753]++;
            if (y2 >= y1 && y2 > axisy.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1754]++;
              if (y1 > axisy.max) {
                _$jscoverage['access/display/js/jquery.flot.js'][1755]++;
                continue;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][1756]++;
              x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
              _$jscoverage['access/display/js/jquery.flot.js'][1757]++;
              y2 = axisy.max;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1761]++;
          if (x1 <= x2 && x1 < axisx.min) {
            _$jscoverage['access/display/js/jquery.flot.js'][1762]++;
            if (x2 < axisx.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1763]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1764]++;
            y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
            _$jscoverage['access/display/js/jquery.flot.js'][1765]++;
            x1 = axisx.min;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1767]++;
            if (x2 <= x1 && x2 < axisx.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1768]++;
              if (x1 < axisx.min) {
                _$jscoverage['access/display/js/jquery.flot.js'][1769]++;
                continue;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][1770]++;
              y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
              _$jscoverage['access/display/js/jquery.flot.js'][1771]++;
              x2 = axisx.min;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1775]++;
          if (x1 >= x2 && x1 > axisx.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1776]++;
            if (x2 > axisx.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1777]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1778]++;
            y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
            _$jscoverage['access/display/js/jquery.flot.js'][1779]++;
            x1 = axisx.max;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1781]++;
            if (x2 >= x1 && x2 > axisx.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1782]++;
              if (x1 > axisx.max) {
                _$jscoverage['access/display/js/jquery.flot.js'][1783]++;
                continue;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][1784]++;
              y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
              _$jscoverage['access/display/js/jquery.flot.js'][1785]++;
              x2 = axisx.max;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1788]++;
          if (x1 != prevx || y1 != prevy) {
            _$jscoverage['access/display/js/jquery.flot.js'][1789]++;
            ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1791]++;
          prevx = x2;
          _$jscoverage['access/display/js/jquery.flot.js'][1792]++;
          prevy = y2;
          _$jscoverage['access/display/js/jquery.flot.js'][1793]++;
          ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);
}
        _$jscoverage['access/display/js/jquery.flot.js'][1795]++;
        ctx.stroke();
}
      _$jscoverage['access/display/js/jquery.flot.js'][1798]++;
      function plotLineArea(datapoints, axisx, axisy) {
        _$jscoverage['access/display/js/jquery.flot.js'][1799]++;
        var points = datapoints.points, ps = datapoints.pointsize, bottom = Math.min(Math.max(0, axisy.min), axisy.max), i = 0, top, areaOpen = false, ypos = 1, segmentStart = 0, segmentEnd = 0;
        _$jscoverage['access/display/js/jquery.flot.js'][1808]++;
        while (true) {
          _$jscoverage['access/display/js/jquery.flot.js'][1809]++;
          if (ps > 0 && i > points.length + ps) {
            _$jscoverage['access/display/js/jquery.flot.js'][1810]++;
            break;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1812]++;
          i += ps;
          _$jscoverage['access/display/js/jquery.flot.js'][1814]++;
          var x1 = points[i - ps], y1 = points[i - ps + ypos], x2 = points[i], y2 = points[i + ypos];
          _$jscoverage['access/display/js/jquery.flot.js'][1818]++;
          if (areaOpen) {
            _$jscoverage['access/display/js/jquery.flot.js'][1819]++;
            if (ps > 0 && x1 != null && x2 == null) {
              _$jscoverage['access/display/js/jquery.flot.js'][1821]++;
              segmentEnd = i;
              _$jscoverage['access/display/js/jquery.flot.js'][1822]++;
              ps = - ps;
              _$jscoverage['access/display/js/jquery.flot.js'][1823]++;
              ypos = 2;
              _$jscoverage['access/display/js/jquery.flot.js'][1824]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1827]++;
            if (ps < 0 && i == segmentStart + ps) {
              _$jscoverage['access/display/js/jquery.flot.js'][1829]++;
              ctx.fill();
              _$jscoverage['access/display/js/jquery.flot.js'][1830]++;
              areaOpen = false;
              _$jscoverage['access/display/js/jquery.flot.js'][1831]++;
              ps = - ps;
              _$jscoverage['access/display/js/jquery.flot.js'][1832]++;
              ypos = 1;
              _$jscoverage['access/display/js/jquery.flot.js'][1833]++;
              i = segmentStart = segmentEnd + ps;
              _$jscoverage['access/display/js/jquery.flot.js'][1834]++;
              continue;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1838]++;
          if (x1 == null || x2 == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][1839]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1844]++;
          if (x1 <= x2 && x1 < axisx.min) {
            _$jscoverage['access/display/js/jquery.flot.js'][1845]++;
            if (x2 < axisx.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1846]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1847]++;
            y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
            _$jscoverage['access/display/js/jquery.flot.js'][1848]++;
            x1 = axisx.min;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1850]++;
            if (x2 <= x1 && x2 < axisx.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1851]++;
              if (x1 < axisx.min) {
                _$jscoverage['access/display/js/jquery.flot.js'][1852]++;
                continue;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][1853]++;
              y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;
              _$jscoverage['access/display/js/jquery.flot.js'][1854]++;
              x2 = axisx.min;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1858]++;
          if (x1 >= x2 && x1 > axisx.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1859]++;
            if (x2 > axisx.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1860]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][1861]++;
            y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
            _$jscoverage['access/display/js/jquery.flot.js'][1862]++;
            x1 = axisx.max;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1864]++;
            if (x2 >= x1 && x2 > axisx.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1865]++;
              if (x1 > axisx.max) {
                _$jscoverage['access/display/js/jquery.flot.js'][1866]++;
                continue;
              }
              _$jscoverage['access/display/js/jquery.flot.js'][1867]++;
              y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;
              _$jscoverage['access/display/js/jquery.flot.js'][1868]++;
              x2 = axisx.max;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1871]++;
          if (! areaOpen) {
            _$jscoverage['access/display/js/jquery.flot.js'][1873]++;
            ctx.beginPath();
            _$jscoverage['access/display/js/jquery.flot.js'][1874]++;
            ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));
            _$jscoverage['access/display/js/jquery.flot.js'][1875]++;
            areaOpen = true;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1879]++;
          if (y1 >= axisy.max && y2 >= axisy.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1880]++;
            ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));
            _$jscoverage['access/display/js/jquery.flot.js'][1881]++;
            ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));
            _$jscoverage['access/display/js/jquery.flot.js'][1882]++;
            continue;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1884]++;
            if (y1 <= axisy.min && y2 <= axisy.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1885]++;
              ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));
              _$jscoverage['access/display/js/jquery.flot.js'][1886]++;
              ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));
              _$jscoverage['access/display/js/jquery.flot.js'][1887]++;
              continue;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1894]++;
          var x1old = x1, x2old = x2;
          _$jscoverage['access/display/js/jquery.flot.js'][1900]++;
          if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {
            _$jscoverage['access/display/js/jquery.flot.js'][1901]++;
            x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
            _$jscoverage['access/display/js/jquery.flot.js'][1902]++;
            y1 = axisy.min;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1904]++;
            if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {
              _$jscoverage['access/display/js/jquery.flot.js'][1905]++;
              x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;
              _$jscoverage['access/display/js/jquery.flot.js'][1906]++;
              y2 = axisy.min;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1910]++;
          if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1911]++;
            x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
            _$jscoverage['access/display/js/jquery.flot.js'][1912]++;
            y1 = axisy.max;
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1914]++;
            if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {
              _$jscoverage['access/display/js/jquery.flot.js'][1915]++;
              x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;
              _$jscoverage['access/display/js/jquery.flot.js'][1916]++;
              y2 = axisy.max;
            }
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1921]++;
          if (x1 != x1old) {
            _$jscoverage['access/display/js/jquery.flot.js'][1922]++;
            ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1929]++;
          ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));
          _$jscoverage['access/display/js/jquery.flot.js'][1930]++;
          ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
          _$jscoverage['access/display/js/jquery.flot.js'][1933]++;
          if (x2 != x2old) {
            _$jscoverage['access/display/js/jquery.flot.js'][1934]++;
            ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
            _$jscoverage['access/display/js/jquery.flot.js'][1935]++;
            ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));
          }
}
}
      _$jscoverage['access/display/js/jquery.flot.js'][1940]++;
      ctx.save();
      _$jscoverage['access/display/js/jquery.flot.js'][1941]++;
      ctx.translate(plotOffset.left, plotOffset.top);
      _$jscoverage['access/display/js/jquery.flot.js'][1942]++;
      ctx.lineJoin = "round";
      _$jscoverage['access/display/js/jquery.flot.js'][1944]++;
      var lw = series.lines.lineWidth, sw = series.shadowSize;
      _$jscoverage['access/display/js/jquery.flot.js'][1947]++;
      if (lw > 0 && sw > 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][1949]++;
        ctx.lineWidth = sw;
        _$jscoverage['access/display/js/jquery.flot.js'][1950]++;
        ctx.strokeStyle = "rgba(0,0,0,0.1)";
        _$jscoverage['access/display/js/jquery.flot.js'][1952]++;
        var angle = Math.PI / 18;
        _$jscoverage['access/display/js/jquery.flot.js'][1953]++;
        plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 2), Math.cos(angle) * (lw / 2 + sw / 2), series.xaxis, series.yaxis);
        _$jscoverage['access/display/js/jquery.flot.js'][1954]++;
        ctx.lineWidth = sw / 2;
        _$jscoverage['access/display/js/jquery.flot.js'][1955]++;
        plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 4), Math.cos(angle) * (lw / 2 + sw / 4), series.xaxis, series.yaxis);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1958]++;
      ctx.lineWidth = lw;
      _$jscoverage['access/display/js/jquery.flot.js'][1959]++;
      ctx.strokeStyle = series.color;
      _$jscoverage['access/display/js/jquery.flot.js'][1960]++;
      var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);
      _$jscoverage['access/display/js/jquery.flot.js'][1961]++;
      if (fillStyle) {
        _$jscoverage['access/display/js/jquery.flot.js'][1962]++;
        ctx.fillStyle = fillStyle;
        _$jscoverage['access/display/js/jquery.flot.js'][1963]++;
        plotLineArea(series.datapoints, series.xaxis, series.yaxis);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1966]++;
      if (lw > 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][1967]++;
        plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][1968]++;
      ctx.restore();
}
    _$jscoverage['access/display/js/jquery.flot.js'][1971]++;
    function drawSeriesPoints(series) {
      _$jscoverage['access/display/js/jquery.flot.js'][1972]++;
      function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {
        _$jscoverage['access/display/js/jquery.flot.js'][1973]++;
        var points = datapoints.points, ps = datapoints.pointsize;
        _$jscoverage['access/display/js/jquery.flot.js'][1975]++;
        for (var i = 0; i < points.length; i += ps) {
          _$jscoverage['access/display/js/jquery.flot.js'][1976]++;
          var x = points[i], y = points[i + 1];
          _$jscoverage['access/display/js/jquery.flot.js'][1977]++;
          if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max) {
            _$jscoverage['access/display/js/jquery.flot.js'][1978]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1980]++;
          ctx.beginPath();
          _$jscoverage['access/display/js/jquery.flot.js'][1981]++;
          x = axisx.p2c(x);
          _$jscoverage['access/display/js/jquery.flot.js'][1982]++;
          y = axisy.p2c(y) + offset;
          _$jscoverage['access/display/js/jquery.flot.js'][1983]++;
          if (symbol == "circle") {
            _$jscoverage['access/display/js/jquery.flot.js'][1984]++;
            ctx.arc(x, y, radius, 0, shadow? Math.PI: Math.PI * 2, false);
          }
          else {
            _$jscoverage['access/display/js/jquery.flot.js'][1986]++;
            symbol(ctx, x, y, radius, shadow);
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1987]++;
          ctx.closePath();
          _$jscoverage['access/display/js/jquery.flot.js'][1989]++;
          if (fillStyle) {
            _$jscoverage['access/display/js/jquery.flot.js'][1990]++;
            ctx.fillStyle = fillStyle;
            _$jscoverage['access/display/js/jquery.flot.js'][1991]++;
            ctx.fill();
          }
          _$jscoverage['access/display/js/jquery.flot.js'][1993]++;
          ctx.stroke();
}
}
      _$jscoverage['access/display/js/jquery.flot.js'][1997]++;
      ctx.save();
      _$jscoverage['access/display/js/jquery.flot.js'][1998]++;
      ctx.translate(plotOffset.left, plotOffset.top);
      _$jscoverage['access/display/js/jquery.flot.js'][2000]++;
      var lw = series.points.lineWidth, sw = series.shadowSize, radius = series.points.radius, symbol = series.points.symbol;
      _$jscoverage['access/display/js/jquery.flot.js'][2004]++;
      if (lw > 0 && sw > 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][2006]++;
        var w = sw / 2;
        _$jscoverage['access/display/js/jquery.flot.js'][2007]++;
        ctx.lineWidth = w;
        _$jscoverage['access/display/js/jquery.flot.js'][2008]++;
        ctx.strokeStyle = "rgba(0,0,0,0.1)";
        _$jscoverage['access/display/js/jquery.flot.js'][2009]++;
        plotPoints(series.datapoints, radius, null, w + w / 2, true, series.xaxis, series.yaxis, symbol);
        _$jscoverage['access/display/js/jquery.flot.js'][2012]++;
        ctx.strokeStyle = "rgba(0,0,0,0.2)";
        _$jscoverage['access/display/js/jquery.flot.js'][2013]++;
        plotPoints(series.datapoints, radius, null, w / 2, true, series.xaxis, series.yaxis, symbol);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2017]++;
      ctx.lineWidth = lw;
      _$jscoverage['access/display/js/jquery.flot.js'][2018]++;
      ctx.strokeStyle = series.color;
      _$jscoverage['access/display/js/jquery.flot.js'][2019]++;
      plotPoints(series.datapoints, radius, getFillStyle(series.points, series.color), 0, false, series.xaxis, series.yaxis, symbol);
      _$jscoverage['access/display/js/jquery.flot.js'][2022]++;
      ctx.restore();
}
    _$jscoverage['access/display/js/jquery.flot.js'][2025]++;
    function drawBar(x, y, b, barLeft, barRight, offset, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {
      _$jscoverage['access/display/js/jquery.flot.js'][2026]++;
      var left, right, bottom, top, drawLeft, drawRight, drawTop, drawBottom, tmp;
      _$jscoverage['access/display/js/jquery.flot.js'][2033]++;
      if (horizontal) {
        _$jscoverage['access/display/js/jquery.flot.js'][2034]++;
        drawBottom = drawRight = drawTop = true;
        _$jscoverage['access/display/js/jquery.flot.js'][2035]++;
        drawLeft = false;
        _$jscoverage['access/display/js/jquery.flot.js'][2036]++;
        left = b;
        _$jscoverage['access/display/js/jquery.flot.js'][2037]++;
        right = x;
        _$jscoverage['access/display/js/jquery.flot.js'][2038]++;
        top = y + barLeft;
        _$jscoverage['access/display/js/jquery.flot.js'][2039]++;
        bottom = y + barRight;
        _$jscoverage['access/display/js/jquery.flot.js'][2042]++;
        if (right < left) {
          _$jscoverage['access/display/js/jquery.flot.js'][2043]++;
          tmp = right;
          _$jscoverage['access/display/js/jquery.flot.js'][2044]++;
          right = left;
          _$jscoverage['access/display/js/jquery.flot.js'][2045]++;
          left = tmp;
          _$jscoverage['access/display/js/jquery.flot.js'][2046]++;
          drawLeft = true;
          _$jscoverage['access/display/js/jquery.flot.js'][2047]++;
          drawRight = false;
        }
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][2051]++;
        drawLeft = drawRight = drawTop = true;
        _$jscoverage['access/display/js/jquery.flot.js'][2052]++;
        drawBottom = false;
        _$jscoverage['access/display/js/jquery.flot.js'][2053]++;
        left = x + barLeft;
        _$jscoverage['access/display/js/jquery.flot.js'][2054]++;
        right = x + barRight;
        _$jscoverage['access/display/js/jquery.flot.js'][2055]++;
        bottom = b;
        _$jscoverage['access/display/js/jquery.flot.js'][2056]++;
        top = y;
        _$jscoverage['access/display/js/jquery.flot.js'][2059]++;
        if (top < bottom) {
          _$jscoverage['access/display/js/jquery.flot.js'][2060]++;
          tmp = top;
          _$jscoverage['access/display/js/jquery.flot.js'][2061]++;
          top = bottom;
          _$jscoverage['access/display/js/jquery.flot.js'][2062]++;
          bottom = tmp;
          _$jscoverage['access/display/js/jquery.flot.js'][2063]++;
          drawBottom = true;
          _$jscoverage['access/display/js/jquery.flot.js'][2064]++;
          drawTop = false;
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2069]++;
      if (right < axisx.min || left > axisx.max || top < axisy.min || bottom > axisy.max) {
        _$jscoverage['access/display/js/jquery.flot.js'][2071]++;
        return;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2073]++;
      if (left < axisx.min) {
        _$jscoverage['access/display/js/jquery.flot.js'][2074]++;
        left = axisx.min;
        _$jscoverage['access/display/js/jquery.flot.js'][2075]++;
        drawLeft = false;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2078]++;
      if (right > axisx.max) {
        _$jscoverage['access/display/js/jquery.flot.js'][2079]++;
        right = axisx.max;
        _$jscoverage['access/display/js/jquery.flot.js'][2080]++;
        drawRight = false;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2083]++;
      if (bottom < axisy.min) {
        _$jscoverage['access/display/js/jquery.flot.js'][2084]++;
        bottom = axisy.min;
        _$jscoverage['access/display/js/jquery.flot.js'][2085]++;
        drawBottom = false;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2088]++;
      if (top > axisy.max) {
        _$jscoverage['access/display/js/jquery.flot.js'][2089]++;
        top = axisy.max;
        _$jscoverage['access/display/js/jquery.flot.js'][2090]++;
        drawTop = false;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2093]++;
      left = axisx.p2c(left);
      _$jscoverage['access/display/js/jquery.flot.js'][2094]++;
      bottom = axisy.p2c(bottom);
      _$jscoverage['access/display/js/jquery.flot.js'][2095]++;
      right = axisx.p2c(right);
      _$jscoverage['access/display/js/jquery.flot.js'][2096]++;
      top = axisy.p2c(top);
      _$jscoverage['access/display/js/jquery.flot.js'][2099]++;
      if (fillStyleCallback) {
        _$jscoverage['access/display/js/jquery.flot.js'][2100]++;
        c.beginPath();
        _$jscoverage['access/display/js/jquery.flot.js'][2101]++;
        c.moveTo(left, bottom);
        _$jscoverage['access/display/js/jquery.flot.js'][2102]++;
        c.lineTo(left, top);
        _$jscoverage['access/display/js/jquery.flot.js'][2103]++;
        c.lineTo(right, top);
        _$jscoverage['access/display/js/jquery.flot.js'][2104]++;
        c.lineTo(right, bottom);
        _$jscoverage['access/display/js/jquery.flot.js'][2105]++;
        c.fillStyle = fillStyleCallback(bottom, top);
        _$jscoverage['access/display/js/jquery.flot.js'][2106]++;
        c.fill();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2110]++;
      if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {
        _$jscoverage['access/display/js/jquery.flot.js'][2111]++;
        c.beginPath();
        _$jscoverage['access/display/js/jquery.flot.js'][2114]++;
        c.moveTo(left, bottom + offset);
        _$jscoverage['access/display/js/jquery.flot.js'][2115]++;
        if (drawLeft) {
          _$jscoverage['access/display/js/jquery.flot.js'][2116]++;
          c.lineTo(left, top + offset);
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2118]++;
          c.moveTo(left, top + offset);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2119]++;
        if (drawTop) {
          _$jscoverage['access/display/js/jquery.flot.js'][2120]++;
          c.lineTo(right, top + offset);
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2122]++;
          c.moveTo(right, top + offset);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2123]++;
        if (drawRight) {
          _$jscoverage['access/display/js/jquery.flot.js'][2124]++;
          c.lineTo(right, bottom + offset);
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2126]++;
          c.moveTo(right, bottom + offset);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2127]++;
        if (drawBottom) {
          _$jscoverage['access/display/js/jquery.flot.js'][2128]++;
          c.lineTo(left, bottom + offset);
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2130]++;
          c.moveTo(left, bottom + offset);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2131]++;
        c.stroke();
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2135]++;
    function drawSeriesBars(series) {
      _$jscoverage['access/display/js/jquery.flot.js'][2136]++;
      function plotBars(datapoints, barLeft, barRight, offset, fillStyleCallback, axisx, axisy) {
        _$jscoverage['access/display/js/jquery.flot.js'][2137]++;
        var points = datapoints.points, ps = datapoints.pointsize;
        _$jscoverage['access/display/js/jquery.flot.js'][2139]++;
        for (var i = 0; i < points.length; i += ps) {
          _$jscoverage['access/display/js/jquery.flot.js'][2140]++;
          if (points[i] == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][2141]++;
            continue;
          }
          _$jscoverage['access/display/js/jquery.flot.js'][2142]++;
          drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, offset, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);
}
}
      _$jscoverage['access/display/js/jquery.flot.js'][2146]++;
      ctx.save();
      _$jscoverage['access/display/js/jquery.flot.js'][2147]++;
      ctx.translate(plotOffset.left, plotOffset.top);
      _$jscoverage['access/display/js/jquery.flot.js'][2150]++;
      ctx.lineWidth = series.bars.lineWidth;
      _$jscoverage['access/display/js/jquery.flot.js'][2151]++;
      ctx.strokeStyle = series.color;
      _$jscoverage['access/display/js/jquery.flot.js'][2152]++;
      var barLeft = series.bars.align == "left"? 0: - series.bars.barWidth / 2;
      _$jscoverage['access/display/js/jquery.flot.js'][2153]++;
      var fillStyleCallback = series.bars.fill? (function (bottom, top) {
  _$jscoverage['access/display/js/jquery.flot.js'][2153]++;
  return getFillStyle(series.bars, series.color, bottom, top);
}): null;
      _$jscoverage['access/display/js/jquery.flot.js'][2154]++;
      plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, 0, fillStyleCallback, series.xaxis, series.yaxis);
      _$jscoverage['access/display/js/jquery.flot.js'][2155]++;
      ctx.restore();
}
    _$jscoverage['access/display/js/jquery.flot.js'][2158]++;
    function getFillStyle(filloptions, seriesColor, bottom, top) {
      _$jscoverage['access/display/js/jquery.flot.js'][2159]++;
      var fill = filloptions.fill;
      _$jscoverage['access/display/js/jquery.flot.js'][2160]++;
      if (! fill) {
        _$jscoverage['access/display/js/jquery.flot.js'][2161]++;
        return null;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2163]++;
      if (filloptions.fillColor) {
        _$jscoverage['access/display/js/jquery.flot.js'][2164]++;
        return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2166]++;
      var c = $.color.parse(seriesColor);
      _$jscoverage['access/display/js/jquery.flot.js'][2167]++;
      c.a = typeof fill == "number"? fill: 0.4;
      _$jscoverage['access/display/js/jquery.flot.js'][2168]++;
      c.normalize();
      _$jscoverage['access/display/js/jquery.flot.js'][2169]++;
      return c.toString();
}
    _$jscoverage['access/display/js/jquery.flot.js'][2172]++;
    function insertLegend() {
      _$jscoverage['access/display/js/jquery.flot.js'][2173]++;
      placeholder.find(".legend").remove();
      _$jscoverage['access/display/js/jquery.flot.js'][2175]++;
      if (! options.legend.show) {
        _$jscoverage['access/display/js/jquery.flot.js'][2176]++;
        return;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2178]++;
      var fragments = [], rowStarted = false, lf = options.legend.labelFormatter, s, label;
      _$jscoverage['access/display/js/jquery.flot.js'][2180]++;
      for (var i = 0; i < series.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][2181]++;
        s = series[i];
        _$jscoverage['access/display/js/jquery.flot.js'][2182]++;
        label = s.label;
        _$jscoverage['access/display/js/jquery.flot.js'][2183]++;
        if (! label) {
          _$jscoverage['access/display/js/jquery.flot.js'][2184]++;
          continue;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2186]++;
        if (i % options.legend.noColumns == 0) {
          _$jscoverage['access/display/js/jquery.flot.js'][2187]++;
          if (rowStarted) {
            _$jscoverage['access/display/js/jquery.flot.js'][2188]++;
            fragments.push("</tr>");
          }
          _$jscoverage['access/display/js/jquery.flot.js'][2189]++;
          fragments.push("<tr>");
          _$jscoverage['access/display/js/jquery.flot.js'][2190]++;
          rowStarted = true;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2193]++;
        if (lf) {
          _$jscoverage['access/display/js/jquery.flot.js'][2194]++;
          label = lf(label, s);
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2196]++;
        fragments.push("<td class=\"legendColorBox\"><div style=\"border:1px solid " + options.legend.labelBoxBorderColor + ";padding:1px\"><div style=\"width:4px;height:0;border:5px solid " + s.color + ";overflow:hidden\"></div></div></td>" + "<td class=\"legendLabel\">" + label + "</td>");
}
      _$jscoverage['access/display/js/jquery.flot.js'][2200]++;
      if (rowStarted) {
        _$jscoverage['access/display/js/jquery.flot.js'][2201]++;
        fragments.push("</tr>");
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2203]++;
      if (fragments.length == 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][2204]++;
        return;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2206]++;
      var table = "<table style=\"font-size:smaller;color:" + options.grid.color + "\">" + fragments.join("") + "</table>";
      _$jscoverage['access/display/js/jquery.flot.js'][2207]++;
      if (options.legend.container != null) {
        _$jscoverage['access/display/js/jquery.flot.js'][2208]++;
        $(options.legend.container).html(table);
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][2210]++;
        var pos = "", p = options.legend.position, m = options.legend.margin;
        _$jscoverage['access/display/js/jquery.flot.js'][2213]++;
        if (m[0] == null) {
          _$jscoverage['access/display/js/jquery.flot.js'][2214]++;
          m = [m, m];
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2215]++;
        if (p.charAt(0) == "n") {
          _$jscoverage['access/display/js/jquery.flot.js'][2216]++;
          pos += "top:" + (m[1] + plotOffset.top) + "px;";
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2217]++;
          if (p.charAt(0) == "s") {
            _$jscoverage['access/display/js/jquery.flot.js'][2218]++;
            pos += "bottom:" + (m[1] + plotOffset.bottom) + "px;";
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2219]++;
        if (p.charAt(1) == "e") {
          _$jscoverage['access/display/js/jquery.flot.js'][2220]++;
          pos += "right:" + (m[0] + plotOffset.right) + "px;";
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2221]++;
          if (p.charAt(1) == "w") {
            _$jscoverage['access/display/js/jquery.flot.js'][2222]++;
            pos += "left:" + (m[0] + plotOffset.left) + "px;";
          }
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2223]++;
        var legend = $("<div class=\"legend\">" + table.replace("style=\"", "style=\"position:absolute;" + pos + ";") + "</div>").appendTo(placeholder);
        _$jscoverage['access/display/js/jquery.flot.js'][2224]++;
        if (options.legend.backgroundOpacity != 0) {
          _$jscoverage['access/display/js/jquery.flot.js'][2228]++;
          var c = options.legend.backgroundColor;
          _$jscoverage['access/display/js/jquery.flot.js'][2229]++;
          if (c == null) {
            _$jscoverage['access/display/js/jquery.flot.js'][2230]++;
            c = options.grid.backgroundColor;
            _$jscoverage['access/display/js/jquery.flot.js'][2231]++;
            if (c && typeof c == "string") {
              _$jscoverage['access/display/js/jquery.flot.js'][2232]++;
              c = $.color.parse(c);
            }
            else {
              _$jscoverage['access/display/js/jquery.flot.js'][2234]++;
              c = $.color.extract(legend, "background-color");
            }
            _$jscoverage['access/display/js/jquery.flot.js'][2235]++;
            c.a = 1;
            _$jscoverage['access/display/js/jquery.flot.js'][2236]++;
            c = c.toString();
          }
          _$jscoverage['access/display/js/jquery.flot.js'][2238]++;
          var div = legend.children();
          _$jscoverage['access/display/js/jquery.flot.js'][2239]++;
          $("<div style=\"position:absolute;width:" + div.width() + "px;height:" + div.height() + "px;" + pos + "background-color:" + c + ";\"> </div>").prependTo(legend).css("opacity", options.legend.backgroundOpacity);
        }
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2247]++;
    var highlights = [], redrawTimeout = null;
    _$jscoverage['access/display/js/jquery.flot.js'][2251]++;
    function findNearbyItem(mouseX, mouseY, seriesFilter) {
      _$jscoverage['access/display/js/jquery.flot.js'][2252]++;
      var maxDistance = options.grid.mouseActiveRadius, smallestDistance = maxDistance * maxDistance + 1, item = null, foundPoint = false, i, j;
      _$jscoverage['access/display/js/jquery.flot.js'][2256]++;
      for (i = series.length - 1; i >= 0; --i) {
        _$jscoverage['access/display/js/jquery.flot.js'][2257]++;
        if (! seriesFilter(series[i])) {
          _$jscoverage['access/display/js/jquery.flot.js'][2258]++;
          continue;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2260]++;
        var s = series[i], axisx = s.xaxis, axisy = s.yaxis, points = s.datapoints.points, ps = s.datapoints.pointsize, mx = axisx.c2p(mouseX), my = axisy.c2p(mouseY), maxx = maxDistance / axisx.scale, maxy = maxDistance / axisy.scale;
        _$jscoverage['access/display/js/jquery.flot.js'][2272]++;
        if (axisx.options.inverseTransform) {
          _$jscoverage['access/display/js/jquery.flot.js'][2273]++;
          maxx = Number.MAX_VALUE;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2274]++;
        if (axisy.options.inverseTransform) {
          _$jscoverage['access/display/js/jquery.flot.js'][2275]++;
          maxy = Number.MAX_VALUE;
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2277]++;
        if (s.lines.show || s.points.show) {
          _$jscoverage['access/display/js/jquery.flot.js'][2278]++;
          for (j = 0; j < points.length; j += ps) {
            _$jscoverage['access/display/js/jquery.flot.js'][2279]++;
            var x = points[j], y = points[j + 1];
            _$jscoverage['access/display/js/jquery.flot.js'][2280]++;
            if (x == null) {
              _$jscoverage['access/display/js/jquery.flot.js'][2281]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][2285]++;
            if (x - mx > maxx || x - mx < - maxx || y - my > maxy || y - my < - maxy) {
              _$jscoverage['access/display/js/jquery.flot.js'][2287]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][2291]++;
            var dx = Math.abs(axisx.p2c(x) - mouseX), dy = Math.abs(axisy.p2c(y) - mouseY), dist = dx * dx + dy * dy;
            _$jscoverage['access/display/js/jquery.flot.js'][2297]++;
            if (dist < smallestDistance) {
              _$jscoverage['access/display/js/jquery.flot.js'][2298]++;
              smallestDistance = dist;
              _$jscoverage['access/display/js/jquery.flot.js'][2299]++;
              item = [i, j / ps];
            }
}
        }
        _$jscoverage['access/display/js/jquery.flot.js'][2304]++;
        if (s.bars.show && ! item) {
          _$jscoverage['access/display/js/jquery.flot.js'][2305]++;
          var barLeft = s.bars.align == "left"? 0: - s.bars.barWidth / 2, barRight = barLeft + s.bars.barWidth;
          _$jscoverage['access/display/js/jquery.flot.js'][2308]++;
          for (j = 0; j < points.length; j += ps) {
            _$jscoverage['access/display/js/jquery.flot.js'][2309]++;
            var x = points[j], y = points[j + 1], b = points[j + 2];
            _$jscoverage['access/display/js/jquery.flot.js'][2310]++;
            if (x == null) {
              _$jscoverage['access/display/js/jquery.flot.js'][2311]++;
              continue;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][2314]++;
            if (series[i].bars.horizontal? (mx <= Math.max(b, x) && mx >= Math.min(b, x) && my >= y + barLeft && my <= y + barRight): (mx >= x + barLeft && mx <= x + barRight && my >= Math.min(b, y) && my <= Math.max(b, y))) {
              _$jscoverage['access/display/js/jquery.flot.js'][2319]++;
              item = [i, j / ps];
            }
}
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][2324]++;
      if (item) {
        _$jscoverage['access/display/js/jquery.flot.js'][2325]++;
        i = item[0];
        _$jscoverage['access/display/js/jquery.flot.js'][2326]++;
        j = item[1];
        _$jscoverage['access/display/js/jquery.flot.js'][2327]++;
        ps = series[i].datapoints.pointsize;
        _$jscoverage['access/display/js/jquery.flot.js'][2329]++;
        return ({datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps), dataIndex: j, series: series[i], seriesIndex: i});
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2335]++;
      return null;
}
    _$jscoverage['access/display/js/jquery.flot.js'][2338]++;
    function onMouseMove(e) {
      _$jscoverage['access/display/js/jquery.flot.js'][2339]++;
      if (options.grid.hoverable) {
        _$jscoverage['access/display/js/jquery.flot.js'][2340]++;
        triggerClickHoverEvent("plothover", e, (function (s) {
  _$jscoverage['access/display/js/jquery.flot.js'][2341]++;
  return s.hoverable != false;
}));
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2344]++;
    function onMouseLeave(e) {
      _$jscoverage['access/display/js/jquery.flot.js'][2345]++;
      if (options.grid.hoverable) {
        _$jscoverage['access/display/js/jquery.flot.js'][2346]++;
        triggerClickHoverEvent("plothover", e, (function (s) {
  _$jscoverage['access/display/js/jquery.flot.js'][2347]++;
  return false;
}));
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2350]++;
    function onClick(e) {
      _$jscoverage['access/display/js/jquery.flot.js'][2351]++;
      triggerClickHoverEvent("plotclick", e, (function (s) {
  _$jscoverage['access/display/js/jquery.flot.js'][2352]++;
  return s.clickable != false;
}));
}
    _$jscoverage['access/display/js/jquery.flot.js'][2357]++;
    function triggerClickHoverEvent(eventname, event, seriesFilter) {
      _$jscoverage['access/display/js/jquery.flot.js'][2358]++;
      var offset = eventHolder.offset(), canvasX = event.pageX - offset.left - plotOffset.left, canvasY = event.pageY - offset.top - plotOffset.top, pos = canvasToAxisCoords({left: canvasX, top: canvasY});
      _$jscoverage['access/display/js/jquery.flot.js'][2363]++;
      pos.pageX = event.pageX;
      _$jscoverage['access/display/js/jquery.flot.js'][2364]++;
      pos.pageY = event.pageY;
      _$jscoverage['access/display/js/jquery.flot.js'][2366]++;
      var item = findNearbyItem(canvasX, canvasY, seriesFilter);
      _$jscoverage['access/display/js/jquery.flot.js'][2368]++;
      if (item) {
        _$jscoverage['access/display/js/jquery.flot.js'][2370]++;
        item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left);
        _$jscoverage['access/display/js/jquery.flot.js'][2371]++;
        item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2374]++;
      if (options.grid.autoHighlight) {
        _$jscoverage['access/display/js/jquery.flot.js'][2376]++;
        for (var i = 0; i < highlights.length; ++i) {
          _$jscoverage['access/display/js/jquery.flot.js'][2377]++;
          var h = highlights[i];
          _$jscoverage['access/display/js/jquery.flot.js'][2378]++;
          if (h.auto == eventname && ! (item && h.series == item.series && h.point[0] == item.datapoint[0] && h.point[1] == item.datapoint[1])) {
            _$jscoverage['access/display/js/jquery.flot.js'][2382]++;
            unhighlight(h.series, h.point);
          }
}
        _$jscoverage['access/display/js/jquery.flot.js'][2385]++;
        if (item) {
          _$jscoverage['access/display/js/jquery.flot.js'][2386]++;
          highlight(item.series, item.datapoint, eventname);
        }
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2389]++;
      placeholder.trigger(eventname, [pos, item]);
}
    _$jscoverage['access/display/js/jquery.flot.js'][2392]++;
    function triggerRedrawOverlay() {
      _$jscoverage['access/display/js/jquery.flot.js'][2393]++;
      if (! redrawTimeout) {
        _$jscoverage['access/display/js/jquery.flot.js'][2394]++;
        redrawTimeout = setTimeout(drawOverlay, 30);
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2397]++;
    function drawOverlay() {
      _$jscoverage['access/display/js/jquery.flot.js'][2398]++;
      redrawTimeout = null;
      _$jscoverage['access/display/js/jquery.flot.js'][2401]++;
      octx.save();
      _$jscoverage['access/display/js/jquery.flot.js'][2402]++;
      octx.clearRect(0, 0, canvasWidth, canvasHeight);
      _$jscoverage['access/display/js/jquery.flot.js'][2403]++;
      octx.translate(plotOffset.left, plotOffset.top);
      _$jscoverage['access/display/js/jquery.flot.js'][2405]++;
      var i, hi;
      _$jscoverage['access/display/js/jquery.flot.js'][2406]++;
      for (i = 0; i < highlights.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][2407]++;
        hi = highlights[i];
        _$jscoverage['access/display/js/jquery.flot.js'][2409]++;
        if (hi.series.bars.show) {
          _$jscoverage['access/display/js/jquery.flot.js'][2410]++;
          drawBarHighlight(hi.series, hi.point);
        }
        else {
          _$jscoverage['access/display/js/jquery.flot.js'][2412]++;
          drawPointHighlight(hi.series, hi.point);
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][2414]++;
      octx.restore();
      _$jscoverage['access/display/js/jquery.flot.js'][2416]++;
      executeHooks(hooks.drawOverlay, [octx]);
}
    _$jscoverage['access/display/js/jquery.flot.js'][2419]++;
    function highlight(s, point, auto) {
      _$jscoverage['access/display/js/jquery.flot.js'][2420]++;
      if (typeof s == "number") {
        _$jscoverage['access/display/js/jquery.flot.js'][2421]++;
        s = series[s];
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2423]++;
      if (typeof point == "number") {
        _$jscoverage['access/display/js/jquery.flot.js'][2424]++;
        var ps = s.datapoints.pointsize;
        _$jscoverage['access/display/js/jquery.flot.js'][2425]++;
        point = s.datapoints.points.slice(ps * point, ps * (point + 1));
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2428]++;
      var i = indexOfHighlight(s, point);
      _$jscoverage['access/display/js/jquery.flot.js'][2429]++;
      if (i == -1) {
        _$jscoverage['access/display/js/jquery.flot.js'][2430]++;
        highlights.push({series: s, point: point, auto: auto});
        _$jscoverage['access/display/js/jquery.flot.js'][2432]++;
        triggerRedrawOverlay();
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][2434]++;
        if (! auto) {
          _$jscoverage['access/display/js/jquery.flot.js'][2435]++;
          highlights[i].auto = false;
        }
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2438]++;
    function unhighlight(s, point) {
      _$jscoverage['access/display/js/jquery.flot.js'][2439]++;
      if (s == null && point == null) {
        _$jscoverage['access/display/js/jquery.flot.js'][2440]++;
        highlights = [];
        _$jscoverage['access/display/js/jquery.flot.js'][2441]++;
        triggerRedrawOverlay();
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2444]++;
      if (typeof s == "number") {
        _$jscoverage['access/display/js/jquery.flot.js'][2445]++;
        s = series[s];
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2447]++;
      if (typeof point == "number") {
        _$jscoverage['access/display/js/jquery.flot.js'][2448]++;
        point = s.data[point];
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2450]++;
      var i = indexOfHighlight(s, point);
      _$jscoverage['access/display/js/jquery.flot.js'][2451]++;
      if (i != -1) {
        _$jscoverage['access/display/js/jquery.flot.js'][2452]++;
        highlights.splice(i, 1);
        _$jscoverage['access/display/js/jquery.flot.js'][2454]++;
        triggerRedrawOverlay();
      }
}
    _$jscoverage['access/display/js/jquery.flot.js'][2458]++;
    function indexOfHighlight(s, p) {
      _$jscoverage['access/display/js/jquery.flot.js'][2459]++;
      for (var i = 0; i < highlights.length; ++i) {
        _$jscoverage['access/display/js/jquery.flot.js'][2460]++;
        var h = highlights[i];
        _$jscoverage['access/display/js/jquery.flot.js'][2461]++;
        if (h.series == s && h.point[0] == p[0] && h.point[1] == p[1]) {
          _$jscoverage['access/display/js/jquery.flot.js'][2463]++;
          return i;
        }
}
      _$jscoverage['access/display/js/jquery.flot.js'][2465]++;
      return -1;
}
    _$jscoverage['access/display/js/jquery.flot.js'][2468]++;
    function drawPointHighlight(series, point) {
      _$jscoverage['access/display/js/jquery.flot.js'][2469]++;
      var x = point[0], y = point[1], axisx = series.xaxis, axisy = series.yaxis;
      _$jscoverage['access/display/js/jquery.flot.js'][2472]++;
      if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max) {
        _$jscoverage['access/display/js/jquery.flot.js'][2473]++;
        return;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2475]++;
      var pointRadius = series.points.radius + series.points.lineWidth / 2;
      _$jscoverage['access/display/js/jquery.flot.js'][2476]++;
      octx.lineWidth = pointRadius;
      _$jscoverage['access/display/js/jquery.flot.js'][2477]++;
      octx.strokeStyle = $.color.parse(series.color).scale("a", 0.5).toString();
      _$jscoverage['access/display/js/jquery.flot.js'][2478]++;
      var radius = 1.5 * pointRadius, x = axisx.p2c(x), y = axisy.p2c(y);
      _$jscoverage['access/display/js/jquery.flot.js'][2482]++;
      octx.beginPath();
      _$jscoverage['access/display/js/jquery.flot.js'][2483]++;
      if (series.points.symbol == "circle") {
        _$jscoverage['access/display/js/jquery.flot.js'][2484]++;
        octx.arc(x, y, radius, 0, 2 * Math.PI, false);
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][2486]++;
        series.points.symbol(octx, x, y, radius, false);
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2487]++;
      octx.closePath();
      _$jscoverage['access/display/js/jquery.flot.js'][2488]++;
      octx.stroke();
}
    _$jscoverage['access/display/js/jquery.flot.js'][2491]++;
    function drawBarHighlight(series, point) {
      _$jscoverage['access/display/js/jquery.flot.js'][2492]++;
      octx.lineWidth = series.bars.lineWidth;
      _$jscoverage['access/display/js/jquery.flot.js'][2493]++;
      octx.strokeStyle = $.color.parse(series.color).scale("a", 0.5).toString();
      _$jscoverage['access/display/js/jquery.flot.js'][2494]++;
      var fillStyle = $.color.parse(series.color).scale("a", 0.5).toString();
      _$jscoverage['access/display/js/jquery.flot.js'][2495]++;
      var barLeft = series.bars.align == "left"? 0: - series.bars.barWidth / 2;
      _$jscoverage['access/display/js/jquery.flot.js'][2496]++;
      drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth, 0, (function () {
  _$jscoverage['access/display/js/jquery.flot.js'][2497]++;
  return fillStyle;
}), series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);
}
    _$jscoverage['access/display/js/jquery.flot.js'][2500]++;
    function getColorOrGradient(spec, bottom, top, defaultColor) {
      _$jscoverage['access/display/js/jquery.flot.js'][2501]++;
      if (typeof spec == "string") {
        _$jscoverage['access/display/js/jquery.flot.js'][2502]++;
        return spec;
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][2507]++;
        var gradient = ctx.createLinearGradient(0, top, 0, bottom);
        _$jscoverage['access/display/js/jquery.flot.js'][2509]++;
        for (var i = 0, l = spec.colors.length; i < l; ++i) {
          _$jscoverage['access/display/js/jquery.flot.js'][2510]++;
          var c = spec.colors[i];
          _$jscoverage['access/display/js/jquery.flot.js'][2511]++;
          if (typeof c != "string") {
            _$jscoverage['access/display/js/jquery.flot.js'][2512]++;
            var co = $.color.parse(defaultColor);
            _$jscoverage['access/display/js/jquery.flot.js'][2513]++;
            if (c.brightness != null) {
              _$jscoverage['access/display/js/jquery.flot.js'][2514]++;
              co = co.scale("rgb", c.brightness);
            }
            _$jscoverage['access/display/js/jquery.flot.js'][2515]++;
            if (c.opacity != null) {
              _$jscoverage['access/display/js/jquery.flot.js'][2516]++;
              co.a *= c.opacity;
            }
            _$jscoverage['access/display/js/jquery.flot.js'][2517]++;
            c = co.toString();
          }
          _$jscoverage['access/display/js/jquery.flot.js'][2519]++;
          gradient.addColorStop(i / (l - 1), c);
}
        _$jscoverage['access/display/js/jquery.flot.js'][2522]++;
        return gradient;
      }
}
}
  _$jscoverage['access/display/js/jquery.flot.js'][2527]++;
  $.plot = (function (placeholder, data, options) {
  _$jscoverage['access/display/js/jquery.flot.js'][2529]++;
  var plot = new Plot($(placeholder), data, options, $.plot.plugins);
  _$jscoverage['access/display/js/jquery.flot.js'][2531]++;
  return plot;
});
  _$jscoverage['access/display/js/jquery.flot.js'][2534]++;
  $.plot.version = "0.7";
  _$jscoverage['access/display/js/jquery.flot.js'][2536]++;
  $.plot.plugins = [];
  _$jscoverage['access/display/js/jquery.flot.js'][2539]++;
  $.plot.formatDate = (function (d, fmt, monthNames) {
  _$jscoverage['access/display/js/jquery.flot.js'][2540]++;
  var leftPad = (function (n) {
  _$jscoverage['access/display/js/jquery.flot.js'][2541]++;
  n = "" + n;
  _$jscoverage['access/display/js/jquery.flot.js'][2542]++;
  return n.length == 1? "0" + n: n;
});
  _$jscoverage['access/display/js/jquery.flot.js'][2545]++;
  var r = [];
  _$jscoverage['access/display/js/jquery.flot.js'][2546]++;
  var escape = false, padNext = false;
  _$jscoverage['access/display/js/jquery.flot.js'][2547]++;
  var hours = d.getUTCHours();
  _$jscoverage['access/display/js/jquery.flot.js'][2548]++;
  var isAM = hours < 12;
  _$jscoverage['access/display/js/jquery.flot.js'][2549]++;
  if (monthNames == null) {
    _$jscoverage['access/display/js/jquery.flot.js'][2550]++;
    monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  }
  _$jscoverage['access/display/js/jquery.flot.js'][2552]++;
  if (fmt.search(/%p|%P/) != -1) {
    _$jscoverage['access/display/js/jquery.flot.js'][2553]++;
    if (hours > 12) {
      _$jscoverage['access/display/js/jquery.flot.js'][2554]++;
      hours = hours - 12;
    }
    else {
      _$jscoverage['access/display/js/jquery.flot.js'][2555]++;
      if (hours == 0) {
        _$jscoverage['access/display/js/jquery.flot.js'][2556]++;
        hours = 12;
      }
    }
  }
  _$jscoverage['access/display/js/jquery.flot.js'][2559]++;
  for (var i = 0; i < fmt.length; ++i) {
    _$jscoverage['access/display/js/jquery.flot.js'][2560]++;
    var c = fmt.charAt(i);
    _$jscoverage['access/display/js/jquery.flot.js'][2562]++;
    if (escape) {
      _$jscoverage['access/display/js/jquery.flot.js'][2563]++;
      switch (c) {
      case "h":
        _$jscoverage['access/display/js/jquery.flot.js'][2564]++;
        c = "" + hours;
        _$jscoverage['access/display/js/jquery.flot.js'][2564]++;
        break;
      case "H":
        _$jscoverage['access/display/js/jquery.flot.js'][2565]++;
        c = leftPad(hours);
        _$jscoverage['access/display/js/jquery.flot.js'][2565]++;
        break;
      case "M":
        _$jscoverage['access/display/js/jquery.flot.js'][2566]++;
        c = leftPad(d.getUTCMinutes());
        _$jscoverage['access/display/js/jquery.flot.js'][2566]++;
        break;
      case "S":
        _$jscoverage['access/display/js/jquery.flot.js'][2567]++;
        c = leftPad(d.getUTCSeconds());
        _$jscoverage['access/display/js/jquery.flot.js'][2567]++;
        break;
      case "d":
        _$jscoverage['access/display/js/jquery.flot.js'][2568]++;
        c = "" + d.getUTCDate();
        _$jscoverage['access/display/js/jquery.flot.js'][2568]++;
        break;
      case "m":
        _$jscoverage['access/display/js/jquery.flot.js'][2569]++;
        c = "" + (d.getUTCMonth() + 1);
        _$jscoverage['access/display/js/jquery.flot.js'][2569]++;
        break;
      case "y":
        _$jscoverage['access/display/js/jquery.flot.js'][2570]++;
        c = "" + d.getUTCFullYear();
        _$jscoverage['access/display/js/jquery.flot.js'][2570]++;
        break;
      case "b":
        _$jscoverage['access/display/js/jquery.flot.js'][2571]++;
        c = "" + monthNames[d.getUTCMonth()];
        _$jscoverage['access/display/js/jquery.flot.js'][2571]++;
        break;
      case "p":
        _$jscoverage['access/display/js/jquery.flot.js'][2572]++;
        c = isAM? ("am"): ("pm");
        _$jscoverage['access/display/js/jquery.flot.js'][2572]++;
        break;
      case "P":
        _$jscoverage['access/display/js/jquery.flot.js'][2573]++;
        c = isAM? ("AM"): ("PM");
        _$jscoverage['access/display/js/jquery.flot.js'][2573]++;
        break;
      case "0":
        _$jscoverage['access/display/js/jquery.flot.js'][2574]++;
        c = "";
        _$jscoverage['access/display/js/jquery.flot.js'][2574]++;
        padNext = true;
        _$jscoverage['access/display/js/jquery.flot.js'][2574]++;
        break;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2576]++;
      if (c && padNext) {
        _$jscoverage['access/display/js/jquery.flot.js'][2577]++;
        c = leftPad(c);
        _$jscoverage['access/display/js/jquery.flot.js'][2578]++;
        padNext = false;
      }
      _$jscoverage['access/display/js/jquery.flot.js'][2580]++;
      r.push(c);
      _$jscoverage['access/display/js/jquery.flot.js'][2581]++;
      if (! padNext) {
        _$jscoverage['access/display/js/jquery.flot.js'][2582]++;
        escape = false;
      }
    }
    else {
      _$jscoverage['access/display/js/jquery.flot.js'][2585]++;
      if (c == "%") {
        _$jscoverage['access/display/js/jquery.flot.js'][2586]++;
        escape = true;
      }
      else {
        _$jscoverage['access/display/js/jquery.flot.js'][2588]++;
        r.push(c);
      }
    }
}
  _$jscoverage['access/display/js/jquery.flot.js'][2591]++;
  return r.join("");
});
  _$jscoverage['access/display/js/jquery.flot.js'][2595]++;
  function floorInBase(n, base) {
    _$jscoverage['access/display/js/jquery.flot.js'][2596]++;
    return base * Math.floor(n / base);
}
})(jQuery);
_$jscoverage['access/display/js/jquery.flot.js'].source = ["/*! Javascript plotting library for jQuery, v. 0.7."," *"," * Released under the MIT license by IOLA, December 2007."," *"," */","","// first an inline dependency, jquery.colorhelpers.js, we inline it here","// for convenience","","/* Plugin for jQuery for working with colors."," * "," * Version 1.1."," * "," * Inspiration from jQuery color animation plugin by John Resig."," *"," * Released under the MIT license by Ole Laursen, October 2009."," *"," * Examples:"," *"," *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()"," *   var c = $.color.extract($(\"#mydiv\"), 'background-color');"," *   console.log(c.r, c.g, c.b, c.a);"," *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\""," *"," * Note that .scale() and .add() return the same modified object"," * instead of making a new one."," *"," * V. 1.1: Fix error handling so e.g. parsing an empty string does"," * produce a color rather than just crashing."," */ ","(function(B){B.color={};B.color.make=function(F,E,C,D){var G={};G.r=F||0;G.g=E||0;G.b=C||0;G.a=D!=null?D:1;G.add=function(J,I){for(var H=0;H&lt;J.length;++H){G[J.charAt(H)]+=I}return G.normalize()};G.scale=function(J,I){for(var H=0;H&lt;J.length;++H){G[J.charAt(H)]*=I}return G.normalize()};G.toString=function(){if(G.a&gt;=1){return\"rgb(\"+[G.r,G.g,G.b].join(\",\")+\")\"}else{return\"rgba(\"+[G.r,G.g,G.b,G.a].join(\",\")+\")\"}};G.normalize=function(){function H(J,K,I){return K&lt;J?J:(K&gt;I?I:K)}G.r=H(0,parseInt(G.r),255);G.g=H(0,parseInt(G.g),255);G.b=H(0,parseInt(G.b),255);G.a=H(0,G.a,1);return G};G.clone=function(){return B.color.make(G.r,G.b,G.g,G.a)};return G.normalize()};B.color.extract=function(D,C){var E;do{E=D.css(C).toLowerCase();if(E!=\"\"&amp;&amp;E!=\"transparent\"){break}D=D.parent()}while(!B.nodeName(D.get(0),\"body\"));if(E==\"rgba(0, 0, 0, 0)\"){E=\"transparent\"}return B.color.parse(E)};B.color.parse=function(F){var E,C=B.color.make;if(E=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10))}if(E=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(F)){return C(parseInt(E[1],10),parseInt(E[2],10),parseInt(E[3],10),parseFloat(E[4]))}if(E=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55)}if(E=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(F)){return C(parseFloat(E[1])*2.55,parseFloat(E[2])*2.55,parseFloat(E[3])*2.55,parseFloat(E[4]))}if(E=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(F)){return C(parseInt(E[1],16),parseInt(E[2],16),parseInt(E[3],16))}if(E=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(F)){return C(parseInt(E[1]+E[1],16),parseInt(E[2]+E[2],16),parseInt(E[3]+E[3],16))}var D=B.trim(F).toLowerCase();if(D==\"transparent\"){return C(255,255,255,0)}else{E=A[D]||[0,0,0];return C(E[0],E[1],E[2])}};var A={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);","","// the actual Flot code","(function($) {","    function Plot(placeholder, data_, options_, plugins) {","        // data is on the form:","        //   [ series1, series2 ... ]","        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]","        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }","        ","        var series = [],","            options = {","                // the color theme used for graphs","                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],","                legend: {","                    show: true,","                    noColumns: 1, // number of colums in legend table","                    labelFormatter: null, // fn: string -&gt; string","                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes","                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph","                    position: \"ne\", // position of default legend container within plot","                    margin: 5, // distance from grid edge to default legend container within plot","                    backgroundColor: null, // null means auto-detect","                    backgroundOpacity: 0.85 // set to 0 to avoid background","                },","                xaxis: {","                    show: null, // null = auto-detect, true = always, false = never","                    position: \"bottom\", // or \"top\"","                    mode: null, // null or \"time\"","                    color: null, // base color, labels, ticks","                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"","                    transform: null, // null or f: number -&gt; number to transform axis","                    inverseTransform: null, // if transform is set, this should be the inverse function","                    min: null, // min. value to show, null means set automatically","                    max: null, // max. value to show, null means set automatically","                    autoscaleMargin: null, // margin in % to add if auto-setting min/max","                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -&gt; ticks) or app. number of ticks for auto-ticks","                    tickFormatter: null, // fn: number -&gt; string","                    labelWidth: null, // size of tick labels in pixels","                    labelHeight: null,","                    reserveSpace: null, // whether to reserve space even if axis isn't shown","                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line","                    alignTicksWithAxis: null, // axis number or null for no sync","                    ","                    // mode specific options","                    tickDecimals: null, // no. of decimals, null means auto","                    tickSize: null, // number or [number, \"unit\"]","                    minTickSize: null, // number or [number, \"unit\"]","                    monthNames: null, // list of names of months","                    timeformat: null, // format string to use","                    twelveHourClock: false // 12 or 24 time in time mode","                },","                yaxis: {","                    autoscaleMargin: 0.02,","                    position: \"left\" // or \"right\"","                },","                xaxes: [],","                yaxes: [],","                series: {","                    points: {","                        show: false,","                        radius: 3,","                        lineWidth: 2, // in pixels","                        fill: true,","                        fillColor: \"#ffffff\",","                        symbol: \"circle\" // or callback","                    },","                    lines: {","                        // we don't put in show: false so we can see","                        // whether lines were actively disabled ","                        lineWidth: 2, // in pixels","                        fill: false,","                        fillColor: null,","                        steps: false","                    },","                    bars: {","                        show: false,","                        lineWidth: 2, // in pixels","                        barWidth: 1, // in units of the x axis","                        fill: true,","                        fillColor: null,","                        align: \"left\", // or \"center\" ","                        horizontal: false","                    },","                    shadowSize: 3","                },","                grid: {","                    show: true,","                    aboveData: false,","                    color: \"#545454\", // primary color used for outline and labels","                    backgroundColor: null, // null for transparent, else color","                    borderColor: null, // set if different from the grid color","                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"","                    labelMargin: 5, // in pixels","                    axisMargin: 8, // in pixels","                    borderWidth: 2, // in pixels","                    minBorderMargin: null, // in pixels, null means taken from points radius","                    markings: null, // array of ranges or fn: axes -&gt; array of ranges","                    markingsColor: \"#f4f4f4\",","                    markingsLineWidth: 2,","                    // interactive stuff","                    clickable: false,","                    hoverable: false,","                    autoHighlight: true, // highlight in case mouse is near","                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item","                },","                hooks: {}","            },","        canvas = null,      // the canvas for the plot itself","        overlay = null,     // canvas for interactive stuff on top of plot","        eventHolder = null, // jQuery object that events should be bound to","        ctx = null, octx = null,","        xaxes = [], yaxes = [],","        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},","        canvasWidth = 0, canvasHeight = 0,","        plotWidth = 0, plotHeight = 0,","        hooks = {","            processOptions: [],","            processRawData: [],","            processDatapoints: [],","            drawSeries: [],","            draw: [],","            bindEvents: [],","            drawOverlay: [],","            shutdown: []","        },","        plot = this;","","        // public functions","        plot.setData = setData;","        plot.setupGrid = setupGrid;","        plot.draw = draw;","        plot.getPlaceholder = function() { return placeholder; };","        plot.getCanvas = function() { return canvas; };","        plot.getPlotOffset = function() { return plotOffset; };","        plot.width = function () { return plotWidth; };","        plot.height = function () { return plotHeight; };","        plot.offset = function () {","            var o = eventHolder.offset();","            o.left += plotOffset.left;","            o.top += plotOffset.top;","            return o;","        };","        plot.getData = function () { return series; };","        plot.getAxes = function () {","            var res = {}, i;","            $.each(xaxes.concat(yaxes), function (_, axis) {","                if (axis)","                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;","            });","            return res;","        };","        plot.getXAxes = function () { return xaxes; };","        plot.getYAxes = function () { return yaxes; };","        plot.c2p = canvasToAxisCoords;","        plot.p2c = axisToCanvasCoords;","        plot.getOptions = function () { return options; };","        plot.highlight = highlight;","        plot.unhighlight = unhighlight;","        plot.triggerRedrawOverlay = triggerRedrawOverlay;","        plot.pointOffset = function(point) {","            return {","                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left),","                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top)","            };","        };","        plot.shutdown = shutdown;","        plot.resize = function () {","            getCanvasDimensions();","            resizeCanvas(canvas);","            resizeCanvas(overlay);","        };","","        // public attributes","        plot.hooks = hooks;","        ","        // initialize","        initPlugins(plot);","        parseOptions(options_);","        setupCanvases();","        setData(data_);","        setupGrid();","        draw();","        bindEvents();","","","        function executeHooks(hook, args) {","            args = [plot].concat(args);","            for (var i = 0; i &lt; hook.length; ++i)","                hook[i].apply(this, args);","        }","","        function initPlugins() {","            for (var i = 0; i &lt; plugins.length; ++i) {","                var p = plugins[i];","                p.init(plot);","                if (p.options)","                    $.extend(true, options, p.options);","            }","        }","        ","        function parseOptions(opts) {","            var i;","            ","            $.extend(true, options, opts);","            ","            if (options.xaxis.color == null)","                options.xaxis.color = options.grid.color;","            if (options.yaxis.color == null)","                options.yaxis.color = options.grid.color;","            ","            if (options.xaxis.tickColor == null) // backwards-compatibility","                options.xaxis.tickColor = options.grid.tickColor;","            if (options.yaxis.tickColor == null) // backwards-compatibility","                options.yaxis.tickColor = options.grid.tickColor;","","            if (options.grid.borderColor == null)","                options.grid.borderColor = options.grid.color;","            if (options.grid.tickColor == null)","                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();","            ","            // fill in defaults in axes, copy at least always the","            // first as the rest of the code assumes it'll be there","            for (i = 0; i &lt; Math.max(1, options.xaxes.length); ++i)","                options.xaxes[i] = $.extend(true, {}, options.xaxis, options.xaxes[i]);","            for (i = 0; i &lt; Math.max(1, options.yaxes.length); ++i)","                options.yaxes[i] = $.extend(true, {}, options.yaxis, options.yaxes[i]);","","            // backwards compatibility, to be removed in future","            if (options.xaxis.noTicks &amp;&amp; options.xaxis.ticks == null)","                options.xaxis.ticks = options.xaxis.noTicks;","            if (options.yaxis.noTicks &amp;&amp; options.yaxis.ticks == null)","                options.yaxis.ticks = options.yaxis.noTicks;","            if (options.x2axis) {","                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);","                options.xaxes[1].position = \"top\";","            }","            if (options.y2axis) {","                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);","                options.yaxes[1].position = \"right\";","            }","            if (options.grid.coloredAreas)","                options.grid.markings = options.grid.coloredAreas;","            if (options.grid.coloredAreasColor)","                options.grid.markingsColor = options.grid.coloredAreasColor;","            if (options.lines)","                $.extend(true, options.series.lines, options.lines);","            if (options.points)","                $.extend(true, options.series.points, options.points);","            if (options.bars)","                $.extend(true, options.series.bars, options.bars);","            if (options.shadowSize != null)","                options.series.shadowSize = options.shadowSize;","","            // save options on axes for future reference","            for (i = 0; i &lt; options.xaxes.length; ++i)","                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];","            for (i = 0; i &lt; options.yaxes.length; ++i)","                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];","","            // add hooks from options","            for (var n in hooks)","                if (options.hooks[n] &amp;&amp; options.hooks[n].length)","                    hooks[n] = hooks[n].concat(options.hooks[n]);","","            executeHooks(hooks.processOptions, [options]);","        }","","        function setData(d) {","            series = parseData(d);","            fillInSeriesOptions();","            processData();","        }","        ","        function parseData(d) {","            var res = [];","            for (var i = 0; i &lt; d.length; ++i) {","                var s = $.extend(true, {}, options.series);","","                if (d[i].data != null) {","                    s.data = d[i].data; // move the data instead of deep-copy","                    delete d[i].data;","","                    $.extend(true, s, d[i]);","","                    d[i].data = s.data;","                }","                else","                    s.data = d[i];","                res.push(s);","            }","","            return res;","        }","        ","        function axisNumber(obj, coord) {","            var a = obj[coord + \"axis\"];","            if (typeof a == \"object\") // if we got a real axis, extract number","                a = a.n;","            if (typeof a != \"number\")","                a = 1; // default to first axis","            return a;","        }","","        function allAxes() {","            // return flat array without annoying null entries","            return $.grep(xaxes.concat(yaxes), function (a) { return a; });","        }","        ","        function canvasToAxisCoords(pos) {","            // return an object with x/y corresponding to all used axes ","            var res = {}, i, axis;","            for (i = 0; i &lt; xaxes.length; ++i) {","                axis = xaxes[i];","                if (axis &amp;&amp; axis.used)","                    res[\"x\" + axis.n] = axis.c2p(pos.left);","            }","","            for (i = 0; i &lt; yaxes.length; ++i) {","                axis = yaxes[i];","                if (axis &amp;&amp; axis.used)","                    res[\"y\" + axis.n] = axis.c2p(pos.top);","            }","            ","            if (res.x1 !== undefined)","                res.x = res.x1;","            if (res.y1 !== undefined)","                res.y = res.y1;","","            return res;","        }","        ","        function axisToCanvasCoords(pos) {","            // get canvas coords from the first pair of x/y found in pos","            var res = {}, i, axis, key;","","            for (i = 0; i &lt; xaxes.length; ++i) {","                axis = xaxes[i];","                if (axis &amp;&amp; axis.used) {","                    key = \"x\" + axis.n;","                    if (pos[key] == null &amp;&amp; axis.n == 1)","                        key = \"x\";","","                    if (pos[key] != null) {","                        res.left = axis.p2c(pos[key]);","                        break;","                    }","                }","            }","            ","            for (i = 0; i &lt; yaxes.length; ++i) {","                axis = yaxes[i];","                if (axis &amp;&amp; axis.used) {","                    key = \"y\" + axis.n;","                    if (pos[key] == null &amp;&amp; axis.n == 1)","                        key = \"y\";","","                    if (pos[key] != null) {","                        res.top = axis.p2c(pos[key]);","                        break;","                    }","                }","            }","            ","            return res;","        }","        ","        function getOrCreateAxis(axes, number) {","            if (!axes[number - 1])","                axes[number - 1] = {","                    n: number, // save the number for future reference","                    direction: axes == xaxes ? \"x\" : \"y\",","                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)","                };","                ","            return axes[number - 1];","        }","","        function fillInSeriesOptions() {","            var i;","            ","            // collect what we already got of colors","            var neededColors = series.length,","                usedColors = [],","                assignedColors = [];","            for (i = 0; i &lt; series.length; ++i) {","                var sc = series[i].color;","                if (sc != null) {","                    --neededColors;","                    if (typeof sc == \"number\")","                        assignedColors.push(sc);","                    else","                        usedColors.push($.color.parse(series[i].color));","                }","            }","            ","            // we might need to generate more colors if higher indices","            // are assigned","            for (i = 0; i &lt; assignedColors.length; ++i) {","                neededColors = Math.max(neededColors, assignedColors[i] + 1);","            }","","            // produce colors as needed","            var colors = [], variation = 0;","            i = 0;","            while (colors.length &lt; neededColors) {","                var c;","                if (options.colors.length == i) // check degenerate case","                    c = $.color.make(100, 100, 100);","                else","                    c = $.color.parse(options.colors[i]);","","                // vary color if needed","                var sign = variation % 2 == 1 ? -1 : 1;","                c.scale('rgb', 1 + sign * Math.ceil(variation / 2) * 0.2)","","                // FIXME: if we're getting to close to something else,","                // we should probably skip this one","                colors.push(c);","                ","                ++i;","                if (i &gt;= options.colors.length) {","                    i = 0;","                    ++variation;","                }","            }","","            // fill in the options","            var colori = 0, s;","            for (i = 0; i &lt; series.length; ++i) {","                s = series[i];","                ","                // assign colors","                if (s.color == null) {","                    s.color = colors[colori].toString();","                    ++colori;","                }","                else if (typeof s.color == \"number\")","                    s.color = colors[s.color].toString();","","                // turn on lines automatically in case nothing is set","                if (s.lines.show == null) {","                    var v, show = true;","                    for (v in s)","                        if (s[v] &amp;&amp; s[v].show) {","                            show = false;","                            break;","                        }","                    if (show)","                        s.lines.show = true;","                }","","                // setup axes","                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));","                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));","            }","        }","        ","        function processData() {","            var topSentry = Number.POSITIVE_INFINITY,","                bottomSentry = Number.NEGATIVE_INFINITY,","                fakeInfinity = Number.MAX_VALUE,","                i, j, k, m, length,","                s, points, ps, x, y, axis, val, f, p;","","            function updateAxis(axis, min, max) {","                if (min &lt; axis.datamin &amp;&amp; min != -fakeInfinity)","                    axis.datamin = min;","                if (max &gt; axis.datamax &amp;&amp; max != fakeInfinity)","                    axis.datamax = max;","            }","","            $.each(allAxes(), function (_, axis) {","                // init axis","                axis.datamin = topSentry;","                axis.datamax = bottomSentry;","                axis.used = false;","            });","            ","            for (i = 0; i &lt; series.length; ++i) {","                s = series[i];","                s.datapoints = { points: [] };","                ","                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);","            }","            ","            // first pass: clean and copy data","            for (i = 0; i &lt; series.length; ++i) {","                s = series[i];","","                var data = s.data, format = s.datapoints.format;","","                if (!format) {","                    format = [];","                    // find out how to copy","                    format.push({ x: true, number: true, required: true });","                    format.push({ y: true, number: true, required: true });","","                    if (s.bars.show || (s.lines.show &amp;&amp; s.lines.fill)) {","                        format.push({ y: true, number: true, required: false, defaultValue: 0 });","                        if (s.bars.horizontal) {","                            delete format[format.length - 1].y;","                            format[format.length - 1].x = true;","                        }","                    }","                    ","                    s.datapoints.format = format;","                }","","                if (s.datapoints.pointsize != null)","                    continue; // already filled in","","                s.datapoints.pointsize = format.length;","                ","                ps = s.datapoints.pointsize;","                points = s.datapoints.points;","","                insertSteps = s.lines.show &amp;&amp; s.lines.steps;","                s.xaxis.used = s.yaxis.used = true;","                ","                for (j = k = 0; j &lt; data.length; ++j, k += ps) {","                    p = data[j];","","                    var nullify = p == null;","                    if (!nullify) {","                        for (m = 0; m &lt; ps; ++m) {","                            val = p[m];","                            f = format[m];","","                            if (f) {","                                if (f.number &amp;&amp; val != null) {","                                    val = +val; // convert to number","                                    if (isNaN(val))","                                        val = null;","                                    else if (val == Infinity)","                                        val = fakeInfinity;","                                    else if (val == -Infinity)","                                        val = -fakeInfinity;","                                }","","                                if (val == null) {","                                    if (f.required)","                                        nullify = true;","                                    ","                                    if (f.defaultValue != null)","                                        val = f.defaultValue;","                                }","                            }","                            ","                            points[k + m] = val;","                        }","                    }","                    ","                    if (nullify) {","                        for (m = 0; m &lt; ps; ++m) {","                            val = points[k + m];","                            if (val != null) {","                                f = format[m];","                                // extract min/max info","                                if (f.x)","                                    updateAxis(s.xaxis, val, val);","                                if (f.y)","                                    updateAxis(s.yaxis, val, val);","                            }","                            points[k + m] = null;","                        }","                    }","                    else {","                        // a little bit of line specific stuff that","                        // perhaps shouldn't be here, but lacking","                        // better means...","                        if (insertSteps &amp;&amp; k &gt; 0","                            &amp;&amp; points[k - ps] != null","                            &amp;&amp; points[k - ps] != points[k]","                            &amp;&amp; points[k - ps + 1] != points[k + 1]) {","                            // copy the point to make room for a middle point","                            for (m = 0; m &lt; ps; ++m)","                                points[k + ps + m] = points[k + m];","","                            // middle point has same y","                            points[k + 1] = points[k - ps + 1];","","                            // we've added a point, better reflect that","                            k += ps;","                        }","                    }","                }","            }","","            // give the hooks a chance to run","            for (i = 0; i &lt; series.length; ++i) {","                s = series[i];","                ","                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);","            }","","            // second pass: find datamax/datamin for auto-scaling","            for (i = 0; i &lt; series.length; ++i) {","                s = series[i];","                points = s.datapoints.points,","                ps = s.datapoints.pointsize;","","                var xmin = topSentry, ymin = topSentry,","                    xmax = bottomSentry, ymax = bottomSentry;","                ","                for (j = 0; j &lt; points.length; j += ps) {","                    if (points[j] == null)","                        continue;","","                    for (m = 0; m &lt; ps; ++m) {","                        val = points[j + m];","                        f = format[m];","                        if (!f || val == fakeInfinity || val == -fakeInfinity)","                            continue;","                        ","                        if (f.x) {","                            if (val &lt; xmin)","                                xmin = val;","                            if (val &gt; xmax)","                                xmax = val;","                        }","                        if (f.y) {","                            if (val &lt; ymin)","                                ymin = val;","                            if (val &gt; ymax)","                                ymax = val;","                        }","                    }","                }","                ","                if (s.bars.show) {","                    // make sure we got room for the bar on the dancing floor","                    var delta = s.bars.align == \"left\" ? 0 : -s.bars.barWidth/2;","                    if (s.bars.horizontal) {","                        ymin += delta;","                        ymax += delta + s.bars.barWidth;","                    }","                    else {","                        xmin += delta;","                        xmax += delta + s.bars.barWidth;","                    }","                }","                ","                updateAxis(s.xaxis, xmin, xmax);","                updateAxis(s.yaxis, ymin, ymax);","            }","","            $.each(allAxes(), function (_, axis) {","                if (axis.datamin == topSentry)","                    axis.datamin = null;","                if (axis.datamax == bottomSentry)","                    axis.datamax = null;","            });","        }","","        function makeCanvas(skipPositioning, cls) {","            var c = document.createElement('canvas');","            c.className = cls;","            c.width = canvasWidth;","            c.height = canvasHeight;","                    ","            if (!skipPositioning)","                $(c).css({ position: 'absolute', left: 0, top: 0 });","                ","            $(c).appendTo(placeholder);","                ","            if (!c.getContext) // excanvas hack","                c = window.G_vmlCanvasManager.initElement(c);","","            // used for resetting in case we get replotted","            c.getContext(\"2d\").save();","            ","            return c;","        }","","        function getCanvasDimensions() {","            canvasWidth = placeholder.width();","            canvasHeight = placeholder.height();","            ","            if (canvasWidth &lt;= 0 || canvasHeight &lt;= 0)","                throw \"Invalid dimensions for plot, width = \" + canvasWidth + \", height = \" + canvasHeight;","        }","","        function resizeCanvas(c) {","            // resizing should reset the state (excanvas seems to be","            // buggy though)","            if (c.width != canvasWidth)","                c.width = canvasWidth;","","            if (c.height != canvasHeight)","                c.height = canvasHeight;","","            // so try to get back to the initial state (even if it's","            // gone now, this should be safe according to the spec)","            var cctx = c.getContext(\"2d\");","            cctx.restore();","","            // and save again","            cctx.save();","        }","        ","        function setupCanvases() {","            var reused,","                existingCanvas = placeholder.children(\"canvas.base\"),","                existingOverlay = placeholder.children(\"canvas.overlay\");","","            if (existingCanvas.length == 0 || existingOverlay == 0) {","                // init everything","                ","                placeholder.html(\"\"); // make sure placeholder is clear","            ","                placeholder.css({ padding: 0 }); // padding messes up the positioning","                ","                if (placeholder.css(\"position\") == 'static')","                    placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay","","                getCanvasDimensions();","                ","                canvas = makeCanvas(true, \"base\");","                overlay = makeCanvas(false, \"overlay\"); // overlay canvas for interactive features","","                reused = false;","            }","            else {","                // reuse existing elements","","                canvas = existingCanvas.get(0);","                overlay = existingOverlay.get(0);","","                reused = true;","            }","","            ctx = canvas.getContext(\"2d\");","            octx = overlay.getContext(\"2d\");","","            // we include the canvas in the event holder too, because IE 7","            // sometimes has trouble with the stacking order","            eventHolder = $([overlay, canvas]);","","            if (reused) {","                // run shutdown in the old plot object","                placeholder.data(\"plot\").shutdown();","","                // reset reused canvases","                plot.resize();","                ","                // make sure overlay pixels are cleared (canvas is cleared when we redraw)","                octx.clearRect(0, 0, canvasWidth, canvasHeight);","                ","                // then whack any remaining obvious garbage left","                eventHolder.unbind();","                placeholder.children().not([canvas, overlay]).remove();","            }","","            // save in case we get replotted","            placeholder.data(\"plot\", plot);","        }","","        function bindEvents() {","            // bind events","            if (options.grid.hoverable) {","                eventHolder.mousemove(onMouseMove);","                eventHolder.mouseleave(onMouseLeave);","            }","","            if (options.grid.clickable)","                eventHolder.click(onClick);","","            executeHooks(hooks.bindEvents, [eventHolder]);","        }","","        function shutdown() {","            if (redrawTimeout)","                clearTimeout(redrawTimeout);","            ","            eventHolder.unbind(\"mousemove\", onMouseMove);","            eventHolder.unbind(\"mouseleave\", onMouseLeave);","            eventHolder.unbind(\"click\", onClick);","            ","            executeHooks(hooks.shutdown, [eventHolder]);","        }","","        function setTransformationHelpers(axis) {","            // set helper functions on the axis, assumes plot area","            // has been computed already","            ","            function identity(x) { return x; }","            ","            var s, m, t = axis.options.transform || identity,","                it = axis.options.inverseTransform;","            ","            // precompute how much the axis is scaling a point","            // in canvas space","            if (axis.direction == \"x\") {","                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));","                m = Math.min(t(axis.max), t(axis.min));","            }","            else {","                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));","                s = -s;","                m = Math.max(t(axis.max), t(axis.min));","            }","","            // data point to canvas coordinate","            if (t == identity) // slight optimization","                axis.p2c = function (p) { return (p - m) * s; };","            else","                axis.p2c = function (p) { return (t(p) - m) * s; };","            // canvas coordinate to data point","            if (!it)","                axis.c2p = function (c) { return m + c / s; };","            else","                axis.c2p = function (c) { return it(m + c / s); };","        }","","        function measureTickLabels(axis) {","            var opts = axis.options, i, ticks = axis.ticks || [], labels = [],","                l, w = opts.labelWidth, h = opts.labelHeight, dummyDiv;","","            function makeDummyDiv(labels, width) {","                return $('&lt;div style=\"position:absolute;top:-10000px;' + width + 'font-size:smaller\"&gt;' +","                         '&lt;div class=\"' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis\"&gt;'","                         + labels.join(\"\") + '&lt;/div&gt;&lt;/div&gt;')","                    .appendTo(placeholder);","            }","            ","            if (axis.direction == \"x\") {","                // to avoid measuring the widths of the labels (it's slow), we","                // construct fixed-size boxes and put the labels inside","                // them, we don't need the exact figures and the","                // fixed-size box content is easy to center","                if (w == null)","                    w = Math.floor(canvasWidth / (ticks.length &gt; 0 ? ticks.length : 1));","","                // measure x label heights","                if (h == null) {","                    labels = [];","                    for (i = 0; i &lt; ticks.length; ++i) {","                        l = ticks[i].label;","                        if (l)","                            labels.push('&lt;div class=\"tickLabel\" style=\"float:left;width:' + w + 'px\"&gt;' + l + '&lt;/div&gt;');","                    }","","                    if (labels.length &gt; 0) {","                        // stick them all in the same div and measure","                        // collective height","                        labels.push('&lt;div style=\"clear:left\"&gt;&lt;/div&gt;');","                        dummyDiv = makeDummyDiv(labels, \"width:10000px;\");","                        h = dummyDiv.height();","                        dummyDiv.remove();","                    }","                }","            }","            else if (w == null || h == null) {","                // calculate y label dimensions","                for (i = 0; i &lt; ticks.length; ++i) {","                    l = ticks[i].label;","                    if (l)","                        labels.push('&lt;div class=\"tickLabel\"&gt;' + l + '&lt;/div&gt;');","                }","                ","                if (labels.length &gt; 0) {","                    dummyDiv = makeDummyDiv(labels, \"\");","                    if (w == null)","                        w = dummyDiv.children().width();","                    if (h == null)","                        h = dummyDiv.find(\"div.tickLabel\").height();","                    dummyDiv.remove();","                }","            }","","            if (w == null)","                w = 0;","            if (h == null)","                h = 0;","","            axis.labelWidth = w;","            axis.labelHeight = h;","        }","","        function allocateAxisBoxFirstPhase(axis) {","            // find the bounding box of the axis by looking at label","            // widths/heights and ticks, make room by diminishing the","            // plotOffset","","            var lw = axis.labelWidth,","                lh = axis.labelHeight,","                pos = axis.options.position,","                tickLength = axis.options.tickLength,","                axismargin = options.grid.axisMargin,","                padding = options.grid.labelMargin,","                all = axis.direction == \"x\" ? xaxes : yaxes,","                index;","","            // determine axis margin","            var samePosition = $.grep(all, function (a) {","                return a &amp;&amp; a.options.position == pos &amp;&amp; a.reserveSpace;","            });","            if ($.inArray(axis, samePosition) == samePosition.length - 1)","                axismargin = 0; // outermost","","            // determine tick length - if we're innermost, we can use \"full\"","            if (tickLength == null)","                tickLength = \"full\";","","            var sameDirection = $.grep(all, function (a) {","                return a &amp;&amp; a.reserveSpace;","            });","","            var innermost = $.inArray(axis, sameDirection) == 0;","            if (!innermost &amp;&amp; tickLength == \"full\")","                tickLength = 5;","                ","            if (!isNaN(+tickLength))","                padding += +tickLength;","","            // compute box","            if (axis.direction == \"x\") {","                lh += padding;","                ","                if (pos == \"bottom\") {","                    plotOffset.bottom += lh + axismargin;","                    axis.box = { top: canvasHeight - plotOffset.bottom, height: lh };","                }","                else {","                    axis.box = { top: plotOffset.top + axismargin, height: lh };","                    plotOffset.top += lh + axismargin;","                }","            }","            else {","                lw += padding;","                ","                if (pos == \"left\") {","                    axis.box = { left: plotOffset.left + axismargin, width: lw };","                    plotOffset.left += lw + axismargin;","                }","                else {","                    plotOffset.right += lw + axismargin;","                    axis.box = { left: canvasWidth - plotOffset.right, width: lw };","                }","            }","","             // save for future reference","            axis.position = pos;","            axis.tickLength = tickLength;","            axis.box.padding = padding;","            axis.innermost = innermost;","        }","","        function allocateAxisBoxSecondPhase(axis) {","            // set remaining bounding box coordinates","            if (axis.direction == \"x\") {","                axis.box.left = plotOffset.left;","                axis.box.width = plotWidth;","            }","            else {","                axis.box.top = plotOffset.top;","                axis.box.height = plotHeight;","            }","        }","        ","        function setupGrid() {","            var i, axes = allAxes();","","            // first calculate the plot and axis box dimensions","","            $.each(axes, function (_, axis) {","                axis.show = axis.options.show;","                if (axis.show == null)","                    axis.show = axis.used; // by default an axis is visible if it's got data","                ","                axis.reserveSpace = axis.show || axis.options.reserveSpace;","","                setRange(axis);","            });","","            allocatedAxes = $.grep(axes, function (axis) { return axis.reserveSpace; });","","            plotOffset.left = plotOffset.right = plotOffset.top = plotOffset.bottom = 0;","            if (options.grid.show) {","                $.each(allocatedAxes, function (_, axis) {","                    // make the ticks","                    setupTickGeneration(axis);","                    setTicks(axis);","                    snapRangeToTicks(axis, axis.ticks);","","                    // find labelWidth/Height for axis","                    measureTickLabels(axis);","                });","","                // with all dimensions in house, we can compute the","                // axis boxes, start from the outside (reverse order)","                for (i = allocatedAxes.length - 1; i &gt;= 0; --i)","                    allocateAxisBoxFirstPhase(allocatedAxes[i]);","","                // make sure we've got enough space for things that","                // might stick out","                var minMargin = options.grid.minBorderMargin;","                if (minMargin == null) {","                    minMargin = 0;","                    for (i = 0; i &lt; series.length; ++i)","                        minMargin = Math.max(minMargin, series[i].points.radius + series[i].points.lineWidth/2);","                }","                    ","                for (var a in plotOffset) {","                    plotOffset[a] += options.grid.borderWidth;","                    plotOffset[a] = Math.max(minMargin, plotOffset[a]);","                }","            }","            ","            plotWidth = canvasWidth - plotOffset.left - plotOffset.right;","            plotHeight = canvasHeight - plotOffset.bottom - plotOffset.top;","","            // now we got the proper plotWidth/Height, we can compute the scaling","            $.each(axes, function (_, axis) {","                setTransformationHelpers(axis);","            });","","            if (options.grid.show) {","                $.each(allocatedAxes, function (_, axis) {","                    allocateAxisBoxSecondPhase(axis);","                });","","                insertAxisLabels();","            }","            ","            insertLegend();","        }","        ","        function setRange(axis) {","            var opts = axis.options,","                min = +(opts.min != null ? opts.min : axis.datamin),","                max = +(opts.max != null ? opts.max : axis.datamax),","                delta = max - min;","","            if (delta == 0.0) {","                // degenerate case","                var widen = max == 0 ? 1 : 0.01;","","                if (opts.min == null)","                    min -= widen;","                // always widen max if we couldn't widen min to ensure we","                // don't fall into min == max which doesn't work","                if (opts.max == null || opts.min != null)","                    max += widen;","            }","            else {","                // consider autoscaling","                var margin = opts.autoscaleMargin;","                if (margin != null) {","                    if (opts.min == null) {","                        min -= delta * margin;","                        // make sure we don't go below zero if all values","                        // are positive","                        if (min &lt; 0 &amp;&amp; axis.datamin != null &amp;&amp; axis.datamin &gt;= 0)","                            min = 0;","                    }","                    if (opts.max == null) {","                        max += delta * margin;","                        if (max &gt; 0 &amp;&amp; axis.datamax != null &amp;&amp; axis.datamax &lt;= 0)","                            max = 0;","                    }","                }","            }","            axis.min = min;","            axis.max = max;","        }","","        function setupTickGeneration(axis) {","            var opts = axis.options;","                ","            // estimate number of ticks","            var noTicks;","            if (typeof opts.ticks == \"number\" &amp;&amp; opts.ticks &gt; 0)","                noTicks = opts.ticks;","            else","                // heuristic based on the model a*sqrt(x) fitted to","                // some data points that seemed reasonable","                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? canvasWidth : canvasHeight);","","            var delta = (axis.max - axis.min) / noTicks,","                size, generator, unit, formatter, i, magn, norm;","","            if (opts.mode == \"time\") {","                // pretty handling of time","                ","                // map of app. size of time units in milliseconds","                var timeUnitSize = {","                    \"second\": 1000,","                    \"minute\": 60 * 1000,","                    \"hour\": 60 * 60 * 1000,","                    \"day\": 24 * 60 * 60 * 1000,","                    \"month\": 30 * 24 * 60 * 60 * 1000,","                    \"year\": 365.2425 * 24 * 60 * 60 * 1000","                };","","","                // the allowed tick sizes, after 1 year we use","                // an integer algorithm","                var spec = [","                    [1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],","                    [30, \"second\"], ","                    [1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],","                    [30, \"minute\"], ","                    [1, \"hour\"], [2, \"hour\"], [4, \"hour\"],","                    [8, \"hour\"], [12, \"hour\"],","                    [1, \"day\"], [2, \"day\"], [3, \"day\"],","                    [0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],","                    [2, \"month\"], [3, \"month\"], [6, \"month\"],","                    [1, \"year\"]","                ];","","                var minSize = 0;","                if (opts.minTickSize != null) {","                    if (typeof opts.tickSize == \"number\")","                        minSize = opts.tickSize;","                    else","                        minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];","                }","","                for (var i = 0; i &lt; spec.length - 1; ++i)","                    if (delta &lt; (spec[i][0] * timeUnitSize[spec[i][1]]","                                 + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2","                       &amp;&amp; spec[i][0] * timeUnitSize[spec[i][1]] &gt;= minSize)","                        break;","                size = spec[i][0];","                unit = spec[i][1];","                ","                // special-case the possibility of several years","                if (unit == \"year\") {","                    magn = Math.pow(10, Math.floor(Math.log(delta / timeUnitSize.year) / Math.LN10));","                    norm = (delta / timeUnitSize.year) / magn;","                    if (norm &lt; 1.5)","                        size = 1;","                    else if (norm &lt; 3)","                        size = 2;","                    else if (norm &lt; 7.5)","                        size = 5;","                    else","                        size = 10;","","                    size *= magn;","                }","","                axis.tickSize = opts.tickSize || [size, unit];","                ","                generator = function(axis) {","                    var ticks = [],","                        tickSize = axis.tickSize[0], unit = axis.tickSize[1],","                        d = new Date(axis.min);","                    ","                    var step = tickSize * timeUnitSize[unit];","","                    if (unit == \"second\")","                        d.setUTCSeconds(floorInBase(d.getUTCSeconds(), tickSize));","                    if (unit == \"minute\")","                        d.setUTCMinutes(floorInBase(d.getUTCMinutes(), tickSize));","                    if (unit == \"hour\")","                        d.setUTCHours(floorInBase(d.getUTCHours(), tickSize));","                    if (unit == \"month\")","                        d.setUTCMonth(floorInBase(d.getUTCMonth(), tickSize));","                    if (unit == \"year\")","                        d.setUTCFullYear(floorInBase(d.getUTCFullYear(), tickSize));","                    ","                    // reset smaller components","                    d.setUTCMilliseconds(0);","                    if (step &gt;= timeUnitSize.minute)","                        d.setUTCSeconds(0);","                    if (step &gt;= timeUnitSize.hour)","                        d.setUTCMinutes(0);","                    if (step &gt;= timeUnitSize.day)","                        d.setUTCHours(0);","                    if (step &gt;= timeUnitSize.day * 4)","                        d.setUTCDate(1);","                    if (step &gt;= timeUnitSize.year)","                        d.setUTCMonth(0);","","","                    var carry = 0, v = Number.NaN, prev;","                    do {","                        prev = v;","                        v = d.getTime();","                        ticks.push(v);","                        if (unit == \"month\") {","                            if (tickSize &lt; 1) {","                                // a bit complicated - we'll divide the month","                                // up but we need to take care of fractions","                                // so we don't end up in the middle of a day","                                d.setUTCDate(1);","                                var start = d.getTime();","                                d.setUTCMonth(d.getUTCMonth() + 1);","                                var end = d.getTime();","                                d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);","                                carry = d.getUTCHours();","                                d.setUTCHours(0);","                            }","                            else","                                d.setUTCMonth(d.getUTCMonth() + tickSize);","                        }","                        else if (unit == \"year\") {","                            d.setUTCFullYear(d.getUTCFullYear() + tickSize);","                        }","                        else","                            d.setTime(v + step);","                    } while (v &lt; axis.max &amp;&amp; v != prev);","","                    return ticks;","                };","","                formatter = function (v, axis) {","                    var d = new Date(v);","","                    // first check global format","                    if (opts.timeformat != null)","                        return $.plot.formatDate(d, opts.timeformat, opts.monthNames);","                    ","                    var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];","                    var span = axis.max - axis.min;","                    var suffix = (opts.twelveHourClock) ? \" %p\" : \"\";","                    ","                    if (t &lt; timeUnitSize.minute)","                        fmt = \"%h:%M:%S\" + suffix;","                    else if (t &lt; timeUnitSize.day) {","                        if (span &lt; 2 * timeUnitSize.day)","                            fmt = \"%h:%M\" + suffix;","                        else","                            fmt = \"%b %d %h:%M\" + suffix;","                    }","                    else if (t &lt; timeUnitSize.month)","                        fmt = \"%b %d\";","                    else if (t &lt; timeUnitSize.year) {","                        if (span &lt; timeUnitSize.year)","                            fmt = \"%b\";","                        else","                            fmt = \"%b %y\";","                    }","                    else","                        fmt = \"%y\";","                    ","                    return $.plot.formatDate(d, fmt, opts.monthNames);","                };","            }","            else {","                // pretty rounding of base-10 numbers","                var maxDec = opts.tickDecimals;","                var dec = -Math.floor(Math.log(delta) / Math.LN10);","                if (maxDec != null &amp;&amp; dec &gt; maxDec)","                    dec = maxDec;","","                magn = Math.pow(10, -dec);","                norm = delta / magn; // norm is between 1.0 and 10.0","                ","                if (norm &lt; 1.5)","                    size = 1;","                else if (norm &lt; 3) {","                    size = 2;","                    // special case for 2.5, requires an extra decimal","                    if (norm &gt; 2.25 &amp;&amp; (maxDec == null || dec + 1 &lt;= maxDec)) {","                        size = 2.5;","                        ++dec;","                    }","                }","                else if (norm &lt; 7.5)","                    size = 5;","                else","                    size = 10;","","                size *= magn;","                ","                if (opts.minTickSize != null &amp;&amp; size &lt; opts.minTickSize)","                    size = opts.minTickSize;","","                axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);","                axis.tickSize = opts.tickSize || size;","","                generator = function (axis) {","                    var ticks = [];","","                    // spew out all possible ticks","                    var start = floorInBase(axis.min, axis.tickSize),","                        i = 0, v = Number.NaN, prev;","                    do {","                        prev = v;","                        v = start + i * axis.tickSize;","                        ticks.push(v);","                        ++i;","                    } while (v &lt; axis.max &amp;&amp; v != prev);","                    return ticks;","                };","","                formatter = function (v, axis) {","                    return v.toFixed(axis.tickDecimals);","                };","            }","","            if (opts.alignTicksWithAxis != null) {","                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];","                if (otherAxis &amp;&amp; otherAxis.used &amp;&amp; otherAxis != axis) {","                    // consider snapping min/max to outermost nice ticks","                    var niceTicks = generator(axis);","                    if (niceTicks.length &gt; 0) {","                        if (opts.min == null)","                            axis.min = Math.min(axis.min, niceTicks[0]);","                        if (opts.max == null &amp;&amp; niceTicks.length &gt; 1)","                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);","                    }","                    ","                    generator = function (axis) {","                        // copy ticks, scaled to this axis","                        var ticks = [], v, i;","                        for (i = 0; i &lt; otherAxis.ticks.length; ++i) {","                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);","                            v = axis.min + v * (axis.max - axis.min);","                            ticks.push(v);","                        }","                        return ticks;","                    };","                    ","                    // we might need an extra decimal since forced","                    // ticks don't necessarily fit naturally","                    if (axis.mode != \"time\" &amp;&amp; opts.tickDecimals == null) {","                        var extraDec = Math.max(0, -Math.floor(Math.log(delta) / Math.LN10) + 1),","                            ts = generator(axis);","","                        // only proceed if the tick interval rounded","                        // with an extra decimal doesn't give us a","                        // zero at end","                        if (!(ts.length &gt; 1 &amp;&amp; /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))","                            axis.tickDecimals = extraDec;","                    }","                }","            }","","            axis.tickGenerator = generator;","            if ($.isFunction(opts.tickFormatter))","                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };","            else","                axis.tickFormatter = formatter;","        }","        ","        function setTicks(axis) {","            var oticks = axis.options.ticks, ticks = [];","            if (oticks == null || (typeof oticks == \"number\" &amp;&amp; oticks &gt; 0))","                ticks = axis.tickGenerator(axis);","            else if (oticks) {","                if ($.isFunction(oticks))","                    // generate the ticks","                    ticks = oticks({ min: axis.min, max: axis.max });","                else","                    ticks = oticks;","            }","","            // clean up/labelify the supplied ticks, copy them over","            var i, v;","            axis.ticks = [];","            for (i = 0; i &lt; ticks.length; ++i) {","                var label = null;","                var t = ticks[i];","                if (typeof t == \"object\") {","                    v = +t[0];","                    if (t.length &gt; 1)","                        label = t[1];","                }","                else","                    v = +t;","                if (label == null)","                    label = axis.tickFormatter(v, axis);","                if (!isNaN(v))","                    axis.ticks.push({ v: v, label: label });","            }","        }","","        function snapRangeToTicks(axis, ticks) {","            if (axis.options.autoscaleMargin &amp;&amp; ticks.length &gt; 0) {","                // snap to ticks","                if (axis.options.min == null)","                    axis.min = Math.min(axis.min, ticks[0].v);","                if (axis.options.max == null &amp;&amp; ticks.length &gt; 1)","                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);","            }","        }","      ","        function draw() {","            ctx.clearRect(0, 0, canvasWidth, canvasHeight);","","            var grid = options.grid;","","            // draw background, if any","            if (grid.show &amp;&amp; grid.backgroundColor)","                drawBackground();","            ","            if (grid.show &amp;&amp; !grid.aboveData)","                drawGrid();","","            for (var i = 0; i &lt; series.length; ++i) {","                executeHooks(hooks.drawSeries, [ctx, series[i]]);","                drawSeries(series[i]);","            }","","            executeHooks(hooks.draw, [ctx]);","            ","            if (grid.show &amp;&amp; grid.aboveData)","                drawGrid();","        }","","        function extractRange(ranges, coord) {","            var axis, from, to, key, axes = allAxes();","","            for (i = 0; i &lt; axes.length; ++i) {","                axis = axes[i];","                if (axis.direction == coord) {","                    key = coord + axis.n + \"axis\";","                    if (!ranges[key] &amp;&amp; axis.n == 1)","                        key = coord + \"axis\"; // support x1axis as xaxis","                    if (ranges[key]) {","                        from = ranges[key].from;","                        to = ranges[key].to;","                        break;","                    }","                }","            }","","            // backwards-compat stuff - to be removed in future","            if (!ranges[key]) {","                axis = coord == \"x\" ? xaxes[0] : yaxes[0];","                from = ranges[coord + \"1\"];","                to = ranges[coord + \"2\"];","            }","","            // auto-reverse as an added bonus","            if (from != null &amp;&amp; to != null &amp;&amp; from &gt; to) {","                var tmp = from;","                from = to;","                to = tmp;","            }","            ","            return { from: from, to: to, axis: axis };","        }","        ","        function drawBackground() {","            ctx.save();","            ctx.translate(plotOffset.left, plotOffset.top);","","            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");","            ctx.fillRect(0, 0, plotWidth, plotHeight);","            ctx.restore();","        }","","        function drawGrid() {","            var i;","            ","            ctx.save();","            ctx.translate(plotOffset.left, plotOffset.top);","","            // draw markings","            var markings = options.grid.markings;","            if (markings) {","                if ($.isFunction(markings)) {","                    var axes = plot.getAxes();","                    // xmin etc. is backwards compatibility, to be","                    // removed in the future","                    axes.xmin = axes.xaxis.min;","                    axes.xmax = axes.xaxis.max;","                    axes.ymin = axes.yaxis.min;","                    axes.ymax = axes.yaxis.max;","                    ","                    markings = markings(axes);","                }","","                for (i = 0; i &lt; markings.length; ++i) {","                    var m = markings[i],","                        xrange = extractRange(m, \"x\"),","                        yrange = extractRange(m, \"y\");","","                    // fill in missing","                    if (xrange.from == null)","                        xrange.from = xrange.axis.min;","                    if (xrange.to == null)","                        xrange.to = xrange.axis.max;","                    if (yrange.from == null)","                        yrange.from = yrange.axis.min;","                    if (yrange.to == null)","                        yrange.to = yrange.axis.max;","","                    // clip","                    if (xrange.to &lt; xrange.axis.min || xrange.from &gt; xrange.axis.max ||","                        yrange.to &lt; yrange.axis.min || yrange.from &gt; yrange.axis.max)","                        continue;","","                    xrange.from = Math.max(xrange.from, xrange.axis.min);","                    xrange.to = Math.min(xrange.to, xrange.axis.max);","                    yrange.from = Math.max(yrange.from, yrange.axis.min);","                    yrange.to = Math.min(yrange.to, yrange.axis.max);","","                    if (xrange.from == xrange.to &amp;&amp; yrange.from == yrange.to)","                        continue;","","                    // then draw","                    xrange.from = xrange.axis.p2c(xrange.from);","                    xrange.to = xrange.axis.p2c(xrange.to);","                    yrange.from = yrange.axis.p2c(yrange.from);","                    yrange.to = yrange.axis.p2c(yrange.to);","                    ","                    if (xrange.from == xrange.to || yrange.from == yrange.to) {","                        // draw line","                        ctx.beginPath();","                        ctx.strokeStyle = m.color || options.grid.markingsColor;","                        ctx.lineWidth = m.lineWidth || options.grid.markingsLineWidth;","                        ctx.moveTo(xrange.from, yrange.from);","                        ctx.lineTo(xrange.to, yrange.to);","                        ctx.stroke();","                    }","                    else {","                        // fill area","                        ctx.fillStyle = m.color || options.grid.markingsColor;","                        ctx.fillRect(xrange.from, yrange.to,","                                     xrange.to - xrange.from,","                                     yrange.from - yrange.to);","                    }","                }","            }","            ","            // draw the ticks","            var axes = allAxes(), bw = options.grid.borderWidth;","","            for (var j = 0; j &lt; axes.length; ++j) {","                var axis = axes[j], box = axis.box,","                    t = axis.tickLength, x, y, xoff, yoff;","                if (!axis.show || axis.ticks.length == 0)","                    continue","                ","                ctx.strokeStyle = axis.options.tickColor || $.color.parse(axis.options.color).scale('a', 0.22).toString();","                ctx.lineWidth = 1;","","                // find the edges","                if (axis.direction == \"x\") {","                    x = 0;","                    if (t == \"full\")","                        y = (axis.position == \"top\" ? 0 : plotHeight);","                    else","                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);","                }","                else {","                    y = 0;","                    if (t == \"full\")","                        x = (axis.position == \"left\" ? 0 : plotWidth);","                    else","                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);","                }","                ","                // draw tick bar","                if (!axis.innermost) {","                    ctx.beginPath();","                    xoff = yoff = 0;","                    if (axis.direction == \"x\")","                        xoff = plotWidth;","                    else","                        yoff = plotHeight;","                    ","                    if (ctx.lineWidth == 1) {","                        x = Math.floor(x) + 0.5;","                        y = Math.floor(y) + 0.5;","                    }","","                    ctx.moveTo(x, y);","                    ctx.lineTo(x + xoff, y + yoff);","                    ctx.stroke();","                }","","                // draw ticks","                ctx.beginPath();","                for (i = 0; i &lt; axis.ticks.length; ++i) {","                    var v = axis.ticks[i].v;","                    ","                    xoff = yoff = 0;","","                    if (v &lt; axis.min || v &gt; axis.max","                        // skip those lying on the axes if we got a border","                        || (t == \"full\" &amp;&amp; bw &gt; 0","                            &amp;&amp; (v == axis.min || v == axis.max)))","                        continue;","","                    if (axis.direction == \"x\") {","                        x = axis.p2c(v);","                        yoff = t == \"full\" ? -plotHeight : t;","                        ","                        if (axis.position == \"top\")","                            yoff = -yoff;","                    }","                    else {","                        y = axis.p2c(v);","                        xoff = t == \"full\" ? -plotWidth : t;","                        ","                        if (axis.position == \"left\")","                            xoff = -xoff;","                    }","","                    if (ctx.lineWidth == 1) {","                        if (axis.direction == \"x\")","                            x = Math.floor(x) + 0.5;","                        else","                            y = Math.floor(y) + 0.5;","                    }","","                    ctx.moveTo(x, y);","                    ctx.lineTo(x + xoff, y + yoff);","                }","                ","                ctx.stroke();","            }","            ","            ","            // draw border","            if (bw) {","                ctx.lineWidth = bw;","                ctx.strokeStyle = options.grid.borderColor;","                ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);","            }","","            ctx.restore();","        }","","        function insertAxisLabels() {","            placeholder.find(\".tickLabels\").remove();","            ","            var html = ['&lt;div class=\"tickLabels\" style=\"font-size:smaller\"&gt;'];","","            var axes = allAxes();","            for (var j = 0; j &lt; axes.length; ++j) {","                var axis = axes[j], box = axis.box;","                if (!axis.show)","                    continue;","                //debug: html.push('&lt;div style=\"position:absolute;opacity:0.10;background-color:red;left:' + box.left + 'px;top:' + box.top + 'px;width:' + box.width +  'px;height:' + box.height + 'px\"&gt;&lt;/div&gt;')","                html.push('&lt;div class=\"' + axis.direction + 'Axis ' + axis.direction + axis.n + 'Axis\" style=\"color:' + axis.options.color + '\"&gt;');","                for (var i = 0; i &lt; axis.ticks.length; ++i) {","                    var tick = axis.ticks[i];","                    if (!tick.label || tick.v &lt; axis.min || tick.v &gt; axis.max)","                        continue;","","                    var pos = {}, align;","                    ","                    if (axis.direction == \"x\") {","                        align = \"center\";","                        pos.left = Math.round(plotOffset.left + axis.p2c(tick.v) - axis.labelWidth/2);","                        if (axis.position == \"bottom\")","                            pos.top = box.top + box.padding;","                        else","                            pos.bottom = canvasHeight - (box.top + box.height - box.padding);","                    }","                    else {","                        pos.top = Math.round(plotOffset.top + axis.p2c(tick.v) - axis.labelHeight/2);","                        if (axis.position == \"left\") {","                            pos.right = canvasWidth - (box.left + box.width - box.padding)","                            align = \"right\";","                        }","                        else {","                            pos.left = box.left + box.padding;","                            align = \"left\";","                        }","                    }","","                    pos.width = axis.labelWidth;","","                    var style = [\"position:absolute\", \"text-align:\" + align ];","                    for (var a in pos)","                        style.push(a + \":\" + pos[a] + \"px\")","                    ","                    html.push('&lt;div class=\"tickLabel\" style=\"' + style.join(';') + '\"&gt;' + tick.label + '&lt;/div&gt;');","                }","                html.push('&lt;/div&gt;');","            }","","            html.push('&lt;/div&gt;');","","            placeholder.append(html.join(\"\"));","        }","","        function drawSeries(series) {","            if (series.lines.show)","                drawSeriesLines(series);","            if (series.bars.show)","                drawSeriesBars(series);","            if (series.points.show)","                drawSeriesPoints(series);","        }","        ","        function drawSeriesLines(series) {","            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {","                var points = datapoints.points,","                    ps = datapoints.pointsize,","                    prevx = null, prevy = null;","                ","                ctx.beginPath();","                for (var i = ps; i &lt; points.length; i += ps) {","                    var x1 = points[i - ps], y1 = points[i - ps + 1],","                        x2 = points[i], y2 = points[i + 1];","                    ","                    if (x1 == null || x2 == null)","                        continue;","","                    // clip with ymin","                    if (y1 &lt;= y2 &amp;&amp; y1 &lt; axisy.min) {","                        if (y2 &lt; axisy.min)","                            continue;   // line segment is outside","                        // compute new intersection point","                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y1 = axisy.min;","                    }","                    else if (y2 &lt;= y1 &amp;&amp; y2 &lt; axisy.min) {","                        if (y1 &lt; axisy.min)","                            continue;","                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y2 = axisy.min;","                    }","","                    // clip with ymax","                    if (y1 &gt;= y2 &amp;&amp; y1 &gt; axisy.max) {","                        if (y2 &gt; axisy.max)","                            continue;","                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y1 = axisy.max;","                    }","                    else if (y2 &gt;= y1 &amp;&amp; y2 &gt; axisy.max) {","                        if (y1 &gt; axisy.max)","                            continue;","                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y2 = axisy.max;","                    }","","                    // clip with xmin","                    if (x1 &lt;= x2 &amp;&amp; x1 &lt; axisx.min) {","                        if (x2 &lt; axisx.min)","                            continue;","                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x1 = axisx.min;","                    }","                    else if (x2 &lt;= x1 &amp;&amp; x2 &lt; axisx.min) {","                        if (x1 &lt; axisx.min)","                            continue;","                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x2 = axisx.min;","                    }","","                    // clip with xmax","                    if (x1 &gt;= x2 &amp;&amp; x1 &gt; axisx.max) {","                        if (x2 &gt; axisx.max)","                            continue;","                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x1 = axisx.max;","                    }","                    else if (x2 &gt;= x1 &amp;&amp; x2 &gt; axisx.max) {","                        if (x1 &gt; axisx.max)","                            continue;","                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x2 = axisx.max;","                    }","","                    if (x1 != prevx || y1 != prevy)","                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);","                    ","                    prevx = x2;","                    prevy = y2;","                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);","                }","                ctx.stroke();","            }","","            function plotLineArea(datapoints, axisx, axisy) {","                var points = datapoints.points,","                    ps = datapoints.pointsize,","                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),","                    i = 0, top, areaOpen = false,","                    ypos = 1, segmentStart = 0, segmentEnd = 0;","","                // we process each segment in two turns, first forward","                // direction to sketch out top, then once we hit the","                // end we go backwards to sketch the bottom","                while (true) {","                    if (ps &gt; 0 &amp;&amp; i &gt; points.length + ps)","                        break;","","                    i += ps; // ps is negative if going backwards","","                    var x1 = points[i - ps],","                        y1 = points[i - ps + ypos],","                        x2 = points[i], y2 = points[i + ypos];","","                    if (areaOpen) {","                        if (ps &gt; 0 &amp;&amp; x1 != null &amp;&amp; x2 == null) {","                            // at turning point","                            segmentEnd = i;","                            ps = -ps;","                            ypos = 2;","                            continue;","                        }","","                        if (ps &lt; 0 &amp;&amp; i == segmentStart + ps) {","                            // done with the reverse sweep","                            ctx.fill();","                            areaOpen = false;","                            ps = -ps;","                            ypos = 1;","                            i = segmentStart = segmentEnd + ps;","                            continue;","                        }","                    }","","                    if (x1 == null || x2 == null)","                        continue;","","                    // clip x values","                    ","                    // clip with xmin","                    if (x1 &lt;= x2 &amp;&amp; x1 &lt; axisx.min) {","                        if (x2 &lt; axisx.min)","                            continue;","                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x1 = axisx.min;","                    }","                    else if (x2 &lt;= x1 &amp;&amp; x2 &lt; axisx.min) {","                        if (x1 &lt; axisx.min)","                            continue;","                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x2 = axisx.min;","                    }","","                    // clip with xmax","                    if (x1 &gt;= x2 &amp;&amp; x1 &gt; axisx.max) {","                        if (x2 &gt; axisx.max)","                            continue;","                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x1 = axisx.max;","                    }","                    else if (x2 &gt;= x1 &amp;&amp; x2 &gt; axisx.max) {","                        if (x1 &gt; axisx.max)","                            continue;","                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;","                        x2 = axisx.max;","                    }","","                    if (!areaOpen) {","                        // open area","                        ctx.beginPath();","                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));","                        areaOpen = true;","                    }","                    ","                    // now first check the case where both is outside","                    if (y1 &gt;= axisy.max &amp;&amp; y2 &gt;= axisy.max) {","                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));","                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));","                        continue;","                    }","                    else if (y1 &lt;= axisy.min &amp;&amp; y2 &lt;= axisy.min) {","                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));","                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));","                        continue;","                    }","                    ","                    // else it's a bit more complicated, there might","                    // be a flat maxed out rectangle first, then a","                    // triangular cutout or reverse; to find these","                    // keep track of the current x values","                    var x1old = x1, x2old = x2;","","                    // clip the y values, without shortcutting, we","                    // go through all cases in turn","                    ","                    // clip with ymin","                    if (y1 &lt;= y2 &amp;&amp; y1 &lt; axisy.min &amp;&amp; y2 &gt;= axisy.min) {","                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y1 = axisy.min;","                    }","                    else if (y2 &lt;= y1 &amp;&amp; y2 &lt; axisy.min &amp;&amp; y1 &gt;= axisy.min) {","                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y2 = axisy.min;","                    }","","                    // clip with ymax","                    if (y1 &gt;= y2 &amp;&amp; y1 &gt; axisy.max &amp;&amp; y2 &lt;= axisy.max) {","                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y1 = axisy.max;","                    }","                    else if (y2 &gt;= y1 &amp;&amp; y2 &gt; axisy.max &amp;&amp; y1 &lt;= axisy.max) {","                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;","                        y2 = axisy.max;","                    }","","                    // if the x value was changed we got a rectangle","                    // to fill","                    if (x1 != x1old) {","                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));","                        // it goes to (x1, y1), but we fill that below","                    }","                    ","                    // fill triangular section, this sometimes result","                    // in redundant points if (x1, y1) hasn't changed","                    // from previous line to, but we just ignore that","                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));","                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));","","                    // fill the other rectangle if it's there","                    if (x2 != x2old) {","                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));","                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));","                    }","                }","            }","","            ctx.save();","            ctx.translate(plotOffset.left, plotOffset.top);","            ctx.lineJoin = \"round\";","","            var lw = series.lines.lineWidth,","                sw = series.shadowSize;","            // FIXME: consider another form of shadow when filling is turned on","            if (lw &gt; 0 &amp;&amp; sw &gt; 0) {","                // draw shadow as a thick and thin line with transparency","                ctx.lineWidth = sw;","                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";","                // position shadow at angle from the mid of line","                var angle = Math.PI/18;","                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);","                ctx.lineWidth = sw/2;","                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);","            }","","            ctx.lineWidth = lw;","            ctx.strokeStyle = series.color;","            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);","            if (fillStyle) {","                ctx.fillStyle = fillStyle;","                plotLineArea(series.datapoints, series.xaxis, series.yaxis);","            }","","            if (lw &gt; 0)","                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);","            ctx.restore();","        }","","        function drawSeriesPoints(series) {","            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {","                var points = datapoints.points, ps = datapoints.pointsize;","","                for (var i = 0; i &lt; points.length; i += ps) {","                    var x = points[i], y = points[i + 1];","                    if (x == null || x &lt; axisx.min || x &gt; axisx.max || y &lt; axisy.min || y &gt; axisy.max)","                        continue;","                    ","                    ctx.beginPath();","                    x = axisx.p2c(x);","                    y = axisy.p2c(y) + offset;","                    if (symbol == \"circle\")","                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);","                    else","                        symbol(ctx, x, y, radius, shadow);","                    ctx.closePath();","                    ","                    if (fillStyle) {","                        ctx.fillStyle = fillStyle;","                        ctx.fill();","                    }","                    ctx.stroke();","                }","            }","            ","            ctx.save();","            ctx.translate(plotOffset.left, plotOffset.top);","","            var lw = series.points.lineWidth,","                sw = series.shadowSize,","                radius = series.points.radius,","                symbol = series.points.symbol;","            if (lw &gt; 0 &amp;&amp; sw &gt; 0) {","                // draw shadow in two steps","                var w = sw / 2;","                ctx.lineWidth = w;","                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";","                plotPoints(series.datapoints, radius, null, w + w/2, true,","                           series.xaxis, series.yaxis, symbol);","","                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";","                plotPoints(series.datapoints, radius, null, w/2, true,","                           series.xaxis, series.yaxis, symbol);","            }","","            ctx.lineWidth = lw;","            ctx.strokeStyle = series.color;","            plotPoints(series.datapoints, radius,","                       getFillStyle(series.points, series.color), 0, false,","                       series.xaxis, series.yaxis, symbol);","            ctx.restore();","        }","","        function drawBar(x, y, b, barLeft, barRight, offset, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {","            var left, right, bottom, top,","                drawLeft, drawRight, drawTop, drawBottom,","                tmp;","","            // in horizontal mode, we start the bar from the left","            // instead of from the bottom so it appears to be","            // horizontal rather than vertical","            if (horizontal) {","                drawBottom = drawRight = drawTop = true;","                drawLeft = false;","                left = b;","                right = x;","                top = y + barLeft;","                bottom = y + barRight;","","                // account for negative bars","                if (right &lt; left) {","                    tmp = right;","                    right = left;","                    left = tmp;","                    drawLeft = true;","                    drawRight = false;","                }","            }","            else {","                drawLeft = drawRight = drawTop = true;","                drawBottom = false;","                left = x + barLeft;","                right = x + barRight;","                bottom = b;","                top = y;","","                // account for negative bars","                if (top &lt; bottom) {","                    tmp = top;","                    top = bottom;","                    bottom = tmp;","                    drawBottom = true;","                    drawTop = false;","                }","            }","           ","            // clip","            if (right &lt; axisx.min || left &gt; axisx.max ||","                top &lt; axisy.min || bottom &gt; axisy.max)","                return;","            ","            if (left &lt; axisx.min) {","                left = axisx.min;","                drawLeft = false;","            }","","            if (right &gt; axisx.max) {","                right = axisx.max;","                drawRight = false;","            }","","            if (bottom &lt; axisy.min) {","                bottom = axisy.min;","                drawBottom = false;","            }","            ","            if (top &gt; axisy.max) {","                top = axisy.max;","                drawTop = false;","            }","","            left = axisx.p2c(left);","            bottom = axisy.p2c(bottom);","            right = axisx.p2c(right);","            top = axisy.p2c(top);","            ","            // fill the bar","            if (fillStyleCallback) {","                c.beginPath();","                c.moveTo(left, bottom);","                c.lineTo(left, top);","                c.lineTo(right, top);","                c.lineTo(right, bottom);","                c.fillStyle = fillStyleCallback(bottom, top);","                c.fill();","            }","","            // draw outline","            if (lineWidth &gt; 0 &amp;&amp; (drawLeft || drawRight || drawTop || drawBottom)) {","                c.beginPath();","","                // FIXME: inline moveTo is buggy with excanvas","                c.moveTo(left, bottom + offset);","                if (drawLeft)","                    c.lineTo(left, top + offset);","                else","                    c.moveTo(left, top + offset);","                if (drawTop)","                    c.lineTo(right, top + offset);","                else","                    c.moveTo(right, top + offset);","                if (drawRight)","                    c.lineTo(right, bottom + offset);","                else","                    c.moveTo(right, bottom + offset);","                if (drawBottom)","                    c.lineTo(left, bottom + offset);","                else","                    c.moveTo(left, bottom + offset);","                c.stroke();","            }","        }","        ","        function drawSeriesBars(series) {","            function plotBars(datapoints, barLeft, barRight, offset, fillStyleCallback, axisx, axisy) {","                var points = datapoints.points, ps = datapoints.pointsize;","                ","                for (var i = 0; i &lt; points.length; i += ps) {","                    if (points[i] == null)","                        continue;","                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, offset, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);","                }","            }","","            ctx.save();","            ctx.translate(plotOffset.left, plotOffset.top);","","            // FIXME: figure out a way to add shadows (for instance along the right edge)","            ctx.lineWidth = series.bars.lineWidth;","            ctx.strokeStyle = series.color;","            var barLeft = series.bars.align == \"left\" ? 0 : -series.bars.barWidth/2;","            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;","            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, 0, fillStyleCallback, series.xaxis, series.yaxis);","            ctx.restore();","        }","","        function getFillStyle(filloptions, seriesColor, bottom, top) {","            var fill = filloptions.fill;","            if (!fill)","                return null;","","            if (filloptions.fillColor)","                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);","            ","            var c = $.color.parse(seriesColor);","            c.a = typeof fill == \"number\" ? fill : 0.4;","            c.normalize();","            return c.toString();","        }","        ","        function insertLegend() {","            placeholder.find(\".legend\").remove();","","            if (!options.legend.show)","                return;","            ","            var fragments = [], rowStarted = false,","                lf = options.legend.labelFormatter, s, label;","            for (var i = 0; i &lt; series.length; ++i) {","                s = series[i];","                label = s.label;","                if (!label)","                    continue;","                ","                if (i % options.legend.noColumns == 0) {","                    if (rowStarted)","                        fragments.push('&lt;/tr&gt;');","                    fragments.push('&lt;tr&gt;');","                    rowStarted = true;","                }","","                if (lf)","                    label = lf(label, s);","                ","                fragments.push(","                    '&lt;td class=\"legendColorBox\"&gt;&lt;div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"&gt;&lt;div style=\"width:4px;height:0;border:5px solid ' + s.color + ';overflow:hidden\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;' +","                    '&lt;td class=\"legendLabel\"&gt;' + label + '&lt;/td&gt;');","            }","            if (rowStarted)","                fragments.push('&lt;/tr&gt;');","            ","            if (fragments.length == 0)","                return;","","            var table = '&lt;table style=\"font-size:smaller;color:' + options.grid.color + '\"&gt;' + fragments.join(\"\") + '&lt;/table&gt;';","            if (options.legend.container != null)","                $(options.legend.container).html(table);","            else {","                var pos = \"\",","                    p = options.legend.position,","                    m = options.legend.margin;","                if (m[0] == null)","                    m = [m, m];","                if (p.charAt(0) == \"n\")","                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';","                else if (p.charAt(0) == \"s\")","                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';","                if (p.charAt(1) == \"e\")","                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';","                else if (p.charAt(1) == \"w\")","                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';","                var legend = $('&lt;div class=\"legend\"&gt;' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '&lt;/div&gt;').appendTo(placeholder);","                if (options.legend.backgroundOpacity != 0.0) {","                    // put in the transparent background","                    // separately to avoid blended labels and","                    // label boxes","                    var c = options.legend.backgroundColor;","                    if (c == null) {","                        c = options.grid.backgroundColor;","                        if (c &amp;&amp; typeof c == \"string\")","                            c = $.color.parse(c);","                        else","                            c = $.color.extract(legend, 'background-color');","                        c.a = 1;","                        c = c.toString();","                    }","                    var div = legend.children();","                    $('&lt;div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"&gt; &lt;/div&gt;').prependTo(legend).css('opacity', options.legend.backgroundOpacity);","                }","            }","        }","","","        // interactive features","        ","        var highlights = [],","            redrawTimeout = null;","        ","        // returns the data item the mouse is over, or null if none is found","        function findNearbyItem(mouseX, mouseY, seriesFilter) {","            var maxDistance = options.grid.mouseActiveRadius,","                smallestDistance = maxDistance * maxDistance + 1,","                item = null, foundPoint = false, i, j;","","            for (i = series.length - 1; i &gt;= 0; --i) {","                if (!seriesFilter(series[i]))","                    continue;","                ","                var s = series[i],","                    axisx = s.xaxis,","                    axisy = s.yaxis,","                    points = s.datapoints.points,","                    ps = s.datapoints.pointsize,","                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster","                    my = axisy.c2p(mouseY),","                    maxx = maxDistance / axisx.scale,","                    maxy = maxDistance / axisy.scale;","","                // with inverse transforms, we can't use the maxx/maxy","                // optimization, sadly","                if (axisx.options.inverseTransform)","                    maxx = Number.MAX_VALUE;","                if (axisy.options.inverseTransform)","                    maxy = Number.MAX_VALUE;","                ","                if (s.lines.show || s.points.show) {","                    for (j = 0; j &lt; points.length; j += ps) {","                        var x = points[j], y = points[j + 1];","                        if (x == null)","                            continue;","                        ","                        // For points and lines, the cursor must be within a","                        // certain distance to the data point","                        if (x - mx &gt; maxx || x - mx &lt; -maxx ||","                            y - my &gt; maxy || y - my &lt; -maxy)","                            continue;","","                        // We have to calculate distances in pixels, not in","                        // data units, because the scales of the axes may be different","                        var dx = Math.abs(axisx.p2c(x) - mouseX),","                            dy = Math.abs(axisy.p2c(y) - mouseY),","                            dist = dx * dx + dy * dy; // we save the sqrt","","                        // use &lt;= to ensure last point takes precedence","                        // (last generally means on top of)","                        if (dist &lt; smallestDistance) {","                            smallestDistance = dist;","                            item = [i, j / ps];","                        }","                    }","                }","                    ","                if (s.bars.show &amp;&amp; !item) { // no other point can be nearby","                    var barLeft = s.bars.align == \"left\" ? 0 : -s.bars.barWidth/2,","                        barRight = barLeft + s.bars.barWidth;","                    ","                    for (j = 0; j &lt; points.length; j += ps) {","                        var x = points[j], y = points[j + 1], b = points[j + 2];","                        if (x == null)","                            continue;","  ","                        // for a bar graph, the cursor must be inside the bar","                        if (series[i].bars.horizontal ? ","                            (mx &lt;= Math.max(b, x) &amp;&amp; mx &gt;= Math.min(b, x) &amp;&amp; ","                             my &gt;= y + barLeft &amp;&amp; my &lt;= y + barRight) :","                            (mx &gt;= x + barLeft &amp;&amp; mx &lt;= x + barRight &amp;&amp;","                             my &gt;= Math.min(b, y) &amp;&amp; my &lt;= Math.max(b, y)))","                                item = [i, j / ps];","                    }","                }","            }","","            if (item) {","                i = item[0];","                j = item[1];","                ps = series[i].datapoints.pointsize;","                ","                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),","                         dataIndex: j,","                         series: series[i],","                         seriesIndex: i };","            }","            ","            return null;","        }","","        function onMouseMove(e) {","            if (options.grid.hoverable)","                triggerClickHoverEvent(\"plothover\", e,","                                       function (s) { return s[\"hoverable\"] != false; });","        }","","        function onMouseLeave(e) {","            if (options.grid.hoverable)","                triggerClickHoverEvent(\"plothover\", e,","                                       function (s) { return false; });","        }","","        function onClick(e) {","            triggerClickHoverEvent(\"plotclick\", e,","                                   function (s) { return s[\"clickable\"] != false; });","        }","","        // trigger click or hover event (they send the same parameters","        // so we share their code)","        function triggerClickHoverEvent(eventname, event, seriesFilter) {","            var offset = eventHolder.offset(),","                canvasX = event.pageX - offset.left - plotOffset.left,","                canvasY = event.pageY - offset.top - plotOffset.top,","            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });","","            pos.pageX = event.pageX;","            pos.pageY = event.pageY;","","            var item = findNearbyItem(canvasX, canvasY, seriesFilter);","","            if (item) {","                // fill in mouse pos for any listeners out there","                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left);","                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top);","            }","","            if (options.grid.autoHighlight) {","                // clear auto-highlights","                for (var i = 0; i &lt; highlights.length; ++i) {","                    var h = highlights[i];","                    if (h.auto == eventname &amp;&amp;","                        !(item &amp;&amp; h.series == item.series &amp;&amp;","                          h.point[0] == item.datapoint[0] &amp;&amp;","                          h.point[1] == item.datapoint[1]))","                        unhighlight(h.series, h.point);","                }","                ","                if (item)","                    highlight(item.series, item.datapoint, eventname);","            }","            ","            placeholder.trigger(eventname, [ pos, item ]);","        }","","        function triggerRedrawOverlay() {","            if (!redrawTimeout)","                redrawTimeout = setTimeout(drawOverlay, 30);","        }","","        function drawOverlay() {","            redrawTimeout = null;","","            // draw highlights","            octx.save();","            octx.clearRect(0, 0, canvasWidth, canvasHeight);","            octx.translate(plotOffset.left, plotOffset.top);","            ","            var i, hi;","            for (i = 0; i &lt; highlights.length; ++i) {","                hi = highlights[i];","","                if (hi.series.bars.show)","                    drawBarHighlight(hi.series, hi.point);","                else","                    drawPointHighlight(hi.series, hi.point);","            }","            octx.restore();","            ","            executeHooks(hooks.drawOverlay, [octx]);","        }","        ","        function highlight(s, point, auto) {","            if (typeof s == \"number\")","                s = series[s];","","            if (typeof point == \"number\") {","                var ps = s.datapoints.pointsize;","                point = s.datapoints.points.slice(ps * point, ps * (point + 1));","            }","","            var i = indexOfHighlight(s, point);","            if (i == -1) {","                highlights.push({ series: s, point: point, auto: auto });","","                triggerRedrawOverlay();","            }","            else if (!auto)","                highlights[i].auto = false;","        }","            ","        function unhighlight(s, point) {","            if (s == null &amp;&amp; point == null) {","                highlights = [];","                triggerRedrawOverlay();","            }","            ","            if (typeof s == \"number\")","                s = series[s];","","            if (typeof point == \"number\")","                point = s.data[point];","","            var i = indexOfHighlight(s, point);","            if (i != -1) {","                highlights.splice(i, 1);","","                triggerRedrawOverlay();","            }","        }","        ","        function indexOfHighlight(s, p) {","            for (var i = 0; i &lt; highlights.length; ++i) {","                var h = highlights[i];","                if (h.series == s &amp;&amp; h.point[0] == p[0]","                    &amp;&amp; h.point[1] == p[1])","                    return i;","            }","            return -1;","        }","        ","        function drawPointHighlight(series, point) {","            var x = point[0], y = point[1],","                axisx = series.xaxis, axisy = series.yaxis;","            ","            if (x &lt; axisx.min || x &gt; axisx.max || y &lt; axisy.min || y &gt; axisy.max)","                return;","            ","            var pointRadius = series.points.radius + series.points.lineWidth / 2;","            octx.lineWidth = pointRadius;","            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();","            var radius = 1.5 * pointRadius,","                x = axisx.p2c(x),","                y = axisy.p2c(y);","            ","            octx.beginPath();","            if (series.points.symbol == \"circle\")","                octx.arc(x, y, radius, 0, 2 * Math.PI, false);","            else","                series.points.symbol(octx, x, y, radius, false);","            octx.closePath();","            octx.stroke();","        }","","        function drawBarHighlight(series, point) {","            octx.lineWidth = series.bars.lineWidth;","            octx.strokeStyle = $.color.parse(series.color).scale('a', 0.5).toString();","            var fillStyle = $.color.parse(series.color).scale('a', 0.5).toString();","            var barLeft = series.bars.align == \"left\" ? 0 : -series.bars.barWidth/2;","            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,","                    0, function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);","        }","","        function getColorOrGradient(spec, bottom, top, defaultColor) {","            if (typeof spec == \"string\")","                return spec;","            else {","                // assume this is a gradient spec; IE currently only","                // supports a simple vertical gradient properly, so that's","                // what we support too","                var gradient = ctx.createLinearGradient(0, top, 0, bottom);","                ","                for (var i = 0, l = spec.colors.length; i &lt; l; ++i) {","                    var c = spec.colors[i];","                    if (typeof c != \"string\") {","                        var co = $.color.parse(defaultColor);","                        if (c.brightness != null)","                            co = co.scale('rgb', c.brightness)","                        if (c.opacity != null)","                            co.a *= c.opacity;","                        c = co.toString();","                    }","                    gradient.addColorStop(i / (l - 1), c);","                }","                ","                return gradient;","            }","        }","    }","","    $.plot = function(placeholder, data, options) {","        //var t0 = new Date();","        var plot = new Plot($(placeholder), data, options, $.plot.plugins);","        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));","        return plot;","    };","","    $.plot.version = \"0.7\";","    ","    $.plot.plugins = [];","","    // returns a string with the date d formatted according to fmt","    $.plot.formatDate = function(d, fmt, monthNames) {","        var leftPad = function(n) {","            n = \"\" + n;","            return n.length == 1 ? \"0\" + n : n;","        };","        ","        var r = [];","        var escape = false, padNext = false;","        var hours = d.getUTCHours();","        var isAM = hours &lt; 12;","        if (monthNames == null)","            monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];","","        if (fmt.search(/%p|%P/) != -1) {","            if (hours &gt; 12) {","                hours = hours - 12;","            } else if (hours == 0) {","                hours = 12;","            }","        }","        for (var i = 0; i &lt; fmt.length; ++i) {","            var c = fmt.charAt(i);","            ","            if (escape) {","                switch (c) {","                case 'h': c = \"\" + hours; break;","                case 'H': c = leftPad(hours); break;","                case 'M': c = leftPad(d.getUTCMinutes()); break;","                case 'S': c = leftPad(d.getUTCSeconds()); break;","                case 'd': c = \"\" + d.getUTCDate(); break;","                case 'm': c = \"\" + (d.getUTCMonth() + 1); break;","                case 'y': c = \"\" + d.getUTCFullYear(); break;","                case 'b': c = \"\" + monthNames[d.getUTCMonth()]; break;","                case 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;","                case 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;","                case '0': c = \"\"; padNext = true; break;","                }","                if (c &amp;&amp; padNext) {","                    c = leftPad(c);","                    padNext = false;","                }","                r.push(c);","                if (!padNext)","                    escape = false;","            }","            else {","                if (c == \"%\")","                    escape = true;","                else","                    r.push(c);","            }","        }","        return r.join(\"\");","    };","    ","    // round to nearby lower multiple of base","    function floorInBase(n, base) {","        return base * Math.floor(n / base);","    }","    ","})(jQuery);"];
